// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;

namespace SDL3;

public enum SDL_AudioFormat : uint
{
	/// <unmanaged>SDL_AUDIO_UNKNOWN</unmanaged>
	Unknown = 0x0000u,
	/// <unmanaged>SDL_AUDIO_U8</unmanaged>
	U8 = 0x0008u,
	/// <unmanaged>SDL_AUDIO_S8</unmanaged>
	S8 = 0x8008u,
	/// <unmanaged>SDL_AUDIO_S16LE</unmanaged>
	S16le = 0x8010u,
	/// <unmanaged>SDL_AUDIO_S16BE</unmanaged>
	S16be = 0x9010u,
	/// <unmanaged>SDL_AUDIO_S32LE</unmanaged>
	S32le = 0x8020u,
	/// <unmanaged>SDL_AUDIO_S32BE</unmanaged>
	S32be = 0x9020u,
	/// <unmanaged>SDL_AUDIO_F32LE</unmanaged>
	F32le = 0x8120u,
	/// <unmanaged>SDL_AUDIO_F32BE</unmanaged>
	F32be = 0x9120u,
}

public enum SDL_BlendOperation
{
	/// <unmanaged>SDL_BLENDOPERATION_ADD</unmanaged>
	Add = 0x1,
	/// <unmanaged>SDL_BLENDOPERATION_SUBTRACT</unmanaged>
	Subtract = 0x2,
	/// <unmanaged>SDL_BLENDOPERATION_REV_SUBTRACT</unmanaged>
	RevSubtract = 0x3,
	/// <unmanaged>SDL_BLENDOPERATION_MINIMUM</unmanaged>
	Minimum = 0x4,
	/// <unmanaged>SDL_BLENDOPERATION_MAXIMUM</unmanaged>
	Maximum = 0x5,
}

public enum SDL_BlendFactor
{
	/// <unmanaged>SDL_BLENDFACTOR_ZERO</unmanaged>
	Zero = 0x1,
	/// <unmanaged>SDL_BLENDFACTOR_ONE</unmanaged>
	One = 0x2,
	/// <unmanaged>SDL_BLENDFACTOR_SRC_COLOR</unmanaged>
	SrcColor = 0x3,
	/// <unmanaged>SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR</unmanaged>
	OneMinusSrcColor = 0x4,
	/// <unmanaged>SDL_BLENDFACTOR_SRC_ALPHA</unmanaged>
	SrcAlpha = 0x5,
	/// <unmanaged>SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA</unmanaged>
	OneMinusSrcAlpha = 0x6,
	/// <unmanaged>SDL_BLENDFACTOR_DST_COLOR</unmanaged>
	DstColor = 0x7,
	/// <unmanaged>SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR</unmanaged>
	OneMinusDstColor = 0x8,
	/// <unmanaged>SDL_BLENDFACTOR_DST_ALPHA</unmanaged>
	DstAlpha = 0x9,
	/// <unmanaged>SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA</unmanaged>
	OneMinusDstAlpha = 0xA,
}

public enum SDL_CameraPosition
{
	/// <unmanaged>SDL_CAMERA_POSITION_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_CAMERA_POSITION_FRONT_FACING</unmanaged>
	FrontFacing = 1,
	/// <unmanaged>SDL_CAMERA_POSITION_BACK_FACING</unmanaged>
	BackFacing = 2,
}

public enum SDL_EventType
{
	/// <unmanaged>SDL_EVENT_FIRST</unmanaged>
	First = 0,
	/// <unmanaged>SDL_EVENT_QUIT</unmanaged>
	Quit = 0x100,
	/// <unmanaged>SDL_EVENT_TERMINATING</unmanaged>
	Terminating = 257,
	/// <unmanaged>SDL_EVENT_LOW_MEMORY</unmanaged>
	LowMemory = 258,
	/// <unmanaged>SDL_EVENT_WILL_ENTER_BACKGROUND</unmanaged>
	WillEnterBackground = 259,
	/// <unmanaged>SDL_EVENT_DID_ENTER_BACKGROUND</unmanaged>
	DidEnterBackground = 260,
	/// <unmanaged>SDL_EVENT_WILL_ENTER_FOREGROUND</unmanaged>
	WillEnterForeground = 261,
	/// <unmanaged>SDL_EVENT_DID_ENTER_FOREGROUND</unmanaged>
	DidEnterForeground = 262,
	/// <unmanaged>SDL_EVENT_LOCALE_CHANGED</unmanaged>
	LocaleChanged = 263,
	/// <unmanaged>SDL_EVENT_SYSTEM_THEME_CHANGED</unmanaged>
	SystemThemeChanged = 264,
	/// <unmanaged>SDL_EVENT_DISPLAY_ORIENTATION</unmanaged>
	DisplayOrientation = 0x151,
	/// <unmanaged>SDL_EVENT_DISPLAY_ADDED</unmanaged>
	DisplayAdded = 338,
	/// <unmanaged>SDL_EVENT_DISPLAY_REMOVED</unmanaged>
	DisplayRemoved = 339,
	/// <unmanaged>SDL_EVENT_DISPLAY_MOVED</unmanaged>
	DisplayMoved = 340,
	/// <unmanaged>SDL_EVENT_DISPLAY_DESKTOP_MODE_CHANGED</unmanaged>
	DisplayDesktopModeChanged = 341,
	/// <unmanaged>SDL_EVENT_DISPLAY_CURRENT_MODE_CHANGED</unmanaged>
	DisplayCurrentModeChanged = 342,
	/// <unmanaged>SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED</unmanaged>
	DisplayContentScaleChanged = 343,
	/// <unmanaged>SDL_EVENT_DISPLAY_FIRST</unmanaged>
	DisplayFirst = DisplayOrientation,
	/// <unmanaged>SDL_EVENT_DISPLAY_LAST</unmanaged>
	DisplayLast = DisplayContentScaleChanged,
	/// <unmanaged>SDL_EVENT_WINDOW_SHOWN</unmanaged>
	WindowShown = 0x202,
	/// <unmanaged>SDL_EVENT_WINDOW_HIDDEN</unmanaged>
	WindowHidden = 515,
	/// <unmanaged>SDL_EVENT_WINDOW_EXPOSED</unmanaged>
	WindowExposed = 516,
	/// <unmanaged>SDL_EVENT_WINDOW_MOVED</unmanaged>
	WindowMoved = 517,
	/// <unmanaged>SDL_EVENT_WINDOW_RESIZED</unmanaged>
	WindowResized = 518,
	/// <unmanaged>SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED</unmanaged>
	WindowPixelSizeChanged = 519,
	/// <unmanaged>SDL_EVENT_WINDOW_METAL_VIEW_RESIZED</unmanaged>
	WindowMetalViewResized = 520,
	/// <unmanaged>SDL_EVENT_WINDOW_MINIMIZED</unmanaged>
	WindowMinimized = 521,
	/// <unmanaged>SDL_EVENT_WINDOW_MAXIMIZED</unmanaged>
	WindowMaximized = 522,
	/// <unmanaged>SDL_EVENT_WINDOW_RESTORED</unmanaged>
	WindowRestored = 523,
	/// <unmanaged>SDL_EVENT_WINDOW_MOUSE_ENTER</unmanaged>
	WindowMouseEnter = 524,
	/// <unmanaged>SDL_EVENT_WINDOW_MOUSE_LEAVE</unmanaged>
	WindowMouseLeave = 525,
	/// <unmanaged>SDL_EVENT_WINDOW_FOCUS_GAINED</unmanaged>
	WindowFocusGained = 526,
	/// <unmanaged>SDL_EVENT_WINDOW_FOCUS_LOST</unmanaged>
	WindowFocusLost = 527,
	/// <unmanaged>SDL_EVENT_WINDOW_CLOSE_REQUESTED</unmanaged>
	WindowCloseRequested = 528,
	/// <unmanaged>SDL_EVENT_WINDOW_HIT_TEST</unmanaged>
	WindowHitTest = 529,
	/// <unmanaged>SDL_EVENT_WINDOW_ICCPROF_CHANGED</unmanaged>
	WindowIccprofChanged = 530,
	/// <unmanaged>SDL_EVENT_WINDOW_DISPLAY_CHANGED</unmanaged>
	WindowDisplayChanged = 531,
	/// <unmanaged>SDL_EVENT_WINDOW_DISPLAY_SCALE_CHANGED</unmanaged>
	WindowDisplayScaleChanged = 532,
	/// <unmanaged>SDL_EVENT_WINDOW_SAFE_AREA_CHANGED</unmanaged>
	WindowSafeAreaChanged = 533,
	/// <unmanaged>SDL_EVENT_WINDOW_OCCLUDED</unmanaged>
	WindowOccluded = 534,
	/// <unmanaged>SDL_EVENT_WINDOW_ENTER_FULLSCREEN</unmanaged>
	WindowEnterFullscreen = 535,
	/// <unmanaged>SDL_EVENT_WINDOW_LEAVE_FULLSCREEN</unmanaged>
	WindowLeaveFullscreen = 536,
	/// <unmanaged>SDL_EVENT_WINDOW_DESTROYED</unmanaged>
	WindowDestroyed = 537,
	/// <unmanaged>SDL_EVENT_WINDOW_HDR_STATE_CHANGED</unmanaged>
	WindowHDRStateChanged = 538,
	/// <unmanaged>SDL_EVENT_WINDOW_FIRST</unmanaged>
	WindowFirst = WindowShown,
	/// <unmanaged>SDL_EVENT_WINDOW_LAST</unmanaged>
	WindowLast = WindowHDRStateChanged,
	/// <unmanaged>SDL_EVENT_KEY_DOWN</unmanaged>
	KeyDown = 0x300,
	/// <unmanaged>SDL_EVENT_KEY_UP</unmanaged>
	KeyUp = 769,
	/// <unmanaged>SDL_EVENT_TEXT_EDITING</unmanaged>
	TextEditing = 770,
	/// <unmanaged>SDL_EVENT_TEXT_INPUT</unmanaged>
	TextInput = 771,
	/// <unmanaged>SDL_EVENT_KEYMAP_CHANGED</unmanaged>
	KeymapChanged = 772,
	/// <unmanaged>SDL_EVENT_KEYBOARD_ADDED</unmanaged>
	KeyboardAdded = 773,
	/// <unmanaged>SDL_EVENT_KEYBOARD_REMOVED</unmanaged>
	KeyboardRemoved = 774,
	/// <unmanaged>SDL_EVENT_TEXT_EDITING_CANDIDATES</unmanaged>
	TextEditingCandidates = 775,
	/// <unmanaged>SDL_EVENT_MOUSE_MOTION</unmanaged>
	MouseMotion = 0x400,
	/// <unmanaged>SDL_EVENT_MOUSE_BUTTON_DOWN</unmanaged>
	MouseButtonDown = 1025,
	/// <unmanaged>SDL_EVENT_MOUSE_BUTTON_UP</unmanaged>
	MouseButtonUp = 1026,
	/// <unmanaged>SDL_EVENT_MOUSE_WHEEL</unmanaged>
	MouseWheel = 1027,
	/// <unmanaged>SDL_EVENT_MOUSE_ADDED</unmanaged>
	MouseAdded = 1028,
	/// <unmanaged>SDL_EVENT_MOUSE_REMOVED</unmanaged>
	MouseRemoved = 1029,
	/// <unmanaged>SDL_EVENT_JOYSTICK_AXIS_MOTION</unmanaged>
	JoystickAxisMotion = 0x600,
	/// <unmanaged>SDL_EVENT_JOYSTICK_BALL_MOTION</unmanaged>
	JoystickBallMotion = 1537,
	/// <unmanaged>SDL_EVENT_JOYSTICK_HAT_MOTION</unmanaged>
	JoystickHatMotion = 1538,
	/// <unmanaged>SDL_EVENT_JOYSTICK_BUTTON_DOWN</unmanaged>
	JoystickButtonDown = 1539,
	/// <unmanaged>SDL_EVENT_JOYSTICK_BUTTON_UP</unmanaged>
	JoystickButtonUp = 1540,
	/// <unmanaged>SDL_EVENT_JOYSTICK_ADDED</unmanaged>
	JoystickAdded = 1541,
	/// <unmanaged>SDL_EVENT_JOYSTICK_REMOVED</unmanaged>
	JoystickRemoved = 1542,
	/// <unmanaged>SDL_EVENT_JOYSTICK_BATTERY_UPDATED</unmanaged>
	JoystickBatteryUpdated = 1543,
	/// <unmanaged>SDL_EVENT_JOYSTICK_UPDATE_COMPLETE</unmanaged>
	JoystickUpdateComplete = 1544,
	/// <unmanaged>SDL_EVENT_GAMEPAD_AXIS_MOTION</unmanaged>
	GamepadAxisMotion = 0x650,
	/// <unmanaged>SDL_EVENT_GAMEPAD_BUTTON_DOWN</unmanaged>
	GamepadButtonDown = 1617,
	/// <unmanaged>SDL_EVENT_GAMEPAD_BUTTON_UP</unmanaged>
	GamepadButtonUp = 1618,
	/// <unmanaged>SDL_EVENT_GAMEPAD_ADDED</unmanaged>
	GamepadAdded = 1619,
	/// <unmanaged>SDL_EVENT_GAMEPAD_REMOVED</unmanaged>
	GamepadRemoved = 1620,
	/// <unmanaged>SDL_EVENT_GAMEPAD_REMAPPED</unmanaged>
	GamepadRemapped = 1621,
	/// <unmanaged>SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN</unmanaged>
	GamepadTouchpadDown = 1622,
	/// <unmanaged>SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION</unmanaged>
	GamepadTouchpadMotion = 1623,
	/// <unmanaged>SDL_EVENT_GAMEPAD_TOUCHPAD_UP</unmanaged>
	GamepadTouchpadUp = 1624,
	/// <unmanaged>SDL_EVENT_GAMEPAD_SENSOR_UPDATE</unmanaged>
	GamepadSensorUpdate = 1625,
	/// <unmanaged>SDL_EVENT_GAMEPAD_UPDATE_COMPLETE</unmanaged>
	GamepadUpdateComplete = 1626,
	/// <unmanaged>SDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED</unmanaged>
	GamepadSteamHandleUpdated = 1627,
	/// <unmanaged>SDL_EVENT_FINGER_DOWN</unmanaged>
	FingerDown = 0x700,
	/// <unmanaged>SDL_EVENT_FINGER_UP</unmanaged>
	FingerUp = 1793,
	/// <unmanaged>SDL_EVENT_FINGER_MOTION</unmanaged>
	FingerMotion = 1794,
	/// <unmanaged>SDL_EVENT_CLIPBOARD_UPDATE</unmanaged>
	ClipboardUpdate = 0x900,
	/// <unmanaged>SDL_EVENT_DROP_FILE</unmanaged>
	DropFile = 0x1000,
	/// <unmanaged>SDL_EVENT_DROP_TEXT</unmanaged>
	DropText = 4097,
	/// <unmanaged>SDL_EVENT_DROP_BEGIN</unmanaged>
	DropBegin = 4098,
	/// <unmanaged>SDL_EVENT_DROP_COMPLETE</unmanaged>
	DropComplete = 4099,
	/// <unmanaged>SDL_EVENT_DROP_POSITION</unmanaged>
	DropPosition = 4100,
	/// <unmanaged>SDL_EVENT_AUDIO_DEVICE_ADDED</unmanaged>
	AudioDeviceAdded = 0x1100,
	/// <unmanaged>SDL_EVENT_AUDIO_DEVICE_REMOVED</unmanaged>
	AudioDeviceRemoved = 4353,
	/// <unmanaged>SDL_EVENT_AUDIO_DEVICE_FORMAT_CHANGED</unmanaged>
	AudioDeviceFormatChanged = 4354,
	/// <unmanaged>SDL_EVENT_SENSOR_UPDATE</unmanaged>
	SensorUpdate = 0x1200,
	/// <unmanaged>SDL_EVENT_PEN_PROXIMITY_IN</unmanaged>
	PenProximityIn = 0x1300,
	/// <unmanaged>SDL_EVENT_PEN_PROXIMITY_OUT</unmanaged>
	PenProximityOut = 4865,
	/// <unmanaged>SDL_EVENT_PEN_DOWN</unmanaged>
	PenDown = 4866,
	/// <unmanaged>SDL_EVENT_PEN_UP</unmanaged>
	PenUp = 4867,
	/// <unmanaged>SDL_EVENT_PEN_BUTTON_DOWN</unmanaged>
	PenButtonDown = 4868,
	/// <unmanaged>SDL_EVENT_PEN_BUTTON_UP</unmanaged>
	PenButtonUp = 4869,
	/// <unmanaged>SDL_EVENT_PEN_MOTION</unmanaged>
	PenMotion = 4870,
	/// <unmanaged>SDL_EVENT_PEN_AXIS</unmanaged>
	PenAxis = 4871,
	/// <unmanaged>SDL_EVENT_CAMERA_DEVICE_ADDED</unmanaged>
	CameraDeviceAdded = 0x1400,
	/// <unmanaged>SDL_EVENT_CAMERA_DEVICE_REMOVED</unmanaged>
	CameraDeviceRemoved = 5121,
	/// <unmanaged>SDL_EVENT_CAMERA_DEVICE_APPROVED</unmanaged>
	CameraDeviceApproved = 5122,
	/// <unmanaged>SDL_EVENT_CAMERA_DEVICE_DENIED</unmanaged>
	CameraDeviceDenied = 5123,
	/// <unmanaged>SDL_EVENT_RENDER_TARGETS_RESET</unmanaged>
	RenderTargetsReset = 0x2000,
	/// <unmanaged>SDL_EVENT_RENDER_DEVICE_RESET</unmanaged>
	RenderDeviceReset = 8193,
	/// <unmanaged>SDL_EVENT_POLL_SENTINEL</unmanaged>
	PollSentinel = 0x7F00,
	/// <unmanaged>SDL_EVENT_USER</unmanaged>
	User = 0x8000,
	/// <unmanaged>SDL_EVENT_LAST</unmanaged>
	Last = 0xFFFF,
	/// <unmanaged>SDL_EVENT_ENUM_PADDING</unmanaged>
	EnumPadding = 0x7FFFFFFF,
}

public enum SDL_EventAction
{
	/// <unmanaged>SDL_ADDEVENT</unmanaged>
	AddEvent = 0,
	/// <unmanaged>SDL_PEEKEVENT</unmanaged>
	PeekEvent = 1,
	/// <unmanaged>SDL_GETEVENT</unmanaged>
	GetEvent = 2,
}

public enum SDL_Folder
{
	/// <unmanaged>SDL_FOLDER_HOME</unmanaged>
	SDL_FOLDER_HOME = 0,
	/// <unmanaged>SDL_FOLDER_DESKTOP</unmanaged>
	SDL_FOLDER_DESKTOP = 1,
	/// <unmanaged>SDL_FOLDER_DOCUMENTS</unmanaged>
	SDL_FOLDER_DOCUMENTS = 2,
	/// <unmanaged>SDL_FOLDER_DOWNLOADS</unmanaged>
	SDL_FOLDER_DOWNLOADS = 3,
	/// <unmanaged>SDL_FOLDER_MUSIC</unmanaged>
	SDL_FOLDER_MUSIC = 4,
	/// <unmanaged>SDL_FOLDER_PICTURES</unmanaged>
	SDL_FOLDER_PICTURES = 5,
	/// <unmanaged>SDL_FOLDER_PUBLICSHARE</unmanaged>
	SDL_FOLDER_PUBLICSHARE = 6,
	/// <unmanaged>SDL_FOLDER_SAVEDGAMES</unmanaged>
	SDL_FOLDER_SAVEDGAMES = 7,
	/// <unmanaged>SDL_FOLDER_SCREENSHOTS</unmanaged>
	SDL_FOLDER_SCREENSHOTS = 8,
	/// <unmanaged>SDL_FOLDER_TEMPLATES</unmanaged>
	SDL_FOLDER_TEMPLATES = 9,
	/// <unmanaged>SDL_FOLDER_VIDEOS</unmanaged>
	SDL_FOLDER_VIDEOS = 10,
	/// <unmanaged>SDL_FOLDER_TOTAL</unmanaged>
	SDL_FOLDER_TOTAL = 11,
}

public enum SDL_PathType
{
	/// <unmanaged>SDL_PATHTYPE_NONE</unmanaged>
	SDL_PATHTYPE_NONE = 0,
	/// <unmanaged>SDL_PATHTYPE_FILE</unmanaged>
	SDL_PATHTYPE_FILE = 1,
	/// <unmanaged>SDL_PATHTYPE_DIRECTORY</unmanaged>
	SDL_PATHTYPE_DIRECTORY = 2,
	/// <unmanaged>SDL_PATHTYPE_OTHER</unmanaged>
	SDL_PATHTYPE_OTHER = 3,
}

public enum SDL_GamepadType
{
	/// <unmanaged>SDL_GAMEPAD_TYPE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_GAMEPAD_TYPE_STANDARD</unmanaged>
	Standard = 1,
	/// <unmanaged>SDL_GAMEPAD_TYPE_XBOX360</unmanaged>
	Xbox360 = 2,
	/// <unmanaged>SDL_GAMEPAD_TYPE_XBOXONE</unmanaged>
	Xboxone = 3,
	/// <unmanaged>SDL_GAMEPAD_TYPE_PS3</unmanaged>
	Ps3 = 4,
	/// <unmanaged>SDL_GAMEPAD_TYPE_PS4</unmanaged>
	Ps4 = 5,
	/// <unmanaged>SDL_GAMEPAD_TYPE_PS5</unmanaged>
	Ps5 = 6,
	/// <unmanaged>SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_PRO</unmanaged>
	NintendoSwitchPro = 7,
	/// <unmanaged>SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT</unmanaged>
	NintendoSwitchJoyconLeft = 8,
	/// <unmanaged>SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT</unmanaged>
	NintendoSwitchJoyconRight = 9,
	/// <unmanaged>SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR</unmanaged>
	NintendoSwitchJoyconPair = 10,
	/// <unmanaged>SDL_GAMEPAD_TYPE_MAX</unmanaged>
	Max = 11,
}

public enum SDL_GamepadButton
{
	/// <unmanaged>SDL_GAMEPAD_BUTTON_INVALID</unmanaged>
	Invalid = -1,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_SOUTH</unmanaged>
	South = 0,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_EAST</unmanaged>
	East = 1,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_WEST</unmanaged>
	West = 2,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_NORTH</unmanaged>
	North = 3,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_BACK</unmanaged>
	Back = 4,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_GUIDE</unmanaged>
	Guide = 5,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_START</unmanaged>
	Start = 6,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LEFT_STICK</unmanaged>
	LeftStick = 7,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_RIGHT_STICK</unmanaged>
	RightStick = 8,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LEFT_SHOULDER</unmanaged>
	LeftShoulder = 9,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_RIGHT_SHOULDER</unmanaged>
	RightShoulder = 10,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_DPAD_UP</unmanaged>
	DpadUp = 11,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_DPAD_DOWN</unmanaged>
	DpadDown = 12,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_DPAD_LEFT</unmanaged>
	DpadLeft = 13,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_DPAD_RIGHT</unmanaged>
	DpadRight = 14,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_MISC1</unmanaged>
	Misc1 = 15,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_RIGHT_PADDLE1</unmanaged>
	RightPaddle1 = 16,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LEFT_PADDLE1</unmanaged>
	LeftPaddle1 = 17,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_RIGHT_PADDLE2</unmanaged>
	RightPaddle2 = 18,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LEFT_PADDLE2</unmanaged>
	LeftPaddle2 = 19,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_TOUCHPAD</unmanaged>
	Touchpad = 20,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_MISC2</unmanaged>
	Misc2 = 21,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_MISC3</unmanaged>
	Misc3 = 22,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_MISC4</unmanaged>
	Misc4 = 23,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_MISC5</unmanaged>
	Misc5 = 24,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_MISC6</unmanaged>
	Misc6 = 25,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_MAX</unmanaged>
	Max = 26,
}

public enum SDL_GamepadButtonLabel
{
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_A</unmanaged>
	A = 1,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_B</unmanaged>
	B = 2,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_X</unmanaged>
	X = 3,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_Y</unmanaged>
	Y = 4,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_CROSS</unmanaged>
	Cross = 5,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_CIRCLE</unmanaged>
	Circle = 6,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_SQUARE</unmanaged>
	Square = 7,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_TRIANGLE</unmanaged>
	Triangle = 8,
}

public enum SDL_GamepadAxis
{
	/// <unmanaged>SDL_GAMEPAD_AXIS_INVALID</unmanaged>
	Invalid = -1,
	/// <unmanaged>SDL_GAMEPAD_AXIS_LEFTX</unmanaged>
	Leftx = 0,
	/// <unmanaged>SDL_GAMEPAD_AXIS_LEFTY</unmanaged>
	Lefty = 1,
	/// <unmanaged>SDL_GAMEPAD_AXIS_RIGHTX</unmanaged>
	Rightx = 2,
	/// <unmanaged>SDL_GAMEPAD_AXIS_RIGHTY</unmanaged>
	Righty = 3,
	/// <unmanaged>SDL_GAMEPAD_AXIS_LEFT_TRIGGER</unmanaged>
	LeftTrigger = 4,
	/// <unmanaged>SDL_GAMEPAD_AXIS_RIGHT_TRIGGER</unmanaged>
	RightTrigger = 5,
	/// <unmanaged>SDL_GAMEPAD_AXIS_MAX</unmanaged>
	Max = 6,
}

public enum SDL_GamepadBindingType
{
	/// <unmanaged>SDL_GAMEPAD_BINDTYPE_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SDL_GAMEPAD_BINDTYPE_BUTTON</unmanaged>
	Button = 1,
	/// <unmanaged>SDL_GAMEPAD_BINDTYPE_AXIS</unmanaged>
	Axis = 2,
	/// <unmanaged>SDL_GAMEPAD_BINDTYPE_HAT</unmanaged>
	Hat = 3,
}

public enum SDL_hid_bus_type
{
	/// <unmanaged>SDL_HID_API_BUS_UNKNOWN</unmanaged>
	SDL_HID_API_BUS_UNKNOWN = 0x00,
	/// <unmanaged>SDL_HID_API_BUS_USB</unmanaged>
	SDL_HID_API_BUS_USB = 0x01,
	/// <unmanaged>SDL_HID_API_BUS_BLUETOOTH</unmanaged>
	SDL_HID_API_BUS_BLUETOOTH = 0x02,
	/// <unmanaged>SDL_HID_API_BUS_I2C</unmanaged>
	SDL_HID_API_BUS_I2C = 0x03,
	/// <unmanaged>SDL_HID_API_BUS_SPI</unmanaged>
	SDL_HID_API_BUS_SPI = 0x04,
}

public enum SDL_HintPriority
{
	/// <unmanaged>SDL_HINT_NORMAL</unmanaged>
	Normal = 1,
	/// <unmanaged>SDL_HINT_OVERRIDE</unmanaged>
	Override = 2,
}

public enum SDL_AppResult
{
	/// <unmanaged>SDL_APP_CONTINUE</unmanaged>
	Continue = 0,
	/// <unmanaged>SDL_APP_SUCCESS</unmanaged>
	Success = 1,
	/// <unmanaged>SDL_APP_FAILURE</unmanaged>
	Failure = 2,
}

public enum SDL_IOStatus
{
	/// <unmanaged>SDL_IO_STATUS_READY</unmanaged>
	Ready = 0,
	/// <unmanaged>SDL_IO_STATUS_ERROR</unmanaged>
	Error = 1,
	/// <unmanaged>SDL_IO_STATUS_EOF</unmanaged>
	Eof = 2,
	/// <unmanaged>SDL_IO_STATUS_NOT_READY</unmanaged>
	NotReady = 3,
	/// <unmanaged>SDL_IO_STATUS_READONLY</unmanaged>
	Readonly = 4,
	/// <unmanaged>SDL_IO_STATUS_WRITEONLY</unmanaged>
	Writeonly = 5,
}

public enum SDL_IOWhence
{
	/// <unmanaged>SDL_IO_SEEK_SET</unmanaged>
	SDL_IO_SEEK_SET = 0,
	/// <unmanaged>SDL_IO_SEEK_CUR</unmanaged>
	SDL_IO_SEEK_CUR = 1,
	/// <unmanaged>SDL_IO_SEEK_END</unmanaged>
	SDL_IO_SEEK_END = 2,
}

public enum SDL_JoystickType
{
	/// <unmanaged>SDL_JOYSTICK_TYPE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_JOYSTICK_TYPE_GAMEPAD</unmanaged>
	Gamepad = 1,
	/// <unmanaged>SDL_JOYSTICK_TYPE_WHEEL</unmanaged>
	Wheel = 2,
	/// <unmanaged>SDL_JOYSTICK_TYPE_ARCADE_STICK</unmanaged>
	ArcadeStick = 3,
	/// <unmanaged>SDL_JOYSTICK_TYPE_FLIGHT_STICK</unmanaged>
	FlightStick = 4,
	/// <unmanaged>SDL_JOYSTICK_TYPE_DANCE_PAD</unmanaged>
	DancePad = 5,
	/// <unmanaged>SDL_JOYSTICK_TYPE_GUITAR</unmanaged>
	Guitar = 6,
	/// <unmanaged>SDL_JOYSTICK_TYPE_DRUM_KIT</unmanaged>
	DrumKit = 7,
	/// <unmanaged>SDL_JOYSTICK_TYPE_ARCADE_PAD</unmanaged>
	ArcadePad = 8,
	/// <unmanaged>SDL_JOYSTICK_TYPE_THROTTLE</unmanaged>
	Throttle = 9,
}

public enum SDL_JoystickConnectionState
{
	/// <unmanaged>SDL_JOYSTICK_CONNECTION_INVALID</unmanaged>
	Invalid = -1,
	/// <unmanaged>SDL_JOYSTICK_CONNECTION_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_JOYSTICK_CONNECTION_WIRED</unmanaged>
	Wired = 1,
	/// <unmanaged>SDL_JOYSTICK_CONNECTION_WIRELESS</unmanaged>
	Wireless = 2,
}

public enum SDL_TextInputType
{
	/// <unmanaged>SDL_TEXTINPUT_TYPE_TEXT</unmanaged>
	SDL_TEXTINPUT_TYPE_TEXT = 0,
	/// <unmanaged>SDL_TEXTINPUT_TYPE_TEXT_NAME</unmanaged>
	SDL_TEXTINPUT_TYPE_TEXT_NAME = 1,
	/// <unmanaged>SDL_TEXTINPUT_TYPE_TEXT_EMAIL</unmanaged>
	SDL_TEXTINPUT_TYPE_TEXT_EMAIL = 2,
	/// <unmanaged>SDL_TEXTINPUT_TYPE_TEXT_USERNAME</unmanaged>
	SDL_TEXTINPUT_TYPE_TEXT_USERNAME = 3,
	/// <unmanaged>SDL_TEXTINPUT_TYPE_TEXT_PASSWORD_HIDDEN</unmanaged>
	SDL_TEXTINPUT_TYPE_TEXT_PASSWORD_HIDDEN = 4,
	/// <unmanaged>SDL_TEXTINPUT_TYPE_TEXT_PASSWORD_VISIBLE</unmanaged>
	SDL_TEXTINPUT_TYPE_TEXT_PASSWORD_VISIBLE = 5,
	/// <unmanaged>SDL_TEXTINPUT_TYPE_NUMBER</unmanaged>
	SDL_TEXTINPUT_TYPE_NUMBER = 6,
	/// <unmanaged>SDL_TEXTINPUT_TYPE_NUMBER_PASSWORD_HIDDEN</unmanaged>
	SDL_TEXTINPUT_TYPE_NUMBER_PASSWORD_HIDDEN = 7,
	/// <unmanaged>SDL_TEXTINPUT_TYPE_NUMBER_PASSWORD_VISIBLE</unmanaged>
	SDL_TEXTINPUT_TYPE_NUMBER_PASSWORD_VISIBLE = 8,
}

public enum SDL_Capitalization
{
	/// <unmanaged>SDL_CAPITALIZE_NONE</unmanaged>
	SDL_CAPITALIZE_NONE = 0,
	/// <unmanaged>SDL_CAPITALIZE_SENTENCES</unmanaged>
	SDL_CAPITALIZE_SENTENCES = 1,
	/// <unmanaged>SDL_CAPITALIZE_WORDS</unmanaged>
	SDL_CAPITALIZE_WORDS = 2,
	/// <unmanaged>SDL_CAPITALIZE_LETTERS</unmanaged>
	SDL_CAPITALIZE_LETTERS = 3,
}

public enum SDL_LogCategory
{
	/// <unmanaged>SDL_LOG_CATEGORY_APPLICATION</unmanaged>
	Application = 0,
	/// <unmanaged>SDL_LOG_CATEGORY_ERROR</unmanaged>
	Error = 1,
	/// <unmanaged>SDL_LOG_CATEGORY_ASSERT</unmanaged>
	Assert = 2,
	/// <unmanaged>SDL_LOG_CATEGORY_SYSTEM</unmanaged>
	System = 3,
	/// <unmanaged>SDL_LOG_CATEGORY_AUDIO</unmanaged>
	Audio = 4,
	/// <unmanaged>SDL_LOG_CATEGORY_VIDEO</unmanaged>
	Video = 5,
	/// <unmanaged>SDL_LOG_CATEGORY_RENDER</unmanaged>
	Render = 6,
	/// <unmanaged>SDL_LOG_CATEGORY_GPU</unmanaged>
	GPU = 7,
	/// <unmanaged>SDL_LOG_CATEGORY_INPUT</unmanaged>
	Input = 8,
	/// <unmanaged>SDL_LOG_CATEGORY_TEST</unmanaged>
	Test = 9,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED1</unmanaged>
	Reserved1 = 10,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED2</unmanaged>
	Reserved2 = 11,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED3</unmanaged>
	Reserved3 = 12,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED4</unmanaged>
	Reserved4 = 13,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED5</unmanaged>
	Reserved5 = 14,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED6</unmanaged>
	Reserved6 = 15,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED7</unmanaged>
	Reserved7 = 16,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED8</unmanaged>
	Reserved8 = 17,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED9</unmanaged>
	Reserved9 = 18,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED10</unmanaged>
	Reserved10 = 19,
	/// <unmanaged>SDL_LOG_CATEGORY_CUSTOM</unmanaged>
	Custom = 20,
}

public enum SDL_LogPriority
{
	/// <unmanaged>SDL_LOG_PRIORITY_VERBOSE</unmanaged>
	Verbose = 1,
	/// <unmanaged>SDL_LOG_PRIORITY_DEBUG</unmanaged>
	Debug = 2,
	/// <unmanaged>SDL_LOG_PRIORITY_INFO</unmanaged>
	Info = 3,
	/// <unmanaged>SDL_LOG_PRIORITY_WARN</unmanaged>
	Warn = 4,
	/// <unmanaged>SDL_LOG_PRIORITY_ERROR</unmanaged>
	Error = 5,
	/// <unmanaged>SDL_LOG_PRIORITY_CRITICAL</unmanaged>
	Critical = 6,
	/// <unmanaged>SDL_NUM_LOG_PRIORITIES</unmanaged>
	SDL_NUM_LOG_PRIORITIES = 7,
}

public enum SDL_MessageBoxColorType
{
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_BACKGROUND</unmanaged>
	Background = 0,
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_TEXT</unmanaged>
	Text = 1,
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_BUTTON_BORDER</unmanaged>
	ButtonBorder = 2,
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND</unmanaged>
	ButtonBackground = 3,
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED</unmanaged>
	ButtonSelected = 4,
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_MAX</unmanaged>
	Max = 5,
}

public enum SDL_SystemCursor
{
	/// <unmanaged>SDL_SYSTEM_CURSOR_TEXT</unmanaged>
	Text = 1,
	/// <unmanaged>SDL_SYSTEM_CURSOR_WAIT</unmanaged>
	Wait = 2,
	/// <unmanaged>SDL_SYSTEM_CURSOR_CROSSHAIR</unmanaged>
	Crosshair = 3,
	/// <unmanaged>SDL_SYSTEM_CURSOR_PROGRESS</unmanaged>
	Progress = 4,
	/// <unmanaged>SDL_SYSTEM_CURSOR_NWSE_RESIZE</unmanaged>
	NwseResize = 5,
	/// <unmanaged>SDL_SYSTEM_CURSOR_NESW_RESIZE</unmanaged>
	NeswResize = 6,
	/// <unmanaged>SDL_SYSTEM_CURSOR_EW_RESIZE</unmanaged>
	EwResize = 7,
	/// <unmanaged>SDL_SYSTEM_CURSOR_NS_RESIZE</unmanaged>
	NsResize = 8,
	/// <unmanaged>SDL_SYSTEM_CURSOR_MOVE</unmanaged>
	Move = 9,
	/// <unmanaged>SDL_SYSTEM_CURSOR_NOT_ALLOWED</unmanaged>
	NotAllowed = 10,
	/// <unmanaged>SDL_SYSTEM_CURSOR_POINTER</unmanaged>
	Pointer = 11,
	/// <unmanaged>SDL_SYSTEM_CURSOR_NW_RESIZE</unmanaged>
	NwResize = 12,
	/// <unmanaged>SDL_SYSTEM_CURSOR_N_RESIZE</unmanaged>
	NResize = 13,
	/// <unmanaged>SDL_SYSTEM_CURSOR_NE_RESIZE</unmanaged>
	NeResize = 14,
	/// <unmanaged>SDL_SYSTEM_CURSOR_E_RESIZE</unmanaged>
	EResize = 15,
	/// <unmanaged>SDL_SYSTEM_CURSOR_SE_RESIZE</unmanaged>
	SeResize = 16,
	/// <unmanaged>SDL_SYSTEM_CURSOR_S_RESIZE</unmanaged>
	SResize = 17,
	/// <unmanaged>SDL_SYSTEM_CURSOR_SW_RESIZE</unmanaged>
	SwResize = 18,
	/// <unmanaged>SDL_SYSTEM_CURSOR_W_RESIZE</unmanaged>
	WResize = 19,
	/// <unmanaged>SDL_NUM_SYSTEM_CURSORS</unmanaged>
	SDL_NUM_SYSTEM_CURSORS = 20,
}

public enum SDL_MouseWheelDirection
{
	/// <unmanaged>SDL_MOUSEWHEEL_NORMAL</unmanaged>
	Normal = 0,
	/// <unmanaged>SDL_MOUSEWHEEL_FLIPPED</unmanaged>
	Flipped = 1,
}

public enum SDL_PenAxis
{
	/// <unmanaged>SDL_PEN_AXIS_PRESSURE</unmanaged>
	Pressure = 0,
	/// <unmanaged>SDL_PEN_AXIS_XTILT</unmanaged>
	Xtilt = 1,
	/// <unmanaged>SDL_PEN_AXIS_YTILT</unmanaged>
	Ytilt = 2,
	/// <unmanaged>SDL_PEN_AXIS_DISTANCE</unmanaged>
	Distance = 3,
	/// <unmanaged>SDL_PEN_AXIS_ROTATION</unmanaged>
	Rotation = 4,
	/// <unmanaged>SDL_PEN_AXIS_SLIDER</unmanaged>
	Slider = 5,
	/// <unmanaged>SDL_PEN_AXIS_TANGENTIAL_PRESSURE</unmanaged>
	TangentialPressure = 6,
	/// <unmanaged>SDL_PEN_NUM_AXES</unmanaged>
	NumAxes = 7,
}

public enum SDL_PixelType
{
	/// <unmanaged>SDL_PIXELTYPE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_PIXELTYPE_INDEX1</unmanaged>
	Index1 = 1,
	/// <unmanaged>SDL_PIXELTYPE_INDEX4</unmanaged>
	Index4 = 2,
	/// <unmanaged>SDL_PIXELTYPE_INDEX8</unmanaged>
	Index8 = 3,
	/// <unmanaged>SDL_PIXELTYPE_PACKED8</unmanaged>
	Packed8 = 4,
	/// <unmanaged>SDL_PIXELTYPE_PACKED16</unmanaged>
	Packed16 = 5,
	/// <unmanaged>SDL_PIXELTYPE_PACKED32</unmanaged>
	Packed32 = 6,
	/// <unmanaged>SDL_PIXELTYPE_ARRAYU8</unmanaged>
	ArrayU8 = 7,
	/// <unmanaged>SDL_PIXELTYPE_ARRAYU16</unmanaged>
	ArrayU16 = 8,
	/// <unmanaged>SDL_PIXELTYPE_ARRAYU32</unmanaged>
	ArrayU32 = 9,
	/// <unmanaged>SDL_PIXELTYPE_ARRAYF16</unmanaged>
	ArrayF16 = 10,
	/// <unmanaged>SDL_PIXELTYPE_ARRAYF32</unmanaged>
	ArrayF32 = 11,
	/// <unmanaged>SDL_PIXELTYPE_INDEX2</unmanaged>
	Index2 = 12,
}

public enum SDL_BitmapOrder
{
	/// <unmanaged>SDL_BITMAPORDER_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SDL_BITMAPORDER_4321</unmanaged>
	_4321 = 1,
	/// <unmanaged>SDL_BITMAPORDER_1234</unmanaged>
	_1234 = 2,
}

public enum SDL_PackedOrder
{
	/// <unmanaged>SDL_PACKEDORDER_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SDL_PACKEDORDER_XRGB</unmanaged>
	Xrgb = 1,
	/// <unmanaged>SDL_PACKEDORDER_RGBX</unmanaged>
	Rgbx = 2,
	/// <unmanaged>SDL_PACKEDORDER_ARGB</unmanaged>
	Argb = 3,
	/// <unmanaged>SDL_PACKEDORDER_RGBA</unmanaged>
	Rgba = 4,
	/// <unmanaged>SDL_PACKEDORDER_XBGR</unmanaged>
	Xbgr = 5,
	/// <unmanaged>SDL_PACKEDORDER_BGRX</unmanaged>
	Bgrx = 6,
	/// <unmanaged>SDL_PACKEDORDER_ABGR</unmanaged>
	Abgr = 7,
	/// <unmanaged>SDL_PACKEDORDER_BGRA</unmanaged>
	Bgra = 8,
}

public enum SDL_ArrayOrder
{
	/// <unmanaged>SDL_ARRAYORDER_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SDL_ARRAYORDER_RGB</unmanaged>
	Rgb = 1,
	/// <unmanaged>SDL_ARRAYORDER_RGBA</unmanaged>
	Rgba = 2,
	/// <unmanaged>SDL_ARRAYORDER_ARGB</unmanaged>
	Argb = 3,
	/// <unmanaged>SDL_ARRAYORDER_BGR</unmanaged>
	Bgr = 4,
	/// <unmanaged>SDL_ARRAYORDER_BGRA</unmanaged>
	Bgra = 5,
	/// <unmanaged>SDL_ARRAYORDER_ABGR</unmanaged>
	Abgr = 6,
}

public enum SDL_PackedLayout
{
	/// <unmanaged>SDL_PACKEDLAYOUT_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SDL_PACKEDLAYOUT_332</unmanaged>
	_332 = 1,
	/// <unmanaged>SDL_PACKEDLAYOUT_4444</unmanaged>
	_4444 = 2,
	/// <unmanaged>SDL_PACKEDLAYOUT_1555</unmanaged>
	_1555 = 3,
	/// <unmanaged>SDL_PACKEDLAYOUT_5551</unmanaged>
	_5551 = 4,
	/// <unmanaged>SDL_PACKEDLAYOUT_565</unmanaged>
	_565 = 5,
	/// <unmanaged>SDL_PACKEDLAYOUT_8888</unmanaged>
	_8888 = 6,
	/// <unmanaged>SDL_PACKEDLAYOUT_2101010</unmanaged>
	_2101010 = 7,
	/// <unmanaged>SDL_PACKEDLAYOUT_1010102</unmanaged>
	_1010102 = 8,
}

public enum SDL_PixelFormat : uint
{
	/// <unmanaged>SDL_PIXELFORMAT_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_PIXELFORMAT_INDEX1LSB</unmanaged>
	Index1lsb = 0x11100100u,
	/// <unmanaged>SDL_PIXELFORMAT_INDEX1MSB</unmanaged>
	Index1msb = 0x11200100u,
	/// <unmanaged>SDL_PIXELFORMAT_INDEX2LSB</unmanaged>
	Index2lsb = 0x1c100200u,
	/// <unmanaged>SDL_PIXELFORMAT_INDEX2MSB</unmanaged>
	Index2msb = 0x1c200200u,
	/// <unmanaged>SDL_PIXELFORMAT_INDEX4LSB</unmanaged>
	Index4lsb = 0x12100400u,
	/// <unmanaged>SDL_PIXELFORMAT_INDEX4MSB</unmanaged>
	Index4msb = 0x12200400u,
	/// <unmanaged>SDL_PIXELFORMAT_INDEX8</unmanaged>
	Index8 = 0x13000801u,
	/// <unmanaged>SDL_PIXELFORMAT_RGB332</unmanaged>
	Rgb332 = 0x14110801u,
	/// <unmanaged>SDL_PIXELFORMAT_XRGB4444</unmanaged>
	Xrgb4444 = 0x15120c02u,
	/// <unmanaged>SDL_PIXELFORMAT_XBGR4444</unmanaged>
	Xbgr4444 = 0x15520c02u,
	/// <unmanaged>SDL_PIXELFORMAT_XRGB1555</unmanaged>
	Xrgb1555 = 0x15130f02u,
	/// <unmanaged>SDL_PIXELFORMAT_XBGR1555</unmanaged>
	Xbgr1555 = 0x15530f02u,
	/// <unmanaged>SDL_PIXELFORMAT_ARGB4444</unmanaged>
	Argb4444 = 0x15321002u,
	/// <unmanaged>SDL_PIXELFORMAT_RGBA4444</unmanaged>
	Rgba4444 = 0x15421002u,
	/// <unmanaged>SDL_PIXELFORMAT_ABGR4444</unmanaged>
	Abgr4444 = 0x15721002u,
	/// <unmanaged>SDL_PIXELFORMAT_BGRA4444</unmanaged>
	Bgra4444 = 0x15821002u,
	/// <unmanaged>SDL_PIXELFORMAT_ARGB1555</unmanaged>
	Argb1555 = 0x15331002u,
	/// <unmanaged>SDL_PIXELFORMAT_RGBA5551</unmanaged>
	Rgba5551 = 0x15441002u,
	/// <unmanaged>SDL_PIXELFORMAT_ABGR1555</unmanaged>
	Abgr1555 = 0x15731002u,
	/// <unmanaged>SDL_PIXELFORMAT_BGRA5551</unmanaged>
	Bgra5551 = 0x15841002u,
	/// <unmanaged>SDL_PIXELFORMAT_RGB565</unmanaged>
	Rgb565 = 0x15151002u,
	/// <unmanaged>SDL_PIXELFORMAT_BGR565</unmanaged>
	Bgr565 = 0x15551002u,
	/// <unmanaged>SDL_PIXELFORMAT_RGB24</unmanaged>
	Rgb24 = 0x17101803u,
	/// <unmanaged>SDL_PIXELFORMAT_BGR24</unmanaged>
	Bgr24 = 0x17401803u,
	/// <unmanaged>SDL_PIXELFORMAT_XRGB8888</unmanaged>
	Xrgb8888 = 0x16161804u,
	/// <unmanaged>SDL_PIXELFORMAT_RGBX8888</unmanaged>
	Rgbx8888 = 0x16261804u,
	/// <unmanaged>SDL_PIXELFORMAT_XBGR8888</unmanaged>
	Xbgr8888 = 0x16561804u,
	/// <unmanaged>SDL_PIXELFORMAT_BGRX8888</unmanaged>
	Bgrx8888 = 0x16661804u,
	/// <unmanaged>SDL_PIXELFORMAT_ARGB8888</unmanaged>
	Argb8888 = 0x16362004u,
	/// <unmanaged>SDL_PIXELFORMAT_RGBA8888</unmanaged>
	Rgba8888 = 0x16462004u,
	/// <unmanaged>SDL_PIXELFORMAT_ABGR8888</unmanaged>
	Abgr8888 = 0x16762004u,
	/// <unmanaged>SDL_PIXELFORMAT_BGRA8888</unmanaged>
	Bgra8888 = 0x16862004u,
	/// <unmanaged>SDL_PIXELFORMAT_XRGB2101010</unmanaged>
	Xrgb2101010 = 0x16172004u,
	/// <unmanaged>SDL_PIXELFORMAT_XBGR2101010</unmanaged>
	Xbgr2101010 = 0x16572004u,
	/// <unmanaged>SDL_PIXELFORMAT_ARGB2101010</unmanaged>
	Argb2101010 = 0x16372004u,
	/// <unmanaged>SDL_PIXELFORMAT_ABGR2101010</unmanaged>
	Abgr2101010 = 0x16772004u,
	/// <unmanaged>SDL_PIXELFORMAT_RGB48</unmanaged>
	Rgb48 = 0x18103006u,
	/// <unmanaged>SDL_PIXELFORMAT_BGR48</unmanaged>
	Bgr48 = 0x18403006u,
	/// <unmanaged>SDL_PIXELFORMAT_RGBA64</unmanaged>
	Rgba64 = 0x18204008u,
	/// <unmanaged>SDL_PIXELFORMAT_ARGB64</unmanaged>
	Argb64 = 0x18304008u,
	/// <unmanaged>SDL_PIXELFORMAT_BGRA64</unmanaged>
	Bgra64 = 0x18504008u,
	/// <unmanaged>SDL_PIXELFORMAT_ABGR64</unmanaged>
	Abgr64 = 0x18604008u,
	/// <unmanaged>SDL_PIXELFORMAT_RGB48_FLOAT</unmanaged>
	Rgb48Float = 0x1a103006u,
	/// <unmanaged>SDL_PIXELFORMAT_BGR48_FLOAT</unmanaged>
	Bgr48Float = 0x1a403006u,
	/// <unmanaged>SDL_PIXELFORMAT_RGBA64_FLOAT</unmanaged>
	Rgba64Float = 0x1a204008u,
	/// <unmanaged>SDL_PIXELFORMAT_ARGB64_FLOAT</unmanaged>
	Argb64Float = 0x1a304008u,
	/// <unmanaged>SDL_PIXELFORMAT_BGRA64_FLOAT</unmanaged>
	Bgra64Float = 0x1a504008u,
	/// <unmanaged>SDL_PIXELFORMAT_ABGR64_FLOAT</unmanaged>
	Abgr64Float = 0x1a604008u,
	/// <unmanaged>SDL_PIXELFORMAT_RGB96_FLOAT</unmanaged>
	Rgb96Float = 0x1b10600cu,
	/// <unmanaged>SDL_PIXELFORMAT_BGR96_FLOAT</unmanaged>
	Bgr96Float = 0x1b40600cu,
	/// <unmanaged>SDL_PIXELFORMAT_RGBA128_FLOAT</unmanaged>
	Rgba128Float = 0x1b208010u,
	/// <unmanaged>SDL_PIXELFORMAT_ARGB128_FLOAT</unmanaged>
	Argb128Float = 0x1b308010u,
	/// <unmanaged>SDL_PIXELFORMAT_BGRA128_FLOAT</unmanaged>
	Bgra128Float = 0x1b508010u,
	/// <unmanaged>SDL_PIXELFORMAT_ABGR128_FLOAT</unmanaged>
	Abgr128Float = 0x1b608010u,
	/// <unmanaged>SDL_PIXELFORMAT_YV12</unmanaged>
	Yv12 = 0x32315659u,
	/// <unmanaged>SDL_PIXELFORMAT_IYUV</unmanaged>
	Iyuv = 0x56555949u,
	/// <unmanaged>SDL_PIXELFORMAT_YUY2</unmanaged>
	Yuy2 = 0x32595559u,
	/// <unmanaged>SDL_PIXELFORMAT_UYVY</unmanaged>
	Uyvy = 0x59565955u,
	/// <unmanaged>SDL_PIXELFORMAT_YVYU</unmanaged>
	Yvyu = 0x55595659u,
	/// <unmanaged>SDL_PIXELFORMAT_NV12</unmanaged>
	Nv12 = 0x3231564eu,
	/// <unmanaged>SDL_PIXELFORMAT_NV21</unmanaged>
	Nv21 = 0x3132564eu,
	/// <unmanaged>SDL_PIXELFORMAT_P010</unmanaged>
	P010 = 0x30313050u,
	/// <unmanaged>SDL_PIXELFORMAT_EXTERNAL_OES</unmanaged>
	ExternalOes = 0x2053454fu,
}

public enum SDL_ColorType
{
	/// <unmanaged>SDL_COLOR_TYPE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_COLOR_TYPE_RGB</unmanaged>
	Rgb = 1,
	/// <unmanaged>SDL_COLOR_TYPE_YCBCR</unmanaged>
	Ycbcr = 2,
}

public enum SDL_ColorRange
{
	/// <unmanaged>SDL_COLOR_RANGE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_COLOR_RANGE_LIMITED</unmanaged>
	Limited = 1,
	/// <unmanaged>SDL_COLOR_RANGE_FULL</unmanaged>
	Full = 2,
}

public enum SDL_ColorPrimaries
{
	/// <unmanaged>SDL_COLOR_PRIMARIES_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_COLOR_PRIMARIES_BT709</unmanaged>
	Bt709 = 1,
	/// <unmanaged>SDL_COLOR_PRIMARIES_UNSPECIFIED</unmanaged>
	Unspecified = 2,
	/// <unmanaged>SDL_COLOR_PRIMARIES_BT470M</unmanaged>
	Bt470m = 4,
	/// <unmanaged>SDL_COLOR_PRIMARIES_BT470BG</unmanaged>
	Bt470bg = 5,
	/// <unmanaged>SDL_COLOR_PRIMARIES_BT601</unmanaged>
	Bt601 = 6,
	/// <unmanaged>SDL_COLOR_PRIMARIES_SMPTE240</unmanaged>
	Smpte240 = 7,
	/// <unmanaged>SDL_COLOR_PRIMARIES_GENERIC_FILM</unmanaged>
	GenericFilm = 8,
	/// <unmanaged>SDL_COLOR_PRIMARIES_BT2020</unmanaged>
	Bt2020 = 9,
	/// <unmanaged>SDL_COLOR_PRIMARIES_XYZ</unmanaged>
	Xyz = 10,
	/// <unmanaged>SDL_COLOR_PRIMARIES_SMPTE431</unmanaged>
	Smpte431 = 11,
	/// <unmanaged>SDL_COLOR_PRIMARIES_SMPTE432</unmanaged>
	Smpte432 = 12,
	/// <unmanaged>SDL_COLOR_PRIMARIES_EBU3213</unmanaged>
	Ebu3213 = 22,
	/// <unmanaged>SDL_COLOR_PRIMARIES_CUSTOM</unmanaged>
	Custom = 31,
}

public enum SDL_TransferCharacteristics
{
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_BT709</unmanaged>
	Bt709 = 1,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_UNSPECIFIED</unmanaged>
	Unspecified = 2,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_GAMMA22</unmanaged>
	Gamma22 = 4,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_GAMMA28</unmanaged>
	Gamma28 = 5,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_BT601</unmanaged>
	Bt601 = 6,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_SMPTE240</unmanaged>
	Smpte240 = 7,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_LINEAR</unmanaged>
	Linear = 8,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_LOG100</unmanaged>
	Log100 = 9,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_LOG100_SQRT10</unmanaged>
	Log100Sqrt10 = 10,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_IEC61966</unmanaged>
	Iec61966 = 11,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_BT1361</unmanaged>
	Bt1361 = 12,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_SRGB</unmanaged>
	Srgb = 13,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_BT2020_10BIT</unmanaged>
	Bt202010bit = 14,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_BT2020_12BIT</unmanaged>
	Bt202012bit = 15,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_PQ</unmanaged>
	Pq = 16,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_SMPTE428</unmanaged>
	Smpte428 = 17,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_HLG</unmanaged>
	Hlg = 18,
	/// <unmanaged>SDL_TRANSFER_CHARACTERISTICS_CUSTOM</unmanaged>
	Custom = 31,
}

public enum SDL_MatrixCoefficients
{
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_IDENTITY</unmanaged>
	Identity = 0,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_BT709</unmanaged>
	Bt709 = 1,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_UNSPECIFIED</unmanaged>
	Unspecified = 2,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_FCC</unmanaged>
	Fcc = 4,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_BT470BG</unmanaged>
	Bt470bg = 5,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_BT601</unmanaged>
	Bt601 = 6,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_SMPTE240</unmanaged>
	Smpte240 = 7,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_YCGCO</unmanaged>
	Ycgco = 8,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_BT2020_NCL</unmanaged>
	Bt2020Ncl = 9,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_BT2020_CL</unmanaged>
	Bt2020Cl = 10,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_SMPTE2085</unmanaged>
	Smpte2085 = 11,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_CHROMA_DERIVED_NCL</unmanaged>
	ChromaDerivedNcl = 12,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_CHROMA_DERIVED_CL</unmanaged>
	ChromaDerivedCl = 13,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_ICTCP</unmanaged>
	Ictcp = 14,
	/// <unmanaged>SDL_MATRIX_COEFFICIENTS_CUSTOM</unmanaged>
	Custom = 31,
}

public enum SDL_ChromaLocation
{
	/// <unmanaged>SDL_CHROMA_LOCATION_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SDL_CHROMA_LOCATION_LEFT</unmanaged>
	Left = 1,
	/// <unmanaged>SDL_CHROMA_LOCATION_CENTER</unmanaged>
	Center = 2,
	/// <unmanaged>SDL_CHROMA_LOCATION_TOPLEFT</unmanaged>
	Topleft = 3,
}

public enum SDL_Colorspace
{
	/// <unmanaged>SDL_COLORSPACE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_COLORSPACE_SRGB</unmanaged>
	Srgb = 301991328,
	/// <unmanaged>SDL_COLORSPACE_SRGB_LINEAR</unmanaged>
	SrgbLinear = 301991168,
	/// <unmanaged>SDL_COLORSPACE_HDR10</unmanaged>
	Hdr10 = 301999616,
	/// <unmanaged>SDL_COLORSPACE_JPEG</unmanaged>
	Jpeg = 570426566,
	/// <unmanaged>SDL_COLORSPACE_BT601_LIMITED</unmanaged>
	Bt601Limited = 554703046,
	/// <unmanaged>SDL_COLORSPACE_BT601_FULL</unmanaged>
	Bt601Full = 571480262,
	/// <unmanaged>SDL_COLORSPACE_BT709_LIMITED</unmanaged>
	Bt709Limited = 554697761,
	/// <unmanaged>SDL_COLORSPACE_BT709_FULL</unmanaged>
	Bt709Full = 571474977,
	/// <unmanaged>SDL_COLORSPACE_BT2020_LIMITED</unmanaged>
	Bt2020Limited = 554706441,
	/// <unmanaged>SDL_COLORSPACE_BT2020_FULL</unmanaged>
	Bt2020Full = 571483657,
}

public enum SDL_PowerState
{
	/// <unmanaged>SDL_POWERSTATE_ERROR</unmanaged>
	Error = -1,
	/// <unmanaged>SDL_POWERSTATE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_POWERSTATE_ON_BATTERY</unmanaged>
	OnBattery = 1,
	/// <unmanaged>SDL_POWERSTATE_NO_BATTERY</unmanaged>
	NoBattery = 2,
	/// <unmanaged>SDL_POWERSTATE_CHARGING</unmanaged>
	Charging = 3,
	/// <unmanaged>SDL_POWERSTATE_CHARGED</unmanaged>
	Charged = 4,
}

public enum SDL_PropertyType
{
	/// <unmanaged>SDL_PROPERTY_TYPE_INVALID</unmanaged>
	Invalid = 0,
	/// <unmanaged>SDL_PROPERTY_TYPE_POINTER</unmanaged>
	Pointer = 1,
	/// <unmanaged>SDL_PROPERTY_TYPE_STRING</unmanaged>
	String = 2,
	/// <unmanaged>SDL_PROPERTY_TYPE_NUMBER</unmanaged>
	Number = 3,
	/// <unmanaged>SDL_PROPERTY_TYPE_FLOAT</unmanaged>
	Float = 4,
	/// <unmanaged>SDL_PROPERTY_TYPE_BOOLEAN</unmanaged>
	Boolean = 5,
}

public enum SDL_TextureAccess
{
	/// <unmanaged>SDL_TEXTUREACCESS_STATIC</unmanaged>
	SDL_TEXTUREACCESS_STATIC = 0,
	/// <unmanaged>SDL_TEXTUREACCESS_STREAMING</unmanaged>
	SDL_TEXTUREACCESS_STREAMING = 1,
	/// <unmanaged>SDL_TEXTUREACCESS_TARGET</unmanaged>
	SDL_TEXTUREACCESS_TARGET = 2,
}

public enum SDL_RendererLogicalPresentation
{
	/// <unmanaged>SDL_LOGICAL_PRESENTATION_DISABLED</unmanaged>
	SDL_LOGICAL_PRESENTATION_DISABLED = 0,
	/// <unmanaged>SDL_LOGICAL_PRESENTATION_STRETCH</unmanaged>
	SDL_LOGICAL_PRESENTATION_STRETCH = 1,
	/// <unmanaged>SDL_LOGICAL_PRESENTATION_LETTERBOX</unmanaged>
	SDL_LOGICAL_PRESENTATION_LETTERBOX = 2,
	/// <unmanaged>SDL_LOGICAL_PRESENTATION_OVERSCAN</unmanaged>
	SDL_LOGICAL_PRESENTATION_OVERSCAN = 3,
	/// <unmanaged>SDL_LOGICAL_PRESENTATION_INTEGER_SCALE</unmanaged>
	SDL_LOGICAL_PRESENTATION_INTEGER_SCALE = 4,
}

public enum SDL_Scancode
{
	/// <unmanaged>SDL_SCANCODE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_SCANCODE_A</unmanaged>
	A = 4,
	/// <unmanaged>SDL_SCANCODE_B</unmanaged>
	B = 5,
	/// <unmanaged>SDL_SCANCODE_C</unmanaged>
	C = 6,
	/// <unmanaged>SDL_SCANCODE_D</unmanaged>
	D = 7,
	/// <unmanaged>SDL_SCANCODE_E</unmanaged>
	E = 8,
	/// <unmanaged>SDL_SCANCODE_F</unmanaged>
	F = 9,
	/// <unmanaged>SDL_SCANCODE_G</unmanaged>
	G = 10,
	/// <unmanaged>SDL_SCANCODE_H</unmanaged>
	H = 11,
	/// <unmanaged>SDL_SCANCODE_I</unmanaged>
	I = 12,
	/// <unmanaged>SDL_SCANCODE_J</unmanaged>
	J = 13,
	/// <unmanaged>SDL_SCANCODE_K</unmanaged>
	K = 14,
	/// <unmanaged>SDL_SCANCODE_L</unmanaged>
	L = 15,
	/// <unmanaged>SDL_SCANCODE_M</unmanaged>
	M = 16,
	/// <unmanaged>SDL_SCANCODE_N</unmanaged>
	N = 17,
	/// <unmanaged>SDL_SCANCODE_O</unmanaged>
	O = 18,
	/// <unmanaged>SDL_SCANCODE_P</unmanaged>
	P = 19,
	/// <unmanaged>SDL_SCANCODE_Q</unmanaged>
	Q = 20,
	/// <unmanaged>SDL_SCANCODE_R</unmanaged>
	R = 21,
	/// <unmanaged>SDL_SCANCODE_S</unmanaged>
	S = 22,
	/// <unmanaged>SDL_SCANCODE_T</unmanaged>
	T = 23,
	/// <unmanaged>SDL_SCANCODE_U</unmanaged>
	U = 24,
	/// <unmanaged>SDL_SCANCODE_V</unmanaged>
	V = 25,
	/// <unmanaged>SDL_SCANCODE_W</unmanaged>
	W = 26,
	/// <unmanaged>SDL_SCANCODE_X</unmanaged>
	X = 27,
	/// <unmanaged>SDL_SCANCODE_Y</unmanaged>
	Y = 28,
	/// <unmanaged>SDL_SCANCODE_Z</unmanaged>
	Z = 29,
	/// <unmanaged>SDL_SCANCODE_1</unmanaged>
	_1 = 30,
	/// <unmanaged>SDL_SCANCODE_2</unmanaged>
	_2 = 31,
	/// <unmanaged>SDL_SCANCODE_3</unmanaged>
	_3 = 32,
	/// <unmanaged>SDL_SCANCODE_4</unmanaged>
	_4 = 33,
	/// <unmanaged>SDL_SCANCODE_5</unmanaged>
	_5 = 34,
	/// <unmanaged>SDL_SCANCODE_6</unmanaged>
	_6 = 35,
	/// <unmanaged>SDL_SCANCODE_7</unmanaged>
	_7 = 36,
	/// <unmanaged>SDL_SCANCODE_8</unmanaged>
	_8 = 37,
	/// <unmanaged>SDL_SCANCODE_9</unmanaged>
	_9 = 38,
	/// <unmanaged>SDL_SCANCODE_0</unmanaged>
	_0 = 39,
	/// <unmanaged>SDL_SCANCODE_RETURN</unmanaged>
	Return = 40,
	/// <unmanaged>SDL_SCANCODE_ESCAPE</unmanaged>
	Escape = 41,
	/// <unmanaged>SDL_SCANCODE_BACKSPACE</unmanaged>
	Backspace = 42,
	/// <unmanaged>SDL_SCANCODE_TAB</unmanaged>
	Tab = 43,
	/// <unmanaged>SDL_SCANCODE_SPACE</unmanaged>
	Space = 44,
	/// <unmanaged>SDL_SCANCODE_MINUS</unmanaged>
	Minus = 45,
	/// <unmanaged>SDL_SCANCODE_EQUALS</unmanaged>
	Equals = 46,
	/// <unmanaged>SDL_SCANCODE_LEFTBRACKET</unmanaged>
	LeftBracket = 47,
	/// <unmanaged>SDL_SCANCODE_RIGHTBRACKET</unmanaged>
	RightBracket = 48,
	/// <unmanaged>SDL_SCANCODE_BACKSLASH</unmanaged>
	Backslash = 49,
	/// <unmanaged>SDL_SCANCODE_NONUSHASH</unmanaged>
	NonusHash = 50,
	/// <unmanaged>SDL_SCANCODE_SEMICOLON</unmanaged>
	Semicolon = 51,
	/// <unmanaged>SDL_SCANCODE_APOSTROPHE</unmanaged>
	Apostrophe = 52,
	/// <unmanaged>SDL_SCANCODE_GRAVE</unmanaged>
	Grave = 53,
	/// <unmanaged>SDL_SCANCODE_COMMA</unmanaged>
	Comma = 54,
	/// <unmanaged>SDL_SCANCODE_PERIOD</unmanaged>
	Period = 55,
	/// <unmanaged>SDL_SCANCODE_SLASH</unmanaged>
	Slash = 56,
	/// <unmanaged>SDL_SCANCODE_CAPSLOCK</unmanaged>
	Capslock = 57,
	/// <unmanaged>SDL_SCANCODE_F1</unmanaged>
	F1 = 58,
	/// <unmanaged>SDL_SCANCODE_F2</unmanaged>
	F2 = 59,
	/// <unmanaged>SDL_SCANCODE_F3</unmanaged>
	F3 = 60,
	/// <unmanaged>SDL_SCANCODE_F4</unmanaged>
	F4 = 61,
	/// <unmanaged>SDL_SCANCODE_F5</unmanaged>
	F5 = 62,
	/// <unmanaged>SDL_SCANCODE_F6</unmanaged>
	F6 = 63,
	/// <unmanaged>SDL_SCANCODE_F7</unmanaged>
	F7 = 64,
	/// <unmanaged>SDL_SCANCODE_F8</unmanaged>
	F8 = 65,
	/// <unmanaged>SDL_SCANCODE_F9</unmanaged>
	F9 = 66,
	/// <unmanaged>SDL_SCANCODE_F10</unmanaged>
	F10 = 67,
	/// <unmanaged>SDL_SCANCODE_F11</unmanaged>
	F11 = 68,
	/// <unmanaged>SDL_SCANCODE_F12</unmanaged>
	F12 = 69,
	/// <unmanaged>SDL_SCANCODE_PRINTSCREEN</unmanaged>
	PrintScreen = 70,
	/// <unmanaged>SDL_SCANCODE_SCROLLLOCK</unmanaged>
	ScrollLock = 71,
	/// <unmanaged>SDL_SCANCODE_PAUSE</unmanaged>
	Pause = 72,
	/// <unmanaged>SDL_SCANCODE_INSERT</unmanaged>
	Insert = 73,
	/// <unmanaged>SDL_SCANCODE_HOME</unmanaged>
	Home = 74,
	/// <unmanaged>SDL_SCANCODE_PAGEUP</unmanaged>
	PageUp = 75,
	/// <unmanaged>SDL_SCANCODE_DELETE</unmanaged>
	Delete = 76,
	/// <unmanaged>SDL_SCANCODE_END</unmanaged>
	End = 77,
	/// <unmanaged>SDL_SCANCODE_PAGEDOWN</unmanaged>
	PageDown = 78,
	/// <unmanaged>SDL_SCANCODE_RIGHT</unmanaged>
	Right = 79,
	/// <unmanaged>SDL_SCANCODE_LEFT</unmanaged>
	Left = 80,
	/// <unmanaged>SDL_SCANCODE_DOWN</unmanaged>
	Down = 81,
	/// <unmanaged>SDL_SCANCODE_UP</unmanaged>
	Up = 82,
	/// <unmanaged>SDL_SCANCODE_NUMLOCKCLEAR</unmanaged>
	NumLockClear = 83,
	/// <unmanaged>SDL_SCANCODE_KP_DIVIDE</unmanaged>
	KpDivide = 84,
	/// <unmanaged>SDL_SCANCODE_KP_MULTIPLY</unmanaged>
	KpMultiply = 85,
	/// <unmanaged>SDL_SCANCODE_KP_MINUS</unmanaged>
	KpMinus = 86,
	/// <unmanaged>SDL_SCANCODE_KP_PLUS</unmanaged>
	KpPlus = 87,
	/// <unmanaged>SDL_SCANCODE_KP_ENTER</unmanaged>
	KpEnter = 88,
	/// <unmanaged>SDL_SCANCODE_KP_1</unmanaged>
	Kp1 = 89,
	/// <unmanaged>SDL_SCANCODE_KP_2</unmanaged>
	Kp2 = 90,
	/// <unmanaged>SDL_SCANCODE_KP_3</unmanaged>
	Kp3 = 91,
	/// <unmanaged>SDL_SCANCODE_KP_4</unmanaged>
	Kp4 = 92,
	/// <unmanaged>SDL_SCANCODE_KP_5</unmanaged>
	Kp5 = 93,
	/// <unmanaged>SDL_SCANCODE_KP_6</unmanaged>
	Kp6 = 94,
	/// <unmanaged>SDL_SCANCODE_KP_7</unmanaged>
	Kp7 = 95,
	/// <unmanaged>SDL_SCANCODE_KP_8</unmanaged>
	Kp8 = 96,
	/// <unmanaged>SDL_SCANCODE_KP_9</unmanaged>
	Kp9 = 97,
	/// <unmanaged>SDL_SCANCODE_KP_0</unmanaged>
	Kp0 = 98,
	/// <unmanaged>SDL_SCANCODE_KP_PERIOD</unmanaged>
	KpPeriod = 99,
	/// <unmanaged>SDL_SCANCODE_NONUSBACKSLASH</unmanaged>
	Nonusbackslash = 100,
	/// <unmanaged>SDL_SCANCODE_APPLICATION</unmanaged>
	Application = 101,
	/// <unmanaged>SDL_SCANCODE_POWER</unmanaged>
	Power = 102,
	/// <unmanaged>SDL_SCANCODE_KP_EQUALS</unmanaged>
	KpEquals = 103,
	/// <unmanaged>SDL_SCANCODE_F13</unmanaged>
	F13 = 104,
	/// <unmanaged>SDL_SCANCODE_F14</unmanaged>
	F14 = 105,
	/// <unmanaged>SDL_SCANCODE_F15</unmanaged>
	F15 = 106,
	/// <unmanaged>SDL_SCANCODE_F16</unmanaged>
	F16 = 107,
	/// <unmanaged>SDL_SCANCODE_F17</unmanaged>
	F17 = 108,
	/// <unmanaged>SDL_SCANCODE_F18</unmanaged>
	F18 = 109,
	/// <unmanaged>SDL_SCANCODE_F19</unmanaged>
	F19 = 110,
	/// <unmanaged>SDL_SCANCODE_F20</unmanaged>
	F20 = 111,
	/// <unmanaged>SDL_SCANCODE_F21</unmanaged>
	F21 = 112,
	/// <unmanaged>SDL_SCANCODE_F22</unmanaged>
	F22 = 113,
	/// <unmanaged>SDL_SCANCODE_F23</unmanaged>
	F23 = 114,
	/// <unmanaged>SDL_SCANCODE_F24</unmanaged>
	F24 = 115,
	/// <unmanaged>SDL_SCANCODE_EXECUTE</unmanaged>
	Execute = 116,
	/// <unmanaged>SDL_SCANCODE_HELP</unmanaged>
	Help = 117,
	/// <unmanaged>SDL_SCANCODE_MENU</unmanaged>
	Menu = 118,
	/// <unmanaged>SDL_SCANCODE_SELECT</unmanaged>
	Select = 119,
	/// <unmanaged>SDL_SCANCODE_STOP</unmanaged>
	Stop = 120,
	/// <unmanaged>SDL_SCANCODE_AGAIN</unmanaged>
	Again = 121,
	/// <unmanaged>SDL_SCANCODE_UNDO</unmanaged>
	Undo = 122,
	/// <unmanaged>SDL_SCANCODE_CUT</unmanaged>
	Cut = 123,
	/// <unmanaged>SDL_SCANCODE_COPY</unmanaged>
	Copy = 124,
	/// <unmanaged>SDL_SCANCODE_PASTE</unmanaged>
	Paste = 125,
	/// <unmanaged>SDL_SCANCODE_FIND</unmanaged>
	Find = 126,
	/// <unmanaged>SDL_SCANCODE_MUTE</unmanaged>
	Mute = 127,
	/// <unmanaged>SDL_SCANCODE_VOLUMEUP</unmanaged>
	VolumeUp = 128,
	/// <unmanaged>SDL_SCANCODE_VOLUMEDOWN</unmanaged>
	VolumeDown = 129,
	/// <unmanaged>SDL_SCANCODE_KP_COMMA</unmanaged>
	KpComma = 133,
	/// <unmanaged>SDL_SCANCODE_KP_EQUALSAS400</unmanaged>
	KpEqualsas400 = 134,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL1</unmanaged>
	International1 = 135,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL2</unmanaged>
	International2 = 136,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL3</unmanaged>
	International3 = 137,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL4</unmanaged>
	International4 = 138,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL5</unmanaged>
	International5 = 139,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL6</unmanaged>
	International6 = 140,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL7</unmanaged>
	International7 = 141,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL8</unmanaged>
	International8 = 142,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL9</unmanaged>
	International9 = 143,
	/// <unmanaged>SDL_SCANCODE_LANG1</unmanaged>
	Lang1 = 144,
	/// <unmanaged>SDL_SCANCODE_LANG2</unmanaged>
	Lang2 = 145,
	/// <unmanaged>SDL_SCANCODE_LANG3</unmanaged>
	Lang3 = 146,
	/// <unmanaged>SDL_SCANCODE_LANG4</unmanaged>
	Lang4 = 147,
	/// <unmanaged>SDL_SCANCODE_LANG5</unmanaged>
	Lang5 = 148,
	/// <unmanaged>SDL_SCANCODE_LANG6</unmanaged>
	Lang6 = 149,
	/// <unmanaged>SDL_SCANCODE_LANG7</unmanaged>
	Lang7 = 150,
	/// <unmanaged>SDL_SCANCODE_LANG8</unmanaged>
	Lang8 = 151,
	/// <unmanaged>SDL_SCANCODE_LANG9</unmanaged>
	Lang9 = 152,
	/// <unmanaged>SDL_SCANCODE_ALTERASE</unmanaged>
	Alterase = 153,
	/// <unmanaged>SDL_SCANCODE_SYSREQ</unmanaged>
	Sysreq = 154,
	/// <unmanaged>SDL_SCANCODE_CANCEL</unmanaged>
	Cancel = 155,
	/// <unmanaged>SDL_SCANCODE_CLEAR</unmanaged>
	Clear = 156,
	/// <unmanaged>SDL_SCANCODE_PRIOR</unmanaged>
	Prior = 157,
	/// <unmanaged>SDL_SCANCODE_RETURN2</unmanaged>
	Return2 = 158,
	/// <unmanaged>SDL_SCANCODE_SEPARATOR</unmanaged>
	Separator = 159,
	/// <unmanaged>SDL_SCANCODE_OUT</unmanaged>
	Out = 160,
	/// <unmanaged>SDL_SCANCODE_OPER</unmanaged>
	Oper = 161,
	/// <unmanaged>SDL_SCANCODE_CLEARAGAIN</unmanaged>
	Clearagain = 162,
	/// <unmanaged>SDL_SCANCODE_CRSEL</unmanaged>
	Crsel = 163,
	/// <unmanaged>SDL_SCANCODE_EXSEL</unmanaged>
	Exsel = 164,
	/// <unmanaged>SDL_SCANCODE_KP_00</unmanaged>
	Kp00 = 176,
	/// <unmanaged>SDL_SCANCODE_KP_000</unmanaged>
	Kp000 = 177,
	/// <unmanaged>SDL_SCANCODE_THOUSANDSSEPARATOR</unmanaged>
	Thousandsseparator = 178,
	/// <unmanaged>SDL_SCANCODE_DECIMALSEPARATOR</unmanaged>
	Decimalseparator = 179,
	/// <unmanaged>SDL_SCANCODE_CURRENCYUNIT</unmanaged>
	Currencyunit = 180,
	/// <unmanaged>SDL_SCANCODE_CURRENCYSUBUNIT</unmanaged>
	Currencysubunit = 181,
	/// <unmanaged>SDL_SCANCODE_KP_LEFTPAREN</unmanaged>
	KpLeftParen = 182,
	/// <unmanaged>SDL_SCANCODE_KP_RIGHTPAREN</unmanaged>
	KpRightParen = 183,
	/// <unmanaged>SDL_SCANCODE_KP_LEFTBRACE</unmanaged>
	KpLeftbrace = 184,
	/// <unmanaged>SDL_SCANCODE_KP_RIGHTBRACE</unmanaged>
	KpRightbrace = 185,
	/// <unmanaged>SDL_SCANCODE_KP_TAB</unmanaged>
	KpTab = 186,
	/// <unmanaged>SDL_SCANCODE_KP_BACKSPACE</unmanaged>
	KpBackspace = 187,
	/// <unmanaged>SDL_SCANCODE_KP_A</unmanaged>
	KpA = 188,
	/// <unmanaged>SDL_SCANCODE_KP_B</unmanaged>
	KpB = 189,
	/// <unmanaged>SDL_SCANCODE_KP_C</unmanaged>
	KpC = 190,
	/// <unmanaged>SDL_SCANCODE_KP_D</unmanaged>
	KpD = 191,
	/// <unmanaged>SDL_SCANCODE_KP_E</unmanaged>
	KpE = 192,
	/// <unmanaged>SDL_SCANCODE_KP_F</unmanaged>
	KpF = 193,
	/// <unmanaged>SDL_SCANCODE_KP_XOR</unmanaged>
	KpXor = 194,
	/// <unmanaged>SDL_SCANCODE_KP_POWER</unmanaged>
	KpPower = 195,
	/// <unmanaged>SDL_SCANCODE_KP_PERCENT</unmanaged>
	KpPercent = 196,
	/// <unmanaged>SDL_SCANCODE_KP_LESS</unmanaged>
	KpLess = 197,
	/// <unmanaged>SDL_SCANCODE_KP_GREATER</unmanaged>
	KpGreater = 198,
	/// <unmanaged>SDL_SCANCODE_KP_AMPERSAND</unmanaged>
	KpAmpersand = 199,
	/// <unmanaged>SDL_SCANCODE_KP_DBLAMPERSAND</unmanaged>
	KpDblampersand = 200,
	/// <unmanaged>SDL_SCANCODE_KP_VERTICALBAR</unmanaged>
	KpVerticalbar = 201,
	/// <unmanaged>SDL_SCANCODE_KP_DBLVERTICALBAR</unmanaged>
	KpDblverticalbar = 202,
	/// <unmanaged>SDL_SCANCODE_KP_COLON</unmanaged>
	KpColon = 203,
	/// <unmanaged>SDL_SCANCODE_KP_HASH</unmanaged>
	KpHash = 204,
	/// <unmanaged>SDL_SCANCODE_KP_SPACE</unmanaged>
	KpSpace = 205,
	/// <unmanaged>SDL_SCANCODE_KP_AT</unmanaged>
	KpAt = 206,
	/// <unmanaged>SDL_SCANCODE_KP_EXCLAM</unmanaged>
	KpExclam = 207,
	/// <unmanaged>SDL_SCANCODE_KP_MEMSTORE</unmanaged>
	KpMemstore = 208,
	/// <unmanaged>SDL_SCANCODE_KP_MEMRECALL</unmanaged>
	KpMemrecall = 209,
	/// <unmanaged>SDL_SCANCODE_KP_MEMCLEAR</unmanaged>
	KpMemclear = 210,
	/// <unmanaged>SDL_SCANCODE_KP_MEMADD</unmanaged>
	KpMemadd = 211,
	/// <unmanaged>SDL_SCANCODE_KP_MEMSUBTRACT</unmanaged>
	KpMemsubtract = 212,
	/// <unmanaged>SDL_SCANCODE_KP_MEMMULTIPLY</unmanaged>
	KpMemmultiply = 213,
	/// <unmanaged>SDL_SCANCODE_KP_MEMDIVIDE</unmanaged>
	KpMemdivide = 214,
	/// <unmanaged>SDL_SCANCODE_KP_PLUSMINUS</unmanaged>
	KpPlusMinus = 215,
	/// <unmanaged>SDL_SCANCODE_KP_CLEAR</unmanaged>
	KpClear = 216,
	/// <unmanaged>SDL_SCANCODE_KP_CLEARENTRY</unmanaged>
	KpClearentry = 217,
	/// <unmanaged>SDL_SCANCODE_KP_BINARY</unmanaged>
	KpBinary = 218,
	/// <unmanaged>SDL_SCANCODE_KP_OCTAL</unmanaged>
	KpOctal = 219,
	/// <unmanaged>SDL_SCANCODE_KP_DECIMAL</unmanaged>
	KpDecimal = 220,
	/// <unmanaged>SDL_SCANCODE_KP_HEXADECIMAL</unmanaged>
	KpHexadecimal = 221,
	/// <unmanaged>SDL_SCANCODE_LCTRL</unmanaged>
	LeftControl = 224,
	/// <unmanaged>SDL_SCANCODE_LSHIFT</unmanaged>
	LeftShift = 225,
	/// <unmanaged>SDL_SCANCODE_LALT</unmanaged>
	LeftAlt = 226,
	/// <unmanaged>SDL_SCANCODE_LGUI</unmanaged>
	LeftGui = 227,
	/// <unmanaged>SDL_SCANCODE_RCTRL</unmanaged>
	RightControl = 228,
	/// <unmanaged>SDL_SCANCODE_RSHIFT</unmanaged>
	RightShift = 229,
	/// <unmanaged>SDL_SCANCODE_RALT</unmanaged>
	RightAlt = 230,
	/// <unmanaged>SDL_SCANCODE_RGUI</unmanaged>
	RightGui = 231,
	/// <unmanaged>SDL_SCANCODE_MODE</unmanaged>
	Mode = 257,
	/// <unmanaged>SDL_SCANCODE_SLEEP</unmanaged>
	Sleep = 258,
	/// <unmanaged>SDL_SCANCODE_WAKE</unmanaged>
	Wake = 259,
	/// <unmanaged>SDL_SCANCODE_CHANNEL_INCREMENT</unmanaged>
	ChannelIncrement = 260,
	/// <unmanaged>SDL_SCANCODE_CHANNEL_DECREMENT</unmanaged>
	ChannelDecrement = 261,
	/// <unmanaged>SDL_SCANCODE_MEDIA_PLAY</unmanaged>
	MediaPlay = 262,
	/// <unmanaged>SDL_SCANCODE_MEDIA_PAUSE</unmanaged>
	MediaPause = 263,
	/// <unmanaged>SDL_SCANCODE_MEDIA_RECORD</unmanaged>
	MediaRecord = 264,
	/// <unmanaged>SDL_SCANCODE_MEDIA_FAST_FORWARD</unmanaged>
	MediaFastForward = 265,
	/// <unmanaged>SDL_SCANCODE_MEDIA_REWIND</unmanaged>
	MediaRewind = 266,
	/// <unmanaged>SDL_SCANCODE_MEDIA_NEXT_TRACK</unmanaged>
	MediaNextTrack = 267,
	/// <unmanaged>SDL_SCANCODE_MEDIA_PREVIOUS_TRACK</unmanaged>
	MediaPreviousTrack = 268,
	/// <unmanaged>SDL_SCANCODE_MEDIA_STOP</unmanaged>
	MediaStop = 269,
	/// <unmanaged>SDL_SCANCODE_MEDIA_EJECT</unmanaged>
	MediaEject = 270,
	/// <unmanaged>SDL_SCANCODE_MEDIA_PLAY_PAUSE</unmanaged>
	MediaPlayPause = 271,
	/// <unmanaged>SDL_SCANCODE_MEDIA_SELECT</unmanaged>
	MediaSelect = 272,
	/// <unmanaged>SDL_SCANCODE_AC_NEW</unmanaged>
	AcNew = 273,
	/// <unmanaged>SDL_SCANCODE_AC_OPEN</unmanaged>
	AcOpen = 274,
	/// <unmanaged>SDL_SCANCODE_AC_CLOSE</unmanaged>
	AcClose = 275,
	/// <unmanaged>SDL_SCANCODE_AC_EXIT</unmanaged>
	AcExit = 276,
	/// <unmanaged>SDL_SCANCODE_AC_SAVE</unmanaged>
	AcSave = 277,
	/// <unmanaged>SDL_SCANCODE_AC_PRINT</unmanaged>
	AcPrint = 278,
	/// <unmanaged>SDL_SCANCODE_AC_PROPERTIES</unmanaged>
	AcProperties = 279,
	/// <unmanaged>SDL_SCANCODE_AC_SEARCH</unmanaged>
	AcSearch = 280,
	/// <unmanaged>SDL_SCANCODE_AC_HOME</unmanaged>
	AcHome = 281,
	/// <unmanaged>SDL_SCANCODE_AC_BACK</unmanaged>
	AcBack = 282,
	/// <unmanaged>SDL_SCANCODE_AC_FORWARD</unmanaged>
	AcForward = 283,
	/// <unmanaged>SDL_SCANCODE_AC_STOP</unmanaged>
	AcStop = 284,
	/// <unmanaged>SDL_SCANCODE_AC_REFRESH</unmanaged>
	AcRefresh = 285,
	/// <unmanaged>SDL_SCANCODE_AC_BOOKMARKS</unmanaged>
	AcBookmarks = 286,
	/// <unmanaged>SDL_SCANCODE_SOFTLEFT</unmanaged>
	Softleft = 287,
	/// <unmanaged>SDL_SCANCODE_SOFTRIGHT</unmanaged>
	Softright = 288,
	/// <unmanaged>SDL_SCANCODE_CALL</unmanaged>
	Call = 289,
	/// <unmanaged>SDL_SCANCODE_ENDCALL</unmanaged>
	Endcall = 290,
	/// <unmanaged>SDL_NUM_SCANCODES</unmanaged>
	NumScancodes = 512,
}

public enum SDL_SensorType
{
	/// <unmanaged>SDL_SENSOR_INVALID</unmanaged>
	Invalid = -1,
	/// <unmanaged>SDL_SENSOR_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_SENSOR_ACCEL</unmanaged>
	Accel = 1,
	/// <unmanaged>SDL_SENSOR_GYRO</unmanaged>
	Gyro = 2,
	/// <unmanaged>SDL_SENSOR_ACCEL_L</unmanaged>
	AccelL = 3,
	/// <unmanaged>SDL_SENSOR_GYRO_L</unmanaged>
	GyroL = 4,
	/// <unmanaged>SDL_SENSOR_ACCEL_R</unmanaged>
	AccelR = 5,
	/// <unmanaged>SDL_SENSOR_GYRO_R</unmanaged>
	GyroR = 6,
}

public enum SDL_DUMMY_ENUM
{
	/// <unmanaged>DUMMY_ENUM_VALUE</unmanaged>
	DUMMY_ENUM_VALUE = 0,
}

public enum SDL_ScaleMode
{
	/// <unmanaged>SDL_SCALEMODE_NEAREST</unmanaged>
	Nearest = 0,
	/// <unmanaged>SDL_SCALEMODE_LINEAR</unmanaged>
	Linear = 1,
}

public enum SDL_FlipMode
{
	/// <unmanaged>SDL_FLIP_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SDL_FLIP_HORIZONTAL</unmanaged>
	Horizontal = 1,
	/// <unmanaged>SDL_FLIP_VERTICAL</unmanaged>
	Vertical = 2,
}

public enum SDL_ThreadPriority
{
	/// <unmanaged>SDL_THREAD_PRIORITY_LOW</unmanaged>
	SDL_THREAD_PRIORITY_LOW = 0,
	/// <unmanaged>SDL_THREAD_PRIORITY_NORMAL</unmanaged>
	SDL_THREAD_PRIORITY_NORMAL = 1,
	/// <unmanaged>SDL_THREAD_PRIORITY_HIGH</unmanaged>
	SDL_THREAD_PRIORITY_HIGH = 2,
	/// <unmanaged>SDL_THREAD_PRIORITY_TIME_CRITICAL</unmanaged>
	SDL_THREAD_PRIORITY_TIME_CRITICAL = 3,
}

public enum SDL_DateFormat
{
	/// <unmanaged>SDL_DATE_FORMAT_YYYYMMDD</unmanaged>
	Yyyymmdd = 0,
	/// <unmanaged>SDL_DATE_FORMAT_DDMMYYYY</unmanaged>
	Ddmmyyyy = 1,
	/// <unmanaged>SDL_DATE_FORMAT_MMDDYYYY</unmanaged>
	Mmddyyyy = 2,
}

public enum SDL_TimeFormat
{
	/// <unmanaged>SDL_TIME_FORMAT_24HR</unmanaged>
	_24hr = 0,
	/// <unmanaged>SDL_TIME_FORMAT_12HR</unmanaged>
	_12hr = 1,
}

public enum SDL_TouchDeviceType
{
	/// <unmanaged>SDL_TOUCH_DEVICE_INVALID</unmanaged>
	Invalid = -1,
	/// <unmanaged>SDL_TOUCH_DEVICE_DIRECT</unmanaged>
	Direct = 0,
	/// <unmanaged>SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE</unmanaged>
	IndirectAbsolute = 1,
	/// <unmanaged>SDL_TOUCH_DEVICE_INDIRECT_RELATIVE</unmanaged>
	IndirectRelative = 2,
}

public enum SDL_SystemTheme
{
	/// <unmanaged>SDL_SYSTEM_THEME_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_SYSTEM_THEME_LIGHT</unmanaged>
	Light = 1,
	/// <unmanaged>SDL_SYSTEM_THEME_DARK</unmanaged>
	Dark = 2,
}

public enum SDL_DisplayOrientation
{
	/// <unmanaged>SDL_ORIENTATION_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_ORIENTATION_LANDSCAPE</unmanaged>
	Landscape = 1,
	/// <unmanaged>SDL_ORIENTATION_LANDSCAPE_FLIPPED</unmanaged>
	LandscapeFlipped = 2,
	/// <unmanaged>SDL_ORIENTATION_PORTRAIT</unmanaged>
	Portrait = 3,
	/// <unmanaged>SDL_ORIENTATION_PORTRAIT_FLIPPED</unmanaged>
	PortraitFlipped = 4,
}

public enum SDL_FlashOperation
{
	/// <unmanaged>SDL_FLASH_CANCEL</unmanaged>
	Cancel = 0,
	/// <unmanaged>SDL_FLASH_BRIEFLY</unmanaged>
	Briefly = 1,
	/// <unmanaged>SDL_FLASH_UNTIL_FOCUSED</unmanaged>
	UntilFocused = 2,
}

public enum SDL_GLattr
{
	/// <unmanaged>SDL_GL_RED_SIZE</unmanaged>
	RedSize = 0,
	/// <unmanaged>SDL_GL_GREEN_SIZE</unmanaged>
	GreenSize = 1,
	/// <unmanaged>SDL_GL_BLUE_SIZE</unmanaged>
	BlueSize = 2,
	/// <unmanaged>SDL_GL_ALPHA_SIZE</unmanaged>
	AlphaSize = 3,
	/// <unmanaged>SDL_GL_BUFFER_SIZE</unmanaged>
	BufferSize = 4,
	/// <unmanaged>SDL_GL_DOUBLEBUFFER</unmanaged>
	Doublebuffer = 5,
	/// <unmanaged>SDL_GL_DEPTH_SIZE</unmanaged>
	DepthSize = 6,
	/// <unmanaged>SDL_GL_STENCIL_SIZE</unmanaged>
	StencilSize = 7,
	/// <unmanaged>SDL_GL_ACCUM_RED_SIZE</unmanaged>
	AccumRedSize = 8,
	/// <unmanaged>SDL_GL_ACCUM_GREEN_SIZE</unmanaged>
	AccumGreenSize = 9,
	/// <unmanaged>SDL_GL_ACCUM_BLUE_SIZE</unmanaged>
	AccumBlueSize = 10,
	/// <unmanaged>SDL_GL_ACCUM_ALPHA_SIZE</unmanaged>
	AccumAlphaSize = 11,
	/// <unmanaged>SDL_GL_STEREO</unmanaged>
	Stereo = 12,
	/// <unmanaged>SDL_GL_MULTISAMPLEBUFFERS</unmanaged>
	MultisampleBuffers = 13,
	/// <unmanaged>SDL_GL_MULTISAMPLESAMPLES</unmanaged>
	MultisampleSamples = 14,
	/// <unmanaged>SDL_GL_ACCELERATED_VISUAL</unmanaged>
	AcceleratedVisual = 15,
	/// <unmanaged>SDL_GL_RETAINED_BACKING</unmanaged>
	RetainedBacking = 16,
	/// <unmanaged>SDL_GL_CONTEXT_MAJOR_VERSION</unmanaged>
	ContextMajorVersion = 17,
	/// <unmanaged>SDL_GL_CONTEXT_MINOR_VERSION</unmanaged>
	ContextMinorVersion = 18,
	/// <unmanaged>SDL_GL_CONTEXT_FLAGS</unmanaged>
	ContextFlags = 19,
	/// <unmanaged>SDL_GL_CONTEXT_PROFILE_MASK</unmanaged>
	ContextProfileMask = 20,
	/// <unmanaged>SDL_GL_SHARE_WITH_CURRENT_CONTEXT</unmanaged>
	ShareWithCurrentContext = 21,
	/// <unmanaged>SDL_GL_FRAMEBUFFER_SRGB_CAPABLE</unmanaged>
	FramebufferSrgbCapable = 22,
	/// <unmanaged>SDL_GL_CONTEXT_RELEASE_BEHAVIOR</unmanaged>
	ContextReleaseBehavior = 23,
	/// <unmanaged>SDL_GL_CONTEXT_RESET_NOTIFICATION</unmanaged>
	ContextResetNotification = 24,
	/// <unmanaged>SDL_GL_CONTEXT_NO_ERROR</unmanaged>
	ContextNoError = 25,
	/// <unmanaged>SDL_GL_FLOATBUFFERS</unmanaged>
	Floatbuffers = 26,
	/// <unmanaged>SDL_GL_EGL_PLATFORM</unmanaged>
	EglPlatform = 27,
}

[Flags]
public enum SDL_GLprofile
{
	None = 0,
	/// <unmanaged>SDL_GL_CONTEXT_PROFILE_CORE</unmanaged>
	Core = 0x0001,
	/// <unmanaged>SDL_GL_CONTEXT_PROFILE_COMPATIBILITY</unmanaged>
	Compatibility = 0x0002,
	/// <unmanaged>SDL_GL_CONTEXT_PROFILE_ES</unmanaged>
	Es = 0x0004,
}

[Flags]
public enum SDL_GLcontextFlag
{
	None = 0,
	/// <unmanaged>SDL_GL_CONTEXT_DEBUG_FLAG</unmanaged>
	DebugFlag = 0x0001,
	/// <unmanaged>SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG</unmanaged>
	ForwardCompatibleFlag = 0x0002,
	/// <unmanaged>SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG</unmanaged>
	RobustAccessFlag = 0x0004,
	/// <unmanaged>SDL_GL_CONTEXT_RESET_ISOLATION_FLAG</unmanaged>
	ResetIsolationFlag = 0x0008,
}

[Flags]
public enum SDL_GLcontextReleaseFlag
{
	/// <unmanaged>SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE</unmanaged>
	None = 0x0000,
	/// <unmanaged>SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH</unmanaged>
	Flush = 0x0001,
}

[Flags]
public enum SDL_GLContextResetNotification
{
	None = 0,
	/// <unmanaged>SDL_GL_CONTEXT_RESET_NO_NOTIFICATION</unmanaged>
	NoNotification = 0x0000,
	/// <unmanaged>SDL_GL_CONTEXT_RESET_LOSE_CONTEXT</unmanaged>
	LoseContext = 0x0001,
}

public enum SDL_HitTestResult
{
	/// <unmanaged>SDL_HITTEST_NORMAL</unmanaged>
	Normal = 0,
	/// <unmanaged>SDL_HITTEST_DRAGGABLE</unmanaged>
	Draggable = 1,
	/// <unmanaged>SDL_HITTEST_RESIZE_TOPLEFT</unmanaged>
	ResizeTopleft = 2,
	/// <unmanaged>SDL_HITTEST_RESIZE_TOP</unmanaged>
	ResizeTop = 3,
	/// <unmanaged>SDL_HITTEST_RESIZE_TOPRIGHT</unmanaged>
	ResizeTopright = 4,
	/// <unmanaged>SDL_HITTEST_RESIZE_RIGHT</unmanaged>
	ResizeRight = 5,
	/// <unmanaged>SDL_HITTEST_RESIZE_BOTTOMRIGHT</unmanaged>
	ResizeBottomright = 6,
	/// <unmanaged>SDL_HITTEST_RESIZE_BOTTOM</unmanaged>
	ResizeBottom = 7,
	/// <unmanaged>SDL_HITTEST_RESIZE_BOTTOMLEFT</unmanaged>
	ResizeBottomleft = 8,
	/// <unmanaged>SDL_HITTEST_RESIZE_LEFT</unmanaged>
	ResizeLeft = 9,
}

public enum SDL_WinRT_Path
{
	/// <unmanaged>SDL_WINRT_PATH_INSTALLED_LOCATION</unmanaged>
	InstalledLocation = 0,
	/// <unmanaged>SDL_WINRT_PATH_LOCAL_FOLDER</unmanaged>
	LocalFolder = 1,
	/// <unmanaged>SDL_WINRT_PATH_ROAMING_FOLDER</unmanaged>
	RoamingFolder = 2,
	/// <unmanaged>SDL_WINRT_PATH_TEMP_FOLDER</unmanaged>
	TempFolder = 3,
}

public enum SDL_WinRT_DeviceFamily
{
	/// <unmanaged>SDL_WINRT_DEVICEFAMILY_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_WINRT_DEVICEFAMILY_DESKTOP</unmanaged>
	Desktop = 1,
	/// <unmanaged>SDL_WINRT_DEVICEFAMILY_MOBILE</unmanaged>
	Mobile = 2,
	/// <unmanaged>SDL_WINRT_DEVICEFAMILY_XBOX</unmanaged>
	Xbox = 3,
}

public enum SDL_GPUPrimitiveType
{
	/// <unmanaged>SDL_GPU_PRIMITIVETYPE_POINTLIST</unmanaged>
	PointList = 0,
	/// <unmanaged>SDL_GPU_PRIMITIVETYPE_LINELIST</unmanaged>
	LineList = 1,
	/// <unmanaged>SDL_GPU_PRIMITIVETYPE_LINESTRIP</unmanaged>
	LineStrip = 2,
	/// <unmanaged>SDL_GPU_PRIMITIVETYPE_TRIANGLELIST</unmanaged>
	TriangleList = 3,
	/// <unmanaged>SDL_GPU_PRIMITIVETYPE_TRIANGLESTRIP</unmanaged>
	TriangleStrip = 4,
}

public enum SDL_GPULoadOp
{
	/// <unmanaged>SDL_GPU_LOADOP_LOAD</unmanaged>
	Load = 0,
	/// <unmanaged>SDL_GPU_LOADOP_CLEAR</unmanaged>
	Clear = 1,
	/// <unmanaged>SDL_GPU_LOADOP_DONT_CARE</unmanaged>
	DontCare = 2,
}

public enum SDL_GPUStoreOp
{
	/// <unmanaged>SDL_GPU_STOREOP_STORE</unmanaged>
	Store = 0,
	/// <unmanaged>SDL_GPU_STOREOP_DONT_CARE</unmanaged>
	DontCare = 1,
}

public enum SDL_GPUIndexElementSize
{
	/// <unmanaged>SDL_GPU_INDEXELEMENTSIZE_16BIT</unmanaged>
	UInt16 = 0,
	/// <unmanaged>SDL_GPU_INDEXELEMENTSIZE_32BIT</unmanaged>
	UInt32 = 1,
}

public enum SDL_GPUTextureFormat
{
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_INVALID</unmanaged>
	Invalid = -1,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_A8_UNORM</unmanaged>
	A8Unorm = 0,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8_UNORM</unmanaged>
	R8Unorm = 1,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8G8_UNORM</unmanaged>
	R8G8Unorm = 2,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8G8B8A8_UNORM</unmanaged>
	R8G8B8A8Unorm = 3,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16_UNORM</unmanaged>
	R16Unorm = 4,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16G16_UNORM</unmanaged>
	R16G16Unorm = 5,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16G16B16A16_UNORM</unmanaged>
	R16G16B16A16Unorm = 6,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R10G10B10A2_UNORM</unmanaged>
	R10G10B10A2Unorm = 7,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_B5G6R5_UNORM</unmanaged>
	B5G6R5Unorm = 8,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_B5G5R5A1_UNORM</unmanaged>
	B5G5R5A1Unorm = 9,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_B4G4R4A4_UNORM</unmanaged>
	B4G4R4A4Unorm = 10,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_B8G8R8A8_UNORM</unmanaged>
	B8G8R8A8Unorm = 11,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC1_RGBA_UNORM</unmanaged>
	BC1RGBAUnorm = 12,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC2_RGBA_UNORM</unmanaged>
	BC2RGBAUnorm = 13,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC3_RGBA_UNORM</unmanaged>
	BC3RGBAUnorm = 14,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC4_R_UNORM</unmanaged>
	BC4RUnorm = 15,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC5_RG_UNORM</unmanaged>
	BC5RGUnorm = 16,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC7_RGBA_UNORM</unmanaged>
	BC7RGBAUnorm = 17,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC6H_RGB_FLOAT</unmanaged>
	BC6HRGBFloat = 18,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC6H_RGB_UFLOAT</unmanaged>
	BC6HRGBUfloat = 19,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8_SNORM</unmanaged>
	R8Snorm = 20,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8G8_SNORM</unmanaged>
	R8G8Snorm = 21,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8G8B8A8_SNORM</unmanaged>
	R8G8B8A8Snorm = 22,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16_SNORM</unmanaged>
	R16Snorm = 23,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16G16_SNORM</unmanaged>
	R16G16Snorm = 24,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16G16B16A16_SNORM</unmanaged>
	R16G16B16A16Snorm = 25,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16_FLOAT</unmanaged>
	R16Float = 26,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16G16_FLOAT</unmanaged>
	R16G16Float = 27,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16G16B16A16_FLOAT</unmanaged>
	R16G16B16A16Float = 28,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R32_FLOAT</unmanaged>
	R32Float = 29,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R32G32_FLOAT</unmanaged>
	R32G32Float = 30,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R32G32B32A32_FLOAT</unmanaged>
	R32G32B32A32Float = 31,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R11G11B10_UFLOAT</unmanaged>
	R11G11B10Ufloat = 32,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8_UINT</unmanaged>
	R8Uint = 33,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8G8_UINT</unmanaged>
	R8G8Uint = 34,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8G8B8A8_UINT</unmanaged>
	R8G8B8A8Uint = 35,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16_UINT</unmanaged>
	R16Uint = 36,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16G16_UINT</unmanaged>
	R16G16Uint = 37,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16G16B16A16_UINT</unmanaged>
	R16G16B16A16Uint = 38,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8_INT</unmanaged>
	R8Int = 39,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8G8_INT</unmanaged>
	R8G8Int = 40,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8G8B8A8_INT</unmanaged>
	R8G8B8A8Int = 41,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16_INT</unmanaged>
	R16Int = 42,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16G16_INT</unmanaged>
	R16G16Int = 43,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R16G16B16A16_INT</unmanaged>
	R16G16B16A16Int = 44,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_R8G8B8A8_UNORM_SRGB</unmanaged>
	R8G8B8A8UnormSrgb = 45,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_B8G8R8A8_UNORM_SRGB</unmanaged>
	B8G8R8A8UnormSrgb = 46,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC1_RGBA_UNORM_SRGB</unmanaged>
	BC1RGBAUnormSrgb = 47,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC2_RGBA_UNORM_SRGB</unmanaged>
	BC2RGBAUnormSrgb = 48,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC3_RGBA_UNORM_SRGB</unmanaged>
	BC3RGBAUnormSrgb = 49,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_BC7_RGBA_UNORM_SRGB</unmanaged>
	BC7RGBAUnormSrgb = 50,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_D16_UNORM</unmanaged>
	D16Unorm = 51,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_D24_UNORM</unmanaged>
	D24Unorm = 52,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_D32_FLOAT</unmanaged>
	D32Float = 53,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_D24_UNORM_S8_UINT</unmanaged>
	D24UnormS8Uint = 54,
	/// <unmanaged>SDL_GPU_TEXTUREFORMAT_D32_FLOAT_S8_UINT</unmanaged>
	D32FloatS8Uint = 55,
}

public enum SDL_GPUTextureType
{
	/// <unmanaged>SDL_GPU_TEXTURETYPE_2D</unmanaged>
	Type2D = 0,
	/// <unmanaged>SDL_GPU_TEXTURETYPE_2D_ARRAY</unmanaged>
	Type2DArray = 1,
	/// <unmanaged>SDL_GPU_TEXTURETYPE_3D</unmanaged>
	Type3D = 2,
	/// <unmanaged>SDL_GPU_TEXTURETYPE_CUBE</unmanaged>
	Cube = 3,
}

public enum SDL_GPUSampleCount
{
	/// <unmanaged>SDL_GPU_SAMPLECOUNT_1</unmanaged>
	Count1 = 0,
	/// <unmanaged>SDL_GPU_SAMPLECOUNT_2</unmanaged>
	Count2 = 1,
	/// <unmanaged>SDL_GPU_SAMPLECOUNT_4</unmanaged>
	Count4 = 2,
	/// <unmanaged>SDL_GPU_SAMPLECOUNT_8</unmanaged>
	Count8 = 3,
}

public enum SDL_GPUCubeMapFace
{
	/// <unmanaged>SDL_GPU_CUBEMAPFACE_POSITIVEX</unmanaged>
	PositiveX = 0,
	/// <unmanaged>SDL_GPU_CUBEMAPFACE_NEGATIVEX</unmanaged>
	NegativeX = 1,
	/// <unmanaged>SDL_GPU_CUBEMAPFACE_POSITIVEY</unmanaged>
	PositiveY = 2,
	/// <unmanaged>SDL_GPU_CUBEMAPFACE_NEGATIVEY</unmanaged>
	NegativeY = 3,
	/// <unmanaged>SDL_GPU_CUBEMAPFACE_POSITIVEZ</unmanaged>
	PositiveZ = 4,
	/// <unmanaged>SDL_GPU_CUBEMAPFACE_NEGATIVEZ</unmanaged>
	NegativeZ = 5,
}

public enum SDL_GPUTransferBufferUsage
{
	/// <unmanaged>SDL_GPU_TRANSFERBUFFERUSAGE_UPLOAD</unmanaged>
	Upload = 0,
	/// <unmanaged>SDL_GPU_TRANSFERBUFFERUSAGE_DOWNLOAD</unmanaged>
	Download = 1,
}

public enum SDL_GPUShaderStage
{
	/// <unmanaged>SDL_GPU_SHADERSTAGE_VERTEX</unmanaged>
	Vertex = 0,
	/// <unmanaged>SDL_GPU_SHADERSTAGE_FRAGMENT</unmanaged>
	Fragment = 1,
}

public enum SDL_GPUVertexElementFormat
{
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_INT</unmanaged>
	Int = 0,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_INT2</unmanaged>
	Int2 = 1,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_INT3</unmanaged>
	Int3 = 2,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_INT4</unmanaged>
	Int4 = 3,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_UINT</unmanaged>
	UInt = 4,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_UINT2</unmanaged>
	UInt2 = 5,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_UINT3</unmanaged>
	UInt3 = 6,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_UINT4</unmanaged>
	UInt4 = 7,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_FLOAT</unmanaged>
	Float = 8,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_FLOAT2</unmanaged>
	Float2 = 9,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_FLOAT3</unmanaged>
	Float3 = 10,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_FLOAT4</unmanaged>
	Float4 = 11,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_BYTE2</unmanaged>
	Byte2 = 12,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_BYTE4</unmanaged>
	Byte4 = 13,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_UBYTE2</unmanaged>
	UByte2 = 14,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_UBYTE4</unmanaged>
	UByte4 = 15,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_BYTE2_NORM</unmanaged>
	Byte2Norm = 16,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_BYTE4_NORM</unmanaged>
	Byte4Norm = 17,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_UBYTE2_NORM</unmanaged>
	UByte2Norm = 18,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_UBYTE4_NORM</unmanaged>
	UByte4Norm = 19,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_SHORT2</unmanaged>
	Short2 = 20,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_SHORT4</unmanaged>
	Short4 = 21,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_USHORT2</unmanaged>
	UShort2 = 22,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_USHORT4</unmanaged>
	Ushort4 = 23,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_SHORT2_NORM</unmanaged>
	Short2Norm = 24,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_SHORT4_NORM</unmanaged>
	Short4Norm = 25,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_USHORT2_NORM</unmanaged>
	UShort2Norm = 26,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_USHORT4_NORM</unmanaged>
	Ushort4Norm = 27,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_HALF2</unmanaged>
	Half2 = 28,
	/// <unmanaged>SDL_GPU_VERTEXELEMENTFORMAT_HALF4</unmanaged>
	Half4 = 29,
}

public enum SDL_GPUVertexInputRate
{
	/// <unmanaged>SDL_GPU_VERTEXINPUTRATE_VERTEX</unmanaged>
	Vertex = 0,
	/// <unmanaged>SDL_GPU_VERTEXINPUTRATE_INSTANCE</unmanaged>
	Instance = 1,
}

public enum SDL_GPUFillMode
{
	/// <unmanaged>SDL_GPU_FILLMODE_FILL</unmanaged>
	Fill = 0,
	/// <unmanaged>SDL_GPU_FILLMODE_LINE</unmanaged>
	Line = 1,
}

public enum SDL_GPUCullMode
{
	/// <unmanaged>SDL_GPU_CULLMODE_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SDL_GPU_CULLMODE_FRONT</unmanaged>
	Front = 1,
	/// <unmanaged>SDL_GPU_CULLMODE_BACK</unmanaged>
	Back = 2,
}

public enum SDL_GPUFrontFace
{
	/// <unmanaged>SDL_GPU_FRONTFACE_COUNTER_CLOCKWISE</unmanaged>
	CounterClockwise = 0,
	/// <unmanaged>SDL_GPU_FRONTFACE_CLOCKWISE</unmanaged>
	Clockwise = 1,
}

public enum SDL_GPUCompareOp
{
	/// <unmanaged>SDL_GPU_COMPAREOP_NEVER</unmanaged>
	Never = 0,
	/// <unmanaged>SDL_GPU_COMPAREOP_LESS</unmanaged>
	Less = 1,
	/// <unmanaged>SDL_GPU_COMPAREOP_EQUAL</unmanaged>
	Equal = 2,
	/// <unmanaged>SDL_GPU_COMPAREOP_LESS_OR_EQUAL</unmanaged>
	LessOrEqual = 3,
	/// <unmanaged>SDL_GPU_COMPAREOP_GREATER</unmanaged>
	Greater = 4,
	/// <unmanaged>SDL_GPU_COMPAREOP_NOT_EQUAL</unmanaged>
	NotEqual = 5,
	/// <unmanaged>SDL_GPU_COMPAREOP_GREATER_OR_EQUAL</unmanaged>
	GreaterOrEqual = 6,
	/// <unmanaged>SDL_GPU_COMPAREOP_ALWAYS</unmanaged>
	Always = 7,
}

public enum SDL_GPUStencilOp
{
	/// <unmanaged>SDL_GPU_STENCILOP_KEEP</unmanaged>
	Keep = 0,
	/// <unmanaged>SDL_GPU_STENCILOP_ZERO</unmanaged>
	Zero = 1,
	/// <unmanaged>SDL_GPU_STENCILOP_REPLACE</unmanaged>
	Replace = 2,
	/// <unmanaged>SDL_GPU_STENCILOP_INCREMENT_AND_CLAMP</unmanaged>
	IncrementAndClamp = 3,
	/// <unmanaged>SDL_GPU_STENCILOP_DECREMENT_AND_CLAMP</unmanaged>
	DecrementAndClamp = 4,
	/// <unmanaged>SDL_GPU_STENCILOP_INVERT</unmanaged>
	Invert = 5,
	/// <unmanaged>SDL_GPU_STENCILOP_INCREMENT_AND_WRAP</unmanaged>
	IncrementAndWrap = 6,
	/// <unmanaged>SDL_GPU_STENCILOP_DECREMENT_AND_WRAP</unmanaged>
	DecrementAndWrap = 7,
}

public enum SDL_GPUBlendOp
{
	/// <unmanaged>SDL_GPU_BLENDOP_ADD</unmanaged>
	Add = 0,
	/// <unmanaged>SDL_GPU_BLENDOP_SUBTRACT</unmanaged>
	Subtract = 1,
	/// <unmanaged>SDL_GPU_BLENDOP_REVERSE_SUBTRACT</unmanaged>
	ReverseSubtract = 2,
	/// <unmanaged>SDL_GPU_BLENDOP_MIN</unmanaged>
	Min = 3,
	/// <unmanaged>SDL_GPU_BLENDOP_MAX</unmanaged>
	Max = 4,
}

public enum SDL_GPUBlendFactor
{
	/// <unmanaged>SDL_GPU_BLENDFACTOR_ZERO</unmanaged>
	Zero = 0,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_ONE</unmanaged>
	One = 1,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_SRC_COLOR</unmanaged>
	SrcColor = 2,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_ONE_MINUS_SRC_COLOR</unmanaged>
	OneMinusSrcColor = 3,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_DST_COLOR</unmanaged>
	DstColor = 4,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_ONE_MINUS_DST_COLOR</unmanaged>
	OneMinusDstColor = 5,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_SRC_ALPHA</unmanaged>
	SrcAlpha = 6,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_ONE_MINUS_SRC_ALPHA</unmanaged>
	OneMinusSrcAlpha = 7,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_DST_ALPHA</unmanaged>
	DstAlpha = 8,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_ONE_MINUS_DST_ALPHA</unmanaged>
	OneMinusDstAlpha = 9,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_CONSTANT_COLOR</unmanaged>
	ConstantColor = 10,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_ONE_MINUS_CONSTANT_COLOR</unmanaged>
	OneMinusConstantColor = 11,
	/// <unmanaged>SDL_GPU_BLENDFACTOR_SRC_ALPHA_SATURATE</unmanaged>
	SrcAlphaSaturate = 12,
}

public enum SDL_GPUFilter
{
	/// <unmanaged>SDL_GPU_FILTER_NEAREST</unmanaged>
	Nearest = 0,
	/// <unmanaged>SDL_GPU_FILTER_LINEAR</unmanaged>
	Linear = 1,
}

public enum SDL_GPUSamplerMipmapMode
{
	/// <unmanaged>SDL_GPU_SAMPLERMIPMAPMODE_NEAREST</unmanaged>
	Nearest = 0,
	/// <unmanaged>SDL_GPU_SAMPLERMIPMAPMODE_LINEAR</unmanaged>
	Linear = 1,
}

public enum SDL_GPUSamplerAddressMode
{
	/// <unmanaged>SDL_GPU_SAMPLERADDRESSMODE_REPEAT</unmanaged>
	Repeat = 0,
	/// <unmanaged>SDL_GPU_SAMPLERADDRESSMODE_MIRRORED_REPEAT</unmanaged>
	MirroredRepeat = 1,
	/// <unmanaged>SDL_GPU_SAMPLERADDRESSMODE_CLAMP_TO_EDGE</unmanaged>
	ClampToEdge = 2,
}

public enum SDL_GPUPresentMode
{
	/// <unmanaged>SDL_GPU_PRESENTMODE_VSYNC</unmanaged>
	Vsync = 0,
	/// <unmanaged>SDL_GPU_PRESENTMODE_IMMEDIATE</unmanaged>
	Immediate = 1,
	/// <unmanaged>SDL_GPU_PRESENTMODE_MAILBOX</unmanaged>
	Mailbox = 2,
}

public enum SDL_GPUSwapchainComposition
{
	/// <unmanaged>SDL_GPU_SWAPCHAINCOMPOSITION_SDR</unmanaged>
	SDR = 0,
	/// <unmanaged>SDL_GPU_SWAPCHAINCOMPOSITION_SDR_LINEAR</unmanaged>
	SDRLinear = 1,
	/// <unmanaged>SDL_GPU_SWAPCHAINCOMPOSITION_HDR_EXTENDED_LINEAR</unmanaged>
	HDRExtendedLinear = 2,
	/// <unmanaged>SDL_GPU_SWAPCHAINCOMPOSITION_HDR10_ST2048</unmanaged>
	Hdr10St2048 = 3,
}

public enum SDL_GPUDriver
{
	/// <unmanaged>SDL_GPU_DRIVER_INVALID</unmanaged>
	Invalid = -1,
	/// <unmanaged>SDL_GPU_DRIVER_PRIVATE</unmanaged>
	Private = 0,
	/// <unmanaged>SDL_GPU_DRIVER_VULKAN</unmanaged>
	Vulkan = 1,
	/// <unmanaged>SDL_GPU_DRIVER_D3D11</unmanaged>
	D3D11 = 2,
	/// <unmanaged>SDL_GPU_DRIVER_D3D12</unmanaged>
	D3D12 = 3,
	/// <unmanaged>SDL_GPU_DRIVER_METAL</unmanaged>
	Metal = 4,
}

