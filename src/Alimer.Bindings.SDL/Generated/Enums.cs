// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;

namespace SDL;

public enum SDL_errorcode
{
	/// <unmanaged>SDL_ENOMEM</unmanaged>
	Enomem = 0,
	/// <unmanaged>SDL_EFREAD</unmanaged>
	Efread = 1,
	/// <unmanaged>SDL_EFWRITE</unmanaged>
	Efwrite = 2,
	/// <unmanaged>SDL_EFSEEK</unmanaged>
	Efseek = 3,
	/// <unmanaged>SDL_UNSUPPORTED</unmanaged>
	Unsupported = 4,
	/// <unmanaged>SDL_LASTERROR</unmanaged>
	Lasterror = 5,
}

public enum SDL_PenAxis
{
	/// <unmanaged>SDL_PEN_AXIS_PRESSURE</unmanaged>
	Pressure = 0,
	/// <unmanaged>SDL_PEN_AXIS_XTILT</unmanaged>
	Xtilt = 1,
	/// <unmanaged>SDL_PEN_AXIS_YTILT</unmanaged>
	Ytilt = 2,
	/// <unmanaged>SDL_PEN_AXIS_DISTANCE</unmanaged>
	Distance = 3,
	/// <unmanaged>SDL_PEN_AXIS_ROTATION</unmanaged>
	Rotation = 4,
	/// <unmanaged>SDL_PEN_AXIS_SLIDER</unmanaged>
	Slider = 5,
	/// <unmanaged>SDL_PEN_NUM_AXES</unmanaged>
	NumAxes = 6,
	/// <unmanaged>SDL_PEN_AXIS_LAST</unmanaged>
	Last = NumAxes - 1,
}

public enum SDL_PenSubtype
{
	/// <unmanaged>SDL_PEN_TYPE_ERASER</unmanaged>
	Eraser = 1,
	/// <unmanaged>SDL_PEN_TYPE_PEN</unmanaged>
	Pen = 2,
	/// <unmanaged>SDL_PEN_TYPE_PENCIL</unmanaged>
	Pencil = 3,
	/// <unmanaged>SDL_PEN_TYPE_BRUSH</unmanaged>
	Brush = 4,
	/// <unmanaged>SDL_PEN_TYPE_AIRBRUSH</unmanaged>
	Airbrush = 5,
	/// <unmanaged>SDL_PEN_TYPE_LAST</unmanaged>
	Last = Airbrush,
}

[Flags]
public enum SDL_InitFlags
{
	None = 0,
	/// <unmanaged>SDL_INIT_TIMER</unmanaged>
	Timer = 0x00000001,
	/// <unmanaged>SDL_INIT_AUDIO</unmanaged>
	Audio = 0x00000010,
	/// <unmanaged>SDL_INIT_VIDEO</unmanaged>
	Video = 0x00000020,
	/// <unmanaged>SDL_INIT_JOYSTICK</unmanaged>
	Joystick = 0x00000200,
	/// <unmanaged>SDL_INIT_HAPTIC</unmanaged>
	Haptic = 0x00001000,
	/// <unmanaged>SDL_INIT_GAMEPAD</unmanaged>
	Gamepad = 0x00002000,
	/// <unmanaged>SDL_INIT_EVENTS</unmanaged>
	Events = 0x00004000,
	/// <unmanaged>SDL_INIT_SENSOR</unmanaged>
	Sensor = 0x00008000,
}

public enum SDL_Scancode
{
	/// <unmanaged>SDL_SCANCODE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_SCANCODE_A</unmanaged>
	A = 4,
	/// <unmanaged>SDL_SCANCODE_B</unmanaged>
	B = 5,
	/// <unmanaged>SDL_SCANCODE_C</unmanaged>
	C = 6,
	/// <unmanaged>SDL_SCANCODE_D</unmanaged>
	D = 7,
	/// <unmanaged>SDL_SCANCODE_E</unmanaged>
	E = 8,
	/// <unmanaged>SDL_SCANCODE_F</unmanaged>
	F = 9,
	/// <unmanaged>SDL_SCANCODE_G</unmanaged>
	G = 10,
	/// <unmanaged>SDL_SCANCODE_H</unmanaged>
	H = 11,
	/// <unmanaged>SDL_SCANCODE_I</unmanaged>
	I = 12,
	/// <unmanaged>SDL_SCANCODE_J</unmanaged>
	J = 13,
	/// <unmanaged>SDL_SCANCODE_K</unmanaged>
	K = 14,
	/// <unmanaged>SDL_SCANCODE_L</unmanaged>
	L = 15,
	/// <unmanaged>SDL_SCANCODE_M</unmanaged>
	M = 16,
	/// <unmanaged>SDL_SCANCODE_N</unmanaged>
	N = 17,
	/// <unmanaged>SDL_SCANCODE_O</unmanaged>
	O = 18,
	/// <unmanaged>SDL_SCANCODE_P</unmanaged>
	P = 19,
	/// <unmanaged>SDL_SCANCODE_Q</unmanaged>
	Q = 20,
	/// <unmanaged>SDL_SCANCODE_R</unmanaged>
	R = 21,
	/// <unmanaged>SDL_SCANCODE_S</unmanaged>
	S = 22,
	/// <unmanaged>SDL_SCANCODE_T</unmanaged>
	T = 23,
	/// <unmanaged>SDL_SCANCODE_U</unmanaged>
	U = 24,
	/// <unmanaged>SDL_SCANCODE_V</unmanaged>
	V = 25,
	/// <unmanaged>SDL_SCANCODE_W</unmanaged>
	W = 26,
	/// <unmanaged>SDL_SCANCODE_X</unmanaged>
	X = 27,
	/// <unmanaged>SDL_SCANCODE_Y</unmanaged>
	Y = 28,
	/// <unmanaged>SDL_SCANCODE_Z</unmanaged>
	Z = 29,
	/// <unmanaged>SDL_SCANCODE_1</unmanaged>
	_1 = 30,
	/// <unmanaged>SDL_SCANCODE_2</unmanaged>
	_2 = 31,
	/// <unmanaged>SDL_SCANCODE_3</unmanaged>
	_3 = 32,
	/// <unmanaged>SDL_SCANCODE_4</unmanaged>
	_4 = 33,
	/// <unmanaged>SDL_SCANCODE_5</unmanaged>
	_5 = 34,
	/// <unmanaged>SDL_SCANCODE_6</unmanaged>
	_6 = 35,
	/// <unmanaged>SDL_SCANCODE_7</unmanaged>
	_7 = 36,
	/// <unmanaged>SDL_SCANCODE_8</unmanaged>
	_8 = 37,
	/// <unmanaged>SDL_SCANCODE_9</unmanaged>
	_9 = 38,
	/// <unmanaged>SDL_SCANCODE_0</unmanaged>
	_0 = 39,
	/// <unmanaged>SDL_SCANCODE_RETURN</unmanaged>
	Return = 40,
	/// <unmanaged>SDL_SCANCODE_ESCAPE</unmanaged>
	Escape = 41,
	/// <unmanaged>SDL_SCANCODE_BACKSPACE</unmanaged>
	Backspace = 42,
	/// <unmanaged>SDL_SCANCODE_TAB</unmanaged>
	Tab = 43,
	/// <unmanaged>SDL_SCANCODE_SPACE</unmanaged>
	Space = 44,
	/// <unmanaged>SDL_SCANCODE_MINUS</unmanaged>
	Minus = 45,
	/// <unmanaged>SDL_SCANCODE_EQUALS</unmanaged>
	Equals = 46,
	/// <unmanaged>SDL_SCANCODE_LEFTBRACKET</unmanaged>
	LeftBracket = 47,
	/// <unmanaged>SDL_SCANCODE_RIGHTBRACKET</unmanaged>
	RightBracket = 48,
	/// <unmanaged>SDL_SCANCODE_BACKSLASH</unmanaged>
	Backslash = 49,
	/// <unmanaged>SDL_SCANCODE_NONUSHASH</unmanaged>
	NonusHash = 50,
	/// <unmanaged>SDL_SCANCODE_SEMICOLON</unmanaged>
	Semicolon = 51,
	/// <unmanaged>SDL_SCANCODE_APOSTROPHE</unmanaged>
	Apostrophe = 52,
	/// <unmanaged>SDL_SCANCODE_GRAVE</unmanaged>
	Grave = 53,
	/// <unmanaged>SDL_SCANCODE_COMMA</unmanaged>
	Comma = 54,
	/// <unmanaged>SDL_SCANCODE_PERIOD</unmanaged>
	Period = 55,
	/// <unmanaged>SDL_SCANCODE_SLASH</unmanaged>
	Slash = 56,
	/// <unmanaged>SDL_SCANCODE_CAPSLOCK</unmanaged>
	Capslock = 57,
	/// <unmanaged>SDL_SCANCODE_F1</unmanaged>
	F1 = 58,
	/// <unmanaged>SDL_SCANCODE_F2</unmanaged>
	F2 = 59,
	/// <unmanaged>SDL_SCANCODE_F3</unmanaged>
	F3 = 60,
	/// <unmanaged>SDL_SCANCODE_F4</unmanaged>
	F4 = 61,
	/// <unmanaged>SDL_SCANCODE_F5</unmanaged>
	F5 = 62,
	/// <unmanaged>SDL_SCANCODE_F6</unmanaged>
	F6 = 63,
	/// <unmanaged>SDL_SCANCODE_F7</unmanaged>
	F7 = 64,
	/// <unmanaged>SDL_SCANCODE_F8</unmanaged>
	F8 = 65,
	/// <unmanaged>SDL_SCANCODE_F9</unmanaged>
	F9 = 66,
	/// <unmanaged>SDL_SCANCODE_F10</unmanaged>
	F10 = 67,
	/// <unmanaged>SDL_SCANCODE_F11</unmanaged>
	F11 = 68,
	/// <unmanaged>SDL_SCANCODE_F12</unmanaged>
	F12 = 69,
	/// <unmanaged>SDL_SCANCODE_PRINTSCREEN</unmanaged>
	PrintScreen = 70,
	/// <unmanaged>SDL_SCANCODE_SCROLLLOCK</unmanaged>
	ScrollLock = 71,
	/// <unmanaged>SDL_SCANCODE_PAUSE</unmanaged>
	Pause = 72,
	/// <unmanaged>SDL_SCANCODE_INSERT</unmanaged>
	Insert = 73,
	/// <unmanaged>SDL_SCANCODE_HOME</unmanaged>
	Home = 74,
	/// <unmanaged>SDL_SCANCODE_PAGEUP</unmanaged>
	PageUp = 75,
	/// <unmanaged>SDL_SCANCODE_DELETE</unmanaged>
	Delete = 76,
	/// <unmanaged>SDL_SCANCODE_END</unmanaged>
	End = 77,
	/// <unmanaged>SDL_SCANCODE_PAGEDOWN</unmanaged>
	PageDown = 78,
	/// <unmanaged>SDL_SCANCODE_RIGHT</unmanaged>
	Right = 79,
	/// <unmanaged>SDL_SCANCODE_LEFT</unmanaged>
	Left = 80,
	/// <unmanaged>SDL_SCANCODE_DOWN</unmanaged>
	Down = 81,
	/// <unmanaged>SDL_SCANCODE_UP</unmanaged>
	Up = 82,
	/// <unmanaged>SDL_SCANCODE_NUMLOCKCLEAR</unmanaged>
	NumLockClear = 83,
	/// <unmanaged>SDL_SCANCODE_KP_DIVIDE</unmanaged>
	KpDivide = 84,
	/// <unmanaged>SDL_SCANCODE_KP_MULTIPLY</unmanaged>
	KpMultiply = 85,
	/// <unmanaged>SDL_SCANCODE_KP_MINUS</unmanaged>
	KpMinus = 86,
	/// <unmanaged>SDL_SCANCODE_KP_PLUS</unmanaged>
	KpPlus = 87,
	/// <unmanaged>SDL_SCANCODE_KP_ENTER</unmanaged>
	KpEnter = 88,
	/// <unmanaged>SDL_SCANCODE_KP_1</unmanaged>
	Kp1 = 89,
	/// <unmanaged>SDL_SCANCODE_KP_2</unmanaged>
	Kp2 = 90,
	/// <unmanaged>SDL_SCANCODE_KP_3</unmanaged>
	Kp3 = 91,
	/// <unmanaged>SDL_SCANCODE_KP_4</unmanaged>
	Kp4 = 92,
	/// <unmanaged>SDL_SCANCODE_KP_5</unmanaged>
	Kp5 = 93,
	/// <unmanaged>SDL_SCANCODE_KP_6</unmanaged>
	Kp6 = 94,
	/// <unmanaged>SDL_SCANCODE_KP_7</unmanaged>
	Kp7 = 95,
	/// <unmanaged>SDL_SCANCODE_KP_8</unmanaged>
	Kp8 = 96,
	/// <unmanaged>SDL_SCANCODE_KP_9</unmanaged>
	Kp9 = 97,
	/// <unmanaged>SDL_SCANCODE_KP_0</unmanaged>
	Kp0 = 98,
	/// <unmanaged>SDL_SCANCODE_KP_PERIOD</unmanaged>
	KpPeriod = 99,
	/// <unmanaged>SDL_SCANCODE_NONUSBACKSLASH</unmanaged>
	Nonusbackslash = 100,
	/// <unmanaged>SDL_SCANCODE_APPLICATION</unmanaged>
	Application = 101,
	/// <unmanaged>SDL_SCANCODE_POWER</unmanaged>
	Power = 102,
	/// <unmanaged>SDL_SCANCODE_KP_EQUALS</unmanaged>
	KpEquals = 103,
	/// <unmanaged>SDL_SCANCODE_F13</unmanaged>
	F13 = 104,
	/// <unmanaged>SDL_SCANCODE_F14</unmanaged>
	F14 = 105,
	/// <unmanaged>SDL_SCANCODE_F15</unmanaged>
	F15 = 106,
	/// <unmanaged>SDL_SCANCODE_F16</unmanaged>
	F16 = 107,
	/// <unmanaged>SDL_SCANCODE_F17</unmanaged>
	F17 = 108,
	/// <unmanaged>SDL_SCANCODE_F18</unmanaged>
	F18 = 109,
	/// <unmanaged>SDL_SCANCODE_F19</unmanaged>
	F19 = 110,
	/// <unmanaged>SDL_SCANCODE_F20</unmanaged>
	F20 = 111,
	/// <unmanaged>SDL_SCANCODE_F21</unmanaged>
	F21 = 112,
	/// <unmanaged>SDL_SCANCODE_F22</unmanaged>
	F22 = 113,
	/// <unmanaged>SDL_SCANCODE_F23</unmanaged>
	F23 = 114,
	/// <unmanaged>SDL_SCANCODE_F24</unmanaged>
	F24 = 115,
	/// <unmanaged>SDL_SCANCODE_EXECUTE</unmanaged>
	Execute = 116,
	/// <unmanaged>SDL_SCANCODE_HELP</unmanaged>
	Help = 117,
	/// <unmanaged>SDL_SCANCODE_MENU</unmanaged>
	Menu = 118,
	/// <unmanaged>SDL_SCANCODE_SELECT</unmanaged>
	Select = 119,
	/// <unmanaged>SDL_SCANCODE_STOP</unmanaged>
	Stop = 120,
	/// <unmanaged>SDL_SCANCODE_AGAIN</unmanaged>
	Again = 121,
	/// <unmanaged>SDL_SCANCODE_UNDO</unmanaged>
	Undo = 122,
	/// <unmanaged>SDL_SCANCODE_CUT</unmanaged>
	Cut = 123,
	/// <unmanaged>SDL_SCANCODE_COPY</unmanaged>
	Copy = 124,
	/// <unmanaged>SDL_SCANCODE_PASTE</unmanaged>
	Paste = 125,
	/// <unmanaged>SDL_SCANCODE_FIND</unmanaged>
	Find = 126,
	/// <unmanaged>SDL_SCANCODE_MUTE</unmanaged>
	Mute = 127,
	/// <unmanaged>SDL_SCANCODE_VOLUMEUP</unmanaged>
	VolumeUp = 128,
	/// <unmanaged>SDL_SCANCODE_VOLUMEDOWN</unmanaged>
	VolumeDown = 129,
	/// <unmanaged>SDL_SCANCODE_KP_COMMA</unmanaged>
	KpComma = 133,
	/// <unmanaged>SDL_SCANCODE_KP_EQUALSAS400</unmanaged>
	KpEqualsas400 = 134,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL1</unmanaged>
	International1 = 135,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL2</unmanaged>
	International2 = 136,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL3</unmanaged>
	International3 = 137,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL4</unmanaged>
	International4 = 138,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL5</unmanaged>
	International5 = 139,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL6</unmanaged>
	International6 = 140,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL7</unmanaged>
	International7 = 141,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL8</unmanaged>
	International8 = 142,
	/// <unmanaged>SDL_SCANCODE_INTERNATIONAL9</unmanaged>
	International9 = 143,
	/// <unmanaged>SDL_SCANCODE_LANG1</unmanaged>
	Lang1 = 144,
	/// <unmanaged>SDL_SCANCODE_LANG2</unmanaged>
	Lang2 = 145,
	/// <unmanaged>SDL_SCANCODE_LANG3</unmanaged>
	Lang3 = 146,
	/// <unmanaged>SDL_SCANCODE_LANG4</unmanaged>
	Lang4 = 147,
	/// <unmanaged>SDL_SCANCODE_LANG5</unmanaged>
	Lang5 = 148,
	/// <unmanaged>SDL_SCANCODE_LANG6</unmanaged>
	Lang6 = 149,
	/// <unmanaged>SDL_SCANCODE_LANG7</unmanaged>
	Lang7 = 150,
	/// <unmanaged>SDL_SCANCODE_LANG8</unmanaged>
	Lang8 = 151,
	/// <unmanaged>SDL_SCANCODE_LANG9</unmanaged>
	Lang9 = 152,
	/// <unmanaged>SDL_SCANCODE_ALTERASE</unmanaged>
	Alterase = 153,
	/// <unmanaged>SDL_SCANCODE_SYSREQ</unmanaged>
	Sysreq = 154,
	/// <unmanaged>SDL_SCANCODE_CANCEL</unmanaged>
	Cancel = 155,
	/// <unmanaged>SDL_SCANCODE_CLEAR</unmanaged>
	Clear = 156,
	/// <unmanaged>SDL_SCANCODE_PRIOR</unmanaged>
	Prior = 157,
	/// <unmanaged>SDL_SCANCODE_RETURN2</unmanaged>
	Return2 = 158,
	/// <unmanaged>SDL_SCANCODE_SEPARATOR</unmanaged>
	Separator = 159,
	/// <unmanaged>SDL_SCANCODE_OUT</unmanaged>
	Out = 160,
	/// <unmanaged>SDL_SCANCODE_OPER</unmanaged>
	Oper = 161,
	/// <unmanaged>SDL_SCANCODE_CLEARAGAIN</unmanaged>
	Clearagain = 162,
	/// <unmanaged>SDL_SCANCODE_CRSEL</unmanaged>
	Crsel = 163,
	/// <unmanaged>SDL_SCANCODE_EXSEL</unmanaged>
	Exsel = 164,
	/// <unmanaged>SDL_SCANCODE_KP_00</unmanaged>
	Kp00 = 176,
	/// <unmanaged>SDL_SCANCODE_KP_000</unmanaged>
	Kp000 = 177,
	/// <unmanaged>SDL_SCANCODE_THOUSANDSSEPARATOR</unmanaged>
	Thousandsseparator = 178,
	/// <unmanaged>SDL_SCANCODE_DECIMALSEPARATOR</unmanaged>
	Decimalseparator = 179,
	/// <unmanaged>SDL_SCANCODE_CURRENCYUNIT</unmanaged>
	Currencyunit = 180,
	/// <unmanaged>SDL_SCANCODE_CURRENCYSUBUNIT</unmanaged>
	Currencysubunit = 181,
	/// <unmanaged>SDL_SCANCODE_KP_LEFTPAREN</unmanaged>
	KpLeftparen = 182,
	/// <unmanaged>SDL_SCANCODE_KP_RIGHTPAREN</unmanaged>
	KpRightparen = 183,
	/// <unmanaged>SDL_SCANCODE_KP_LEFTBRACE</unmanaged>
	KpLeftbrace = 184,
	/// <unmanaged>SDL_SCANCODE_KP_RIGHTBRACE</unmanaged>
	KpRightbrace = 185,
	/// <unmanaged>SDL_SCANCODE_KP_TAB</unmanaged>
	KpTab = 186,
	/// <unmanaged>SDL_SCANCODE_KP_BACKSPACE</unmanaged>
	KpBackspace = 187,
	/// <unmanaged>SDL_SCANCODE_KP_A</unmanaged>
	KpA = 188,
	/// <unmanaged>SDL_SCANCODE_KP_B</unmanaged>
	KpB = 189,
	/// <unmanaged>SDL_SCANCODE_KP_C</unmanaged>
	KpC = 190,
	/// <unmanaged>SDL_SCANCODE_KP_D</unmanaged>
	KpD = 191,
	/// <unmanaged>SDL_SCANCODE_KP_E</unmanaged>
	KpE = 192,
	/// <unmanaged>SDL_SCANCODE_KP_F</unmanaged>
	KpF = 193,
	/// <unmanaged>SDL_SCANCODE_KP_XOR</unmanaged>
	KpXor = 194,
	/// <unmanaged>SDL_SCANCODE_KP_POWER</unmanaged>
	KpPower = 195,
	/// <unmanaged>SDL_SCANCODE_KP_PERCENT</unmanaged>
	KpPercent = 196,
	/// <unmanaged>SDL_SCANCODE_KP_LESS</unmanaged>
	KpLess = 197,
	/// <unmanaged>SDL_SCANCODE_KP_GREATER</unmanaged>
	KpGreater = 198,
	/// <unmanaged>SDL_SCANCODE_KP_AMPERSAND</unmanaged>
	KpAmpersand = 199,
	/// <unmanaged>SDL_SCANCODE_KP_DBLAMPERSAND</unmanaged>
	KpDblampersand = 200,
	/// <unmanaged>SDL_SCANCODE_KP_VERTICALBAR</unmanaged>
	KpVerticalbar = 201,
	/// <unmanaged>SDL_SCANCODE_KP_DBLVERTICALBAR</unmanaged>
	KpDblverticalbar = 202,
	/// <unmanaged>SDL_SCANCODE_KP_COLON</unmanaged>
	KpColon = 203,
	/// <unmanaged>SDL_SCANCODE_KP_HASH</unmanaged>
	KpHash = 204,
	/// <unmanaged>SDL_SCANCODE_KP_SPACE</unmanaged>
	KpSpace = 205,
	/// <unmanaged>SDL_SCANCODE_KP_AT</unmanaged>
	KpAt = 206,
	/// <unmanaged>SDL_SCANCODE_KP_EXCLAM</unmanaged>
	KpExclam = 207,
	/// <unmanaged>SDL_SCANCODE_KP_MEMSTORE</unmanaged>
	KpMemstore = 208,
	/// <unmanaged>SDL_SCANCODE_KP_MEMRECALL</unmanaged>
	KpMemrecall = 209,
	/// <unmanaged>SDL_SCANCODE_KP_MEMCLEAR</unmanaged>
	KpMemclear = 210,
	/// <unmanaged>SDL_SCANCODE_KP_MEMADD</unmanaged>
	KpMemadd = 211,
	/// <unmanaged>SDL_SCANCODE_KP_MEMSUBTRACT</unmanaged>
	KpMemsubtract = 212,
	/// <unmanaged>SDL_SCANCODE_KP_MEMMULTIPLY</unmanaged>
	KpMemmultiply = 213,
	/// <unmanaged>SDL_SCANCODE_KP_MEMDIVIDE</unmanaged>
	KpMemdivide = 214,
	/// <unmanaged>SDL_SCANCODE_KP_PLUSMINUS</unmanaged>
	KpPlusminus = 215,
	/// <unmanaged>SDL_SCANCODE_KP_CLEAR</unmanaged>
	KpClear = 216,
	/// <unmanaged>SDL_SCANCODE_KP_CLEARENTRY</unmanaged>
	KpClearentry = 217,
	/// <unmanaged>SDL_SCANCODE_KP_BINARY</unmanaged>
	KpBinary = 218,
	/// <unmanaged>SDL_SCANCODE_KP_OCTAL</unmanaged>
	KpOctal = 219,
	/// <unmanaged>SDL_SCANCODE_KP_DECIMAL</unmanaged>
	KpDecimal = 220,
	/// <unmanaged>SDL_SCANCODE_KP_HEXADECIMAL</unmanaged>
	KpHexadecimal = 221,
	/// <unmanaged>SDL_SCANCODE_LCTRL</unmanaged>
	LeftControl = 224,
	/// <unmanaged>SDL_SCANCODE_LSHIFT</unmanaged>
	LeftShirt = 225,
	/// <unmanaged>SDL_SCANCODE_LALT</unmanaged>
	LeftAlt = 226,
	/// <unmanaged>SDL_SCANCODE_LGUI</unmanaged>
	LeftGui = 227,
	/// <unmanaged>SDL_SCANCODE_RCTRL</unmanaged>
	RightControl = 228,
	/// <unmanaged>SDL_SCANCODE_RSHIFT</unmanaged>
	RightShirt = 229,
	/// <unmanaged>SDL_SCANCODE_RALT</unmanaged>
	RightAlt = 230,
	/// <unmanaged>SDL_SCANCODE_RGUI</unmanaged>
	RightGui = 231,
	/// <unmanaged>SDL_SCANCODE_MODE</unmanaged>
	Mode = 257,
	/// <unmanaged>SDL_SCANCODE_AUDIONEXT</unmanaged>
	AudioNext = 258,
	/// <unmanaged>SDL_SCANCODE_AUDIOPREV</unmanaged>
	AudioPrev = 259,
	/// <unmanaged>SDL_SCANCODE_AUDIOSTOP</unmanaged>
	AudioStop = 260,
	/// <unmanaged>SDL_SCANCODE_AUDIOPLAY</unmanaged>
	AudioPlay = 261,
	/// <unmanaged>SDL_SCANCODE_AUDIOMUTE</unmanaged>
	AudioMute = 262,
	/// <unmanaged>SDL_SCANCODE_MEDIASELECT</unmanaged>
	MediaSelect = 263,
	/// <unmanaged>SDL_SCANCODE_WWW</unmanaged>
	Www = 264,
	/// <unmanaged>SDL_SCANCODE_MAIL</unmanaged>
	Mail = 265,
	/// <unmanaged>SDL_SCANCODE_CALCULATOR</unmanaged>
	Calculator = 266,
	/// <unmanaged>SDL_SCANCODE_COMPUTER</unmanaged>
	Computer = 267,
	/// <unmanaged>SDL_SCANCODE_AC_SEARCH</unmanaged>
	AcSearch = 268,
	/// <unmanaged>SDL_SCANCODE_AC_HOME</unmanaged>
	AcHome = 269,
	/// <unmanaged>SDL_SCANCODE_AC_BACK</unmanaged>
	AcBack = 270,
	/// <unmanaged>SDL_SCANCODE_AC_FORWARD</unmanaged>
	AcForward = 271,
	/// <unmanaged>SDL_SCANCODE_AC_STOP</unmanaged>
	AcStop = 272,
	/// <unmanaged>SDL_SCANCODE_AC_REFRESH</unmanaged>
	AcRefresh = 273,
	/// <unmanaged>SDL_SCANCODE_AC_BOOKMARKS</unmanaged>
	AcBookmarks = 274,
	/// <unmanaged>SDL_SCANCODE_BRIGHTNESSDOWN</unmanaged>
	Brightnessdown = 275,
	/// <unmanaged>SDL_SCANCODE_BRIGHTNESSUP</unmanaged>
	Brightnessup = 276,
	/// <unmanaged>SDL_SCANCODE_DISPLAYSWITCH</unmanaged>
	DisplaySwitch = 277,
	/// <unmanaged>SDL_SCANCODE_KBDILLUMTOGGLE</unmanaged>
	Kbdillumtoggle = 278,
	/// <unmanaged>SDL_SCANCODE_KBDILLUMDOWN</unmanaged>
	Kbdillumdown = 279,
	/// <unmanaged>SDL_SCANCODE_KBDILLUMUP</unmanaged>
	Kbdillumup = 280,
	/// <unmanaged>SDL_SCANCODE_EJECT</unmanaged>
	Eject = 281,
	/// <unmanaged>SDL_SCANCODE_SLEEP</unmanaged>
	Sleep = 282,
	/// <unmanaged>SDL_SCANCODE_APP1</unmanaged>
	App1 = 283,
	/// <unmanaged>SDL_SCANCODE_APP2</unmanaged>
	App2 = 284,
	/// <unmanaged>SDL_SCANCODE_AUDIOREWIND</unmanaged>
	Audiorewind = 285,
	/// <unmanaged>SDL_SCANCODE_AUDIOFASTFORWARD</unmanaged>
	Audiofastforward = 286,
	/// <unmanaged>SDL_SCANCODE_SOFTLEFT</unmanaged>
	Softleft = 287,
	/// <unmanaged>SDL_SCANCODE_SOFTRIGHT</unmanaged>
	Softright = 288,
	/// <unmanaged>SDL_SCANCODE_CALL</unmanaged>
	Call = 289,
	/// <unmanaged>SDL_SCANCODE_ENDCALL</unmanaged>
	Endcall = 290,
	/// <unmanaged>SDL_NUM_SCANCODES</unmanaged>
	NumScancodes = 512,
}

public enum SDL_KeyCode
{
	/// <unmanaged>SDLK_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDLK_RETURN</unmanaged>
	Return = '\r',
	/// <unmanaged>SDLK_ESCAPE</unmanaged>
	Escape = '\x1B',
	/// <unmanaged>SDLK_BACKSPACE</unmanaged>
	Backspace = '\b',
	/// <unmanaged>SDLK_TAB</unmanaged>
	Tab = '\t',
	/// <unmanaged>SDLK_SPACE</unmanaged>
	Space = ' ',
	/// <unmanaged>SDLK_EXCLAIM</unmanaged>
	Exclaim = '!',
	/// <unmanaged>SDLK_QUOTEDBL</unmanaged>
	Quotedbl = '"',
	/// <unmanaged>SDLK_HASH</unmanaged>
	Hash = '#',
	/// <unmanaged>SDLK_PERCENT</unmanaged>
	Percent = '%',
	/// <unmanaged>SDLK_DOLLAR</unmanaged>
	Dollar = '$',
	/// <unmanaged>SDLK_AMPERSAND</unmanaged>
	Ampersand = '&',
	/// <unmanaged>SDLK_QUOTE</unmanaged>
	Quote = '\'',
	/// <unmanaged>SDLK_LEFTPAREN</unmanaged>
	Leftparen = '(',
	/// <unmanaged>SDLK_RIGHTPAREN</unmanaged>
	Rightparen = ')',
	/// <unmanaged>SDLK_ASTERISK</unmanaged>
	Asterisk = '*',
	/// <unmanaged>SDLK_PLUS</unmanaged>
	Plus = '+',
	/// <unmanaged>SDLK_COMMA</unmanaged>
	Comma = ',',
	/// <unmanaged>SDLK_MINUS</unmanaged>
	Minus = '-',
	/// <unmanaged>SDLK_PERIOD</unmanaged>
	Period = '.',
	/// <unmanaged>SDLK_SLASH</unmanaged>
	Slash = '/',
	/// <unmanaged>SDLK_0</unmanaged>
	_0 = '0',
	/// <unmanaged>SDLK_1</unmanaged>
	_1 = '1',
	/// <unmanaged>SDLK_2</unmanaged>
	_2 = '2',
	/// <unmanaged>SDLK_3</unmanaged>
	_3 = '3',
	/// <unmanaged>SDLK_4</unmanaged>
	_4 = '4',
	/// <unmanaged>SDLK_5</unmanaged>
	_5 = '5',
	/// <unmanaged>SDLK_6</unmanaged>
	_6 = '6',
	/// <unmanaged>SDLK_7</unmanaged>
	_7 = '7',
	/// <unmanaged>SDLK_8</unmanaged>
	_8 = '8',
	/// <unmanaged>SDLK_9</unmanaged>
	_9 = '9',
	/// <unmanaged>SDLK_COLON</unmanaged>
	Colon = ':',
	/// <unmanaged>SDLK_SEMICOLON</unmanaged>
	Semicolon = ';',
	/// <unmanaged>SDLK_LESS</unmanaged>
	Less = '<',
	/// <unmanaged>SDLK_EQUALS</unmanaged>
	Equals = '=',
	/// <unmanaged>SDLK_GREATER</unmanaged>
	Greater = '>',
	/// <unmanaged>SDLK_QUESTION</unmanaged>
	Question = '?',
	/// <unmanaged>SDLK_AT</unmanaged>
	At = '@',
	/// <unmanaged>SDLK_LEFTBRACKET</unmanaged>
	LeftBracket = '[',
	/// <unmanaged>SDLK_BACKSLASH</unmanaged>
	Backslash = '\\',
	/// <unmanaged>SDLK_RIGHTBRACKET</unmanaged>
	RightBracket = ']',
	/// <unmanaged>SDLK_CARET</unmanaged>
	Caret = '^',
	/// <unmanaged>SDLK_UNDERSCORE</unmanaged>
	Underscore = '_',
	/// <unmanaged>SDLK_BACKQUOTE</unmanaged>
	Backquote = '`',
	/// <unmanaged>SDLK_a</unmanaged>
	A = 'a',
	/// <unmanaged>SDLK_b</unmanaged>
	B = 'b',
	/// <unmanaged>SDLK_c</unmanaged>
	C = 'c',
	/// <unmanaged>SDLK_d</unmanaged>
	D = 'd',
	/// <unmanaged>SDLK_e</unmanaged>
	E = 'e',
	/// <unmanaged>SDLK_f</unmanaged>
	F = 'f',
	/// <unmanaged>SDLK_g</unmanaged>
	G = 'g',
	/// <unmanaged>SDLK_h</unmanaged>
	H = 'h',
	/// <unmanaged>SDLK_i</unmanaged>
	I = 'i',
	/// <unmanaged>SDLK_j</unmanaged>
	J = 'j',
	/// <unmanaged>SDLK_k</unmanaged>
	K = 'k',
	/// <unmanaged>SDLK_l</unmanaged>
	L = 'l',
	/// <unmanaged>SDLK_m</unmanaged>
	M = 'm',
	/// <unmanaged>SDLK_n</unmanaged>
	N = 'n',
	/// <unmanaged>SDLK_o</unmanaged>
	O = 'o',
	/// <unmanaged>SDLK_p</unmanaged>
	P = 'p',
	/// <unmanaged>SDLK_q</unmanaged>
	Q = 'q',
	/// <unmanaged>SDLK_r</unmanaged>
	R = 'r',
	/// <unmanaged>SDLK_s</unmanaged>
	S = 's',
	/// <unmanaged>SDLK_t</unmanaged>
	T = 't',
	/// <unmanaged>SDLK_u</unmanaged>
	U = 'u',
	/// <unmanaged>SDLK_v</unmanaged>
	V = 'v',
	/// <unmanaged>SDLK_w</unmanaged>
	W = 'w',
	/// <unmanaged>SDLK_x</unmanaged>
	X = 'x',
	/// <unmanaged>SDLK_y</unmanaged>
	Y = 'y',
	/// <unmanaged>SDLK_z</unmanaged>
	Z = 'z',
	/// <unmanaged>SDLK_CAPSLOCK</unmanaged>
	Capslock = 1073741881,
	/// <unmanaged>SDLK_F1</unmanaged>
	F1 = 1073741882,
	/// <unmanaged>SDLK_F2</unmanaged>
	F2 = 1073741883,
	/// <unmanaged>SDLK_F3</unmanaged>
	F3 = 1073741884,
	/// <unmanaged>SDLK_F4</unmanaged>
	F4 = 1073741885,
	/// <unmanaged>SDLK_F5</unmanaged>
	F5 = 1073741886,
	/// <unmanaged>SDLK_F6</unmanaged>
	F6 = 1073741887,
	/// <unmanaged>SDLK_F7</unmanaged>
	F7 = 1073741888,
	/// <unmanaged>SDLK_F8</unmanaged>
	F8 = 1073741889,
	/// <unmanaged>SDLK_F9</unmanaged>
	F9 = 1073741890,
	/// <unmanaged>SDLK_F10</unmanaged>
	F10 = 1073741891,
	/// <unmanaged>SDLK_F11</unmanaged>
	F11 = 1073741892,
	/// <unmanaged>SDLK_F12</unmanaged>
	F12 = 1073741893,
	/// <unmanaged>SDLK_PRINTSCREEN</unmanaged>
	PrintScreen = 1073741894,
	/// <unmanaged>SDLK_SCROLLLOCK</unmanaged>
	ScrollLock = 1073741895,
	/// <unmanaged>SDLK_PAUSE</unmanaged>
	Pause = 1073741896,
	/// <unmanaged>SDLK_INSERT</unmanaged>
	Insert = 1073741897,
	/// <unmanaged>SDLK_HOME</unmanaged>
	Home = 1073741898,
	/// <unmanaged>SDLK_PAGEUP</unmanaged>
	PageUp = 1073741899,
	/// <unmanaged>SDLK_DELETE</unmanaged>
	Delete = '\x7F',
	/// <unmanaged>SDLK_END</unmanaged>
	End = 1073741901,
	/// <unmanaged>SDLK_PAGEDOWN</unmanaged>
	PageDown = 1073741902,
	/// <unmanaged>SDLK_RIGHT</unmanaged>
	Right = 1073741903,
	/// <unmanaged>SDLK_LEFT</unmanaged>
	Left = 1073741904,
	/// <unmanaged>SDLK_DOWN</unmanaged>
	Down = 1073741905,
	/// <unmanaged>SDLK_UP</unmanaged>
	Up = 1073741906,
	/// <unmanaged>SDLK_NUMLOCKCLEAR</unmanaged>
	NumLockClear = 1073741907,
	/// <unmanaged>SDLK_KP_DIVIDE</unmanaged>
	KpDivide = 1073741908,
	/// <unmanaged>SDLK_KP_MULTIPLY</unmanaged>
	KpMultiply = 1073741909,
	/// <unmanaged>SDLK_KP_MINUS</unmanaged>
	KpMinus = 1073741910,
	/// <unmanaged>SDLK_KP_PLUS</unmanaged>
	KpPlus = 1073741911,
	/// <unmanaged>SDLK_KP_ENTER</unmanaged>
	KpEnter = 1073741912,
	/// <unmanaged>SDLK_KP_1</unmanaged>
	Kp1 = 1073741913,
	/// <unmanaged>SDLK_KP_2</unmanaged>
	Kp2 = 1073741914,
	/// <unmanaged>SDLK_KP_3</unmanaged>
	Kp3 = 1073741915,
	/// <unmanaged>SDLK_KP_4</unmanaged>
	Kp4 = 1073741916,
	/// <unmanaged>SDLK_KP_5</unmanaged>
	Kp5 = 1073741917,
	/// <unmanaged>SDLK_KP_6</unmanaged>
	Kp6 = 1073741918,
	/// <unmanaged>SDLK_KP_7</unmanaged>
	Kp7 = 1073741919,
	/// <unmanaged>SDLK_KP_8</unmanaged>
	Kp8 = 1073741920,
	/// <unmanaged>SDLK_KP_9</unmanaged>
	Kp9 = 1073741921,
	/// <unmanaged>SDLK_KP_0</unmanaged>
	Kp0 = 1073741922,
	/// <unmanaged>SDLK_KP_PERIOD</unmanaged>
	KpPeriod = 1073741923,
	/// <unmanaged>SDLK_APPLICATION</unmanaged>
	Application = 1073741925,
	/// <unmanaged>SDLK_POWER</unmanaged>
	Power = 1073741926,
	/// <unmanaged>SDLK_KP_EQUALS</unmanaged>
	KpEquals = 1073741927,
	/// <unmanaged>SDLK_F13</unmanaged>
	F13 = 1073741928,
	/// <unmanaged>SDLK_F14</unmanaged>
	F14 = 1073741929,
	/// <unmanaged>SDLK_F15</unmanaged>
	F15 = 1073741930,
	/// <unmanaged>SDLK_F16</unmanaged>
	F16 = 1073741931,
	/// <unmanaged>SDLK_F17</unmanaged>
	F17 = 1073741932,
	/// <unmanaged>SDLK_F18</unmanaged>
	F18 = 1073741933,
	/// <unmanaged>SDLK_F19</unmanaged>
	F19 = 1073741934,
	/// <unmanaged>SDLK_F20</unmanaged>
	F20 = 1073741935,
	/// <unmanaged>SDLK_F21</unmanaged>
	F21 = 1073741936,
	/// <unmanaged>SDLK_F22</unmanaged>
	F22 = 1073741937,
	/// <unmanaged>SDLK_F23</unmanaged>
	F23 = 1073741938,
	/// <unmanaged>SDLK_F24</unmanaged>
	F24 = 1073741939,
	/// <unmanaged>SDLK_EXECUTE</unmanaged>
	Execute = 1073741940,
	/// <unmanaged>SDLK_HELP</unmanaged>
	Help = 1073741941,
	/// <unmanaged>SDLK_MENU</unmanaged>
	Menu = 1073741942,
	/// <unmanaged>SDLK_SELECT</unmanaged>
	Select = 1073741943,
	/// <unmanaged>SDLK_STOP</unmanaged>
	Stop = 1073741944,
	/// <unmanaged>SDLK_AGAIN</unmanaged>
	Again = 1073741945,
	/// <unmanaged>SDLK_UNDO</unmanaged>
	Undo = 1073741946,
	/// <unmanaged>SDLK_CUT</unmanaged>
	Cut = 1073741947,
	/// <unmanaged>SDLK_COPY</unmanaged>
	Copy = 1073741948,
	/// <unmanaged>SDLK_PASTE</unmanaged>
	Paste = 1073741949,
	/// <unmanaged>SDLK_FIND</unmanaged>
	Find = 1073741950,
	/// <unmanaged>SDLK_MUTE</unmanaged>
	Mute = 1073741951,
	/// <unmanaged>SDLK_VOLUMEUP</unmanaged>
	VolumeUp = 1073741952,
	/// <unmanaged>SDLK_VOLUMEDOWN</unmanaged>
	VolumeDown = 1073741953,
	/// <unmanaged>SDLK_KP_COMMA</unmanaged>
	KpComma = 1073741957,
	/// <unmanaged>SDLK_KP_EQUALSAS400</unmanaged>
	KpEqualsas400 = 1073741958,
	/// <unmanaged>SDLK_ALTERASE</unmanaged>
	Alterase = 1073741977,
	/// <unmanaged>SDLK_SYSREQ</unmanaged>
	Sysreq = 1073741978,
	/// <unmanaged>SDLK_CANCEL</unmanaged>
	Cancel = 1073741979,
	/// <unmanaged>SDLK_CLEAR</unmanaged>
	Clear = 1073741980,
	/// <unmanaged>SDLK_PRIOR</unmanaged>
	Prior = 1073741981,
	/// <unmanaged>SDLK_RETURN2</unmanaged>
	Return2 = 1073741982,
	/// <unmanaged>SDLK_SEPARATOR</unmanaged>
	Separator = 1073741983,
	/// <unmanaged>SDLK_OUT</unmanaged>
	Out = 1073741984,
	/// <unmanaged>SDLK_OPER</unmanaged>
	Oper = 1073741985,
	/// <unmanaged>SDLK_CLEARAGAIN</unmanaged>
	Clearagain = 1073741986,
	/// <unmanaged>SDLK_CRSEL</unmanaged>
	Crsel = 1073741987,
	/// <unmanaged>SDLK_EXSEL</unmanaged>
	Exsel = 1073741988,
	/// <unmanaged>SDLK_KP_00</unmanaged>
	Kp00 = 1073742000,
	/// <unmanaged>SDLK_KP_000</unmanaged>
	Kp000 = 1073742001,
	/// <unmanaged>SDLK_THOUSANDSSEPARATOR</unmanaged>
	Thousandsseparator = 1073742002,
	/// <unmanaged>SDLK_DECIMALSEPARATOR</unmanaged>
	Decimalseparator = 1073742003,
	/// <unmanaged>SDLK_CURRENCYUNIT</unmanaged>
	Currencyunit = 1073742004,
	/// <unmanaged>SDLK_CURRENCYSUBUNIT</unmanaged>
	Currencysubunit = 1073742005,
	/// <unmanaged>SDLK_KP_LEFTPAREN</unmanaged>
	KpLeftparen = 1073742006,
	/// <unmanaged>SDLK_KP_RIGHTPAREN</unmanaged>
	KpRightparen = 1073742007,
	/// <unmanaged>SDLK_KP_LEFTBRACE</unmanaged>
	KpLeftbrace = 1073742008,
	/// <unmanaged>SDLK_KP_RIGHTBRACE</unmanaged>
	KpRightbrace = 1073742009,
	/// <unmanaged>SDLK_KP_TAB</unmanaged>
	KpTab = 1073742010,
	/// <unmanaged>SDLK_KP_BACKSPACE</unmanaged>
	KpBackspace = 1073742011,
	/// <unmanaged>SDLK_KP_A</unmanaged>
	KpA = 1073742012,
	/// <unmanaged>SDLK_KP_B</unmanaged>
	KpB = 1073742013,
	/// <unmanaged>SDLK_KP_C</unmanaged>
	KpC = 1073742014,
	/// <unmanaged>SDLK_KP_D</unmanaged>
	KpD = 1073742015,
	/// <unmanaged>SDLK_KP_E</unmanaged>
	KpE = 1073742016,
	/// <unmanaged>SDLK_KP_F</unmanaged>
	KpF = 1073742017,
	/// <unmanaged>SDLK_KP_XOR</unmanaged>
	KpXor = 1073742018,
	/// <unmanaged>SDLK_KP_POWER</unmanaged>
	KpPower = 1073742019,
	/// <unmanaged>SDLK_KP_PERCENT</unmanaged>
	KpPercent = 1073742020,
	/// <unmanaged>SDLK_KP_LESS</unmanaged>
	KpLess = 1073742021,
	/// <unmanaged>SDLK_KP_GREATER</unmanaged>
	KpGreater = 1073742022,
	/// <unmanaged>SDLK_KP_AMPERSAND</unmanaged>
	KpAmpersand = 1073742023,
	/// <unmanaged>SDLK_KP_DBLAMPERSAND</unmanaged>
	KpDblampersand = 1073742024,
	/// <unmanaged>SDLK_KP_VERTICALBAR</unmanaged>
	KpVerticalbar = 1073742025,
	/// <unmanaged>SDLK_KP_DBLVERTICALBAR</unmanaged>
	KpDblverticalbar = 1073742026,
	/// <unmanaged>SDLK_KP_COLON</unmanaged>
	KpColon = 1073742027,
	/// <unmanaged>SDLK_KP_HASH</unmanaged>
	KpHash = 1073742028,
	/// <unmanaged>SDLK_KP_SPACE</unmanaged>
	KpSpace = 1073742029,
	/// <unmanaged>SDLK_KP_AT</unmanaged>
	KpAt = 1073742030,
	/// <unmanaged>SDLK_KP_EXCLAM</unmanaged>
	KpExclam = 1073742031,
	/// <unmanaged>SDLK_KP_MEMSTORE</unmanaged>
	KpMemstore = 1073742032,
	/// <unmanaged>SDLK_KP_MEMRECALL</unmanaged>
	KpMemrecall = 1073742033,
	/// <unmanaged>SDLK_KP_MEMCLEAR</unmanaged>
	KpMemclear = 1073742034,
	/// <unmanaged>SDLK_KP_MEMADD</unmanaged>
	KpMemadd = 1073742035,
	/// <unmanaged>SDLK_KP_MEMSUBTRACT</unmanaged>
	KpMemsubtract = 1073742036,
	/// <unmanaged>SDLK_KP_MEMMULTIPLY</unmanaged>
	KpMemmultiply = 1073742037,
	/// <unmanaged>SDLK_KP_MEMDIVIDE</unmanaged>
	KpMemdivide = 1073742038,
	/// <unmanaged>SDLK_KP_PLUSMINUS</unmanaged>
	KpPlusminus = 1073742039,
	/// <unmanaged>SDLK_KP_CLEAR</unmanaged>
	KpClear = 1073742040,
	/// <unmanaged>SDLK_KP_CLEARENTRY</unmanaged>
	KpClearentry = 1073742041,
	/// <unmanaged>SDLK_KP_BINARY</unmanaged>
	KpBinary = 1073742042,
	/// <unmanaged>SDLK_KP_OCTAL</unmanaged>
	KpOctal = 1073742043,
	/// <unmanaged>SDLK_KP_DECIMAL</unmanaged>
	KpDecimal = 1073742044,
	/// <unmanaged>SDLK_KP_HEXADECIMAL</unmanaged>
	KpHexadecimal = 1073742045,
	/// <unmanaged>SDLK_LCTRL</unmanaged>
	LeftControl = 1073742048,
	/// <unmanaged>SDLK_LSHIFT</unmanaged>
	LeftShirt = 1073742049,
	/// <unmanaged>SDLK_LALT</unmanaged>
	LeftAlt = 1073742050,
	/// <unmanaged>SDLK_LGUI</unmanaged>
	LeftGui = 1073742051,
	/// <unmanaged>SDLK_RCTRL</unmanaged>
	RightControl = 1073742052,
	/// <unmanaged>SDLK_RSHIFT</unmanaged>
	RightShirt = 1073742053,
	/// <unmanaged>SDLK_RALT</unmanaged>
	RightAlt = 1073742054,
	/// <unmanaged>SDLK_RGUI</unmanaged>
	RightGui = 1073742055,
	/// <unmanaged>SDLK_MODE</unmanaged>
	Mode = 1073742081,
	/// <unmanaged>SDLK_AUDIONEXT</unmanaged>
	AudioNext = 1073742082,
	/// <unmanaged>SDLK_AUDIOPREV</unmanaged>
	AudioPrev = 1073742083,
	/// <unmanaged>SDLK_AUDIOSTOP</unmanaged>
	AudioStop = 1073742084,
	/// <unmanaged>SDLK_AUDIOPLAY</unmanaged>
	AudioPlay = 1073742085,
	/// <unmanaged>SDLK_AUDIOMUTE</unmanaged>
	AudioMute = 1073742086,
	/// <unmanaged>SDLK_MEDIASELECT</unmanaged>
	MediaSelect = 1073742087,
	/// <unmanaged>SDLK_WWW</unmanaged>
	Www = 1073742088,
	/// <unmanaged>SDLK_MAIL</unmanaged>
	Mail = 1073742089,
	/// <unmanaged>SDLK_CALCULATOR</unmanaged>
	Calculator = 1073742090,
	/// <unmanaged>SDLK_COMPUTER</unmanaged>
	Computer = 1073742091,
	/// <unmanaged>SDLK_AC_SEARCH</unmanaged>
	AcSearch = 1073742092,
	/// <unmanaged>SDLK_AC_HOME</unmanaged>
	AcHome = 1073742093,
	/// <unmanaged>SDLK_AC_BACK</unmanaged>
	AcBack = 1073742094,
	/// <unmanaged>SDLK_AC_FORWARD</unmanaged>
	AcForward = 1073742095,
	/// <unmanaged>SDLK_AC_STOP</unmanaged>
	AcStop = 1073742096,
	/// <unmanaged>SDLK_AC_REFRESH</unmanaged>
	AcRefresh = 1073742097,
	/// <unmanaged>SDLK_AC_BOOKMARKS</unmanaged>
	AcBookmarks = 1073742098,
	/// <unmanaged>SDLK_BRIGHTNESSDOWN</unmanaged>
	Brightnessdown = 1073742099,
	/// <unmanaged>SDLK_BRIGHTNESSUP</unmanaged>
	Brightnessup = 1073742100,
	/// <unmanaged>SDLK_DISPLAYSWITCH</unmanaged>
	DisplaySwitch = 1073742101,
	/// <unmanaged>SDLK_KBDILLUMTOGGLE</unmanaged>
	Kbdillumtoggle = 1073742102,
	/// <unmanaged>SDLK_KBDILLUMDOWN</unmanaged>
	Kbdillumdown = 1073742103,
	/// <unmanaged>SDLK_KBDILLUMUP</unmanaged>
	Kbdillumup = 1073742104,
	/// <unmanaged>SDLK_EJECT</unmanaged>
	Eject = 1073742105,
	/// <unmanaged>SDLK_SLEEP</unmanaged>
	Sleep = 1073742106,
	/// <unmanaged>SDLK_APP1</unmanaged>
	App1 = 1073742107,
	/// <unmanaged>SDLK_APP2</unmanaged>
	App2 = 1073742108,
	/// <unmanaged>SDLK_AUDIOREWIND</unmanaged>
	Audiorewind = 1073742109,
	/// <unmanaged>SDLK_AUDIOFASTFORWARD</unmanaged>
	Audiofastforward = 1073742110,
	/// <unmanaged>SDLK_SOFTLEFT</unmanaged>
	Softleft = 1073742111,
	/// <unmanaged>SDLK_SOFTRIGHT</unmanaged>
	Softright = 1073742112,
	/// <unmanaged>SDLK_CALL</unmanaged>
	Call = 1073742113,
	/// <unmanaged>SDLK_ENDCALL</unmanaged>
	Endcall = 1073742114,
}

[Flags]
public enum SDL_Keymod
{
	/// <unmanaged>SDL_KMOD_NONE</unmanaged>
	None = 0x0000,
	/// <unmanaged>SDL_KMOD_LSHIFT</unmanaged>
	LeftShirt = 0x0001,
	/// <unmanaged>SDL_KMOD_RSHIFT</unmanaged>
	RightShirt = 0x0002,
	/// <unmanaged>SDL_KMOD_LCTRL</unmanaged>
	LeftControl = 0x0040,
	/// <unmanaged>SDL_KMOD_RCTRL</unmanaged>
	RightControl = 0x0080,
	/// <unmanaged>SDL_KMOD_LALT</unmanaged>
	LeftAlt = 0x0100,
	/// <unmanaged>SDL_KMOD_RALT</unmanaged>
	RightAlt = 0x0200,
	/// <unmanaged>SDL_KMOD_LGUI</unmanaged>
	LeftGui = 0x0400,
	/// <unmanaged>SDL_KMOD_RGUI</unmanaged>
	RightGui = 0x0800,
	/// <unmanaged>SDL_KMOD_NUM</unmanaged>
	Num = 0x1000,
	/// <unmanaged>SDL_KMOD_CAPS</unmanaged>
	Caps = 0x2000,
	/// <unmanaged>SDL_KMOD_MODE</unmanaged>
	Mode = 0x4000,
	/// <unmanaged>SDL_KMOD_SCROLL</unmanaged>
	Scroll = 0x8000,
	/// <unmanaged>SDL_KMOD_CTRL</unmanaged>
	Ctrl = LeftControl | RightControl,
	/// <unmanaged>SDL_KMOD_SHIFT</unmanaged>
	Shift = LeftShirt | RightShirt,
	/// <unmanaged>SDL_KMOD_ALT</unmanaged>
	Alt = LeftAlt | RightAlt,
	/// <unmanaged>SDL_KMOD_GUI</unmanaged>
	Gui = LeftGui | RightGui,
}

[Flags]
public enum SDL_MessageBoxFlags
{
	None = 0,
	/// <unmanaged>SDL_MESSAGEBOX_ERROR</unmanaged>
	Error = 0x00000010,
	/// <unmanaged>SDL_MESSAGEBOX_WARNING</unmanaged>
	Warning = 0x00000020,
	/// <unmanaged>SDL_MESSAGEBOX_INFORMATION</unmanaged>
	Information = 0x00000040,
	/// <unmanaged>SDL_MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT</unmanaged>
	ButtonsLeftToRight = 0x00000080,
	/// <unmanaged>SDL_MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT</unmanaged>
	ButtonsRightToLeft = 0x00000100,
}

[Flags]
public enum SDL_MessageBoxButtonFlags
{
	None = 0,
	/// <unmanaged>SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT</unmanaged>
	ReturnKeyDefault = 0x00000001,
	/// <unmanaged>SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT</unmanaged>
	EscapeKeyDefault = 0x00000002,
}

public enum SDL_MessageBoxColorType
{
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_BACKGROUND</unmanaged>
	Background = 0,
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_TEXT</unmanaged>
	Text = 1,
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_BUTTON_BORDER</unmanaged>
	ButtonBorder = 2,
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND</unmanaged>
	ButtonBackground = 3,
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED</unmanaged>
	ButtonSelected = 4,
	/// <unmanaged>SDL_MESSAGEBOX_COLOR_MAX</unmanaged>
	Max = 5,
}

public enum SDL_JoystickType
{
	/// <unmanaged>SDL_JOYSTICK_TYPE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_JOYSTICK_TYPE_GAMEPAD</unmanaged>
	Gamepad = 1,
	/// <unmanaged>SDL_JOYSTICK_TYPE_WHEEL</unmanaged>
	Wheel = 2,
	/// <unmanaged>SDL_JOYSTICK_TYPE_ARCADE_STICK</unmanaged>
	ArcadeStick = 3,
	/// <unmanaged>SDL_JOYSTICK_TYPE_FLIGHT_STICK</unmanaged>
	FlightStick = 4,
	/// <unmanaged>SDL_JOYSTICK_TYPE_DANCE_PAD</unmanaged>
	DancePad = 5,
	/// <unmanaged>SDL_JOYSTICK_TYPE_GUITAR</unmanaged>
	Guitar = 6,
	/// <unmanaged>SDL_JOYSTICK_TYPE_DRUM_KIT</unmanaged>
	DrumKit = 7,
	/// <unmanaged>SDL_JOYSTICK_TYPE_ARCADE_PAD</unmanaged>
	ArcadePad = 8,
	/// <unmanaged>SDL_JOYSTICK_TYPE_THROTTLE</unmanaged>
	Throttle = 9,
}

public enum SDL_JoystickPowerLevel
{
	/// <unmanaged>SDL_JOYSTICK_POWER_UNKNOWN</unmanaged>
	Unknown = -1,
	/// <unmanaged>SDL_JOYSTICK_POWER_EMPTY</unmanaged>
	Empty = 0,
	/// <unmanaged>SDL_JOYSTICK_POWER_LOW</unmanaged>
	Low = 1,
	/// <unmanaged>SDL_JOYSTICK_POWER_MEDIUM</unmanaged>
	Medium = 2,
	/// <unmanaged>SDL_JOYSTICK_POWER_FULL</unmanaged>
	Full = 3,
	/// <unmanaged>SDL_JOYSTICK_POWER_WIRED</unmanaged>
	Wired = 4,
	/// <unmanaged>SDL_JOYSTICK_POWER_MAX</unmanaged>
	Max = 5,
}

public enum SDL_GamepadType
{
	/// <unmanaged>SDL_GAMEPAD_TYPE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_GAMEPAD_TYPE_STANDARD</unmanaged>
	Standard = 1,
	/// <unmanaged>SDL_GAMEPAD_TYPE_XBOX360</unmanaged>
	Xbox360 = 2,
	/// <unmanaged>SDL_GAMEPAD_TYPE_XBOXONE</unmanaged>
	Xboxone = 3,
	/// <unmanaged>SDL_GAMEPAD_TYPE_PS3</unmanaged>
	Ps3 = 4,
	/// <unmanaged>SDL_GAMEPAD_TYPE_PS4</unmanaged>
	Ps4 = 5,
	/// <unmanaged>SDL_GAMEPAD_TYPE_PS5</unmanaged>
	Ps5 = 6,
	/// <unmanaged>SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_PRO</unmanaged>
	NintendoSwitchPro = 7,
	/// <unmanaged>SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT</unmanaged>
	NintendoSwitchJoyconLeft = 8,
	/// <unmanaged>SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT</unmanaged>
	NintendoSwitchJoyconRight = 9,
	/// <unmanaged>SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR</unmanaged>
	NintendoSwitchJoyconPair = 10,
	/// <unmanaged>SDL_GAMEPAD_TYPE_MAX</unmanaged>
	Max = 11,
}

public enum SDL_GamepadButton
{
	/// <unmanaged>SDL_GAMEPAD_BUTTON_INVALID</unmanaged>
	Invalid = -1,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_SOUTH</unmanaged>
	South = 0,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_EAST</unmanaged>
	East = 1,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_WEST</unmanaged>
	West = 2,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_NORTH</unmanaged>
	North = 3,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_BACK</unmanaged>
	Back = 4,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_GUIDE</unmanaged>
	Guide = 5,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_START</unmanaged>
	Start = 6,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LEFT_STICK</unmanaged>
	LeftStick = 7,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_RIGHT_STICK</unmanaged>
	RightStick = 8,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LEFT_SHOULDER</unmanaged>
	LeftShoulder = 9,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_RIGHT_SHOULDER</unmanaged>
	RightShoulder = 10,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_DPAD_UP</unmanaged>
	DpadUp = 11,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_DPAD_DOWN</unmanaged>
	DpadDown = 12,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_DPAD_LEFT</unmanaged>
	DpadLeft = 13,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_DPAD_RIGHT</unmanaged>
	DpadRight = 14,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_MISC1</unmanaged>
	Misc1 = 15,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_RIGHT_PADDLE1</unmanaged>
	RightPaddle1 = 16,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LEFT_PADDLE1</unmanaged>
	LeftPaddle1 = 17,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_RIGHT_PADDLE2</unmanaged>
	RightPaddle2 = 18,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LEFT_PADDLE2</unmanaged>
	LeftPaddle2 = 19,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_TOUCHPAD</unmanaged>
	Touchpad = 20,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_MAX</unmanaged>
	Max = 21,
}

public enum SDL_GamepadButtonLabel
{
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_A</unmanaged>
	A = 1,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_B</unmanaged>
	B = 2,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_X</unmanaged>
	X = 3,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_Y</unmanaged>
	Y = 4,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_CROSS</unmanaged>
	Cross = 5,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_CIRCLE</unmanaged>
	Circle = 6,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_SQUARE</unmanaged>
	Square = 7,
	/// <unmanaged>SDL_GAMEPAD_BUTTON_LABEL_TRIANGLE</unmanaged>
	Triangle = 8,
}

public enum SDL_GamepadAxis
{
	/// <unmanaged>SDL_GAMEPAD_AXIS_INVALID</unmanaged>
	Invalid = -1,
	/// <unmanaged>SDL_GAMEPAD_AXIS_LEFTX</unmanaged>
	Leftx = 0,
	/// <unmanaged>SDL_GAMEPAD_AXIS_LEFTY</unmanaged>
	Lefty = 1,
	/// <unmanaged>SDL_GAMEPAD_AXIS_RIGHTX</unmanaged>
	Rightx = 2,
	/// <unmanaged>SDL_GAMEPAD_AXIS_RIGHTY</unmanaged>
	Righty = 3,
	/// <unmanaged>SDL_GAMEPAD_AXIS_LEFT_TRIGGER</unmanaged>
	LeftTrigger = 4,
	/// <unmanaged>SDL_GAMEPAD_AXIS_RIGHT_TRIGGER</unmanaged>
	RightTrigger = 5,
	/// <unmanaged>SDL_GAMEPAD_AXIS_MAX</unmanaged>
	Max = 6,
}

public enum SDL_GamepadBindingType
{
	/// <unmanaged>SDL_GAMEPAD_BINDTYPE_NONE</unmanaged>
	None = 0,
	/// <unmanaged>SDL_GAMEPAD_BINDTYPE_BUTTON</unmanaged>
	Button = 1,
	/// <unmanaged>SDL_GAMEPAD_BINDTYPE_AXIS</unmanaged>
	Axis = 2,
	/// <unmanaged>SDL_GAMEPAD_BINDTYPE_HAT</unmanaged>
	Hat = 3,
}

public enum SDL_SystemCursor
{
	/// <unmanaged>SDL_SYSTEM_CURSOR_ARROW</unmanaged>
	Arrow = 0,
	/// <unmanaged>SDL_SYSTEM_CURSOR_IBEAM</unmanaged>
	Ibeam = 1,
	/// <unmanaged>SDL_SYSTEM_CURSOR_WAIT</unmanaged>
	Wait = 2,
	/// <unmanaged>SDL_SYSTEM_CURSOR_CROSSHAIR</unmanaged>
	Crosshair = 3,
	/// <unmanaged>SDL_SYSTEM_CURSOR_WAITARROW</unmanaged>
	Waitarrow = 4,
	/// <unmanaged>SDL_SYSTEM_CURSOR_SIZENWSE</unmanaged>
	Sizenwse = 5,
	/// <unmanaged>SDL_SYSTEM_CURSOR_SIZENESW</unmanaged>
	Sizenesw = 6,
	/// <unmanaged>SDL_SYSTEM_CURSOR_SIZEWE</unmanaged>
	Sizewe = 7,
	/// <unmanaged>SDL_SYSTEM_CURSOR_SIZENS</unmanaged>
	Sizens = 8,
	/// <unmanaged>SDL_SYSTEM_CURSOR_SIZEALL</unmanaged>
	Sizeall = 9,
	/// <unmanaged>SDL_SYSTEM_CURSOR_NO</unmanaged>
	No = 10,
	/// <unmanaged>SDL_SYSTEM_CURSOR_HAND</unmanaged>
	Hand = 11,
	/// <unmanaged>SDL_SYSTEM_CURSOR_WINDOW_TOPLEFT</unmanaged>
	WindowTopleft = 12,
	/// <unmanaged>SDL_SYSTEM_CURSOR_WINDOW_TOP</unmanaged>
	WindowTop = 13,
	/// <unmanaged>SDL_SYSTEM_CURSOR_WINDOW_TOPRIGHT</unmanaged>
	WindowTopright = 14,
	/// <unmanaged>SDL_SYSTEM_CURSOR_WINDOW_RIGHT</unmanaged>
	WindowRight = 15,
	/// <unmanaged>SDL_SYSTEM_CURSOR_WINDOW_BOTTOMRIGHT</unmanaged>
	WindowBottomright = 16,
	/// <unmanaged>SDL_SYSTEM_CURSOR_WINDOW_BOTTOM</unmanaged>
	WindowBottom = 17,
	/// <unmanaged>SDL_SYSTEM_CURSOR_WINDOW_BOTTOMLEFT</unmanaged>
	WindowBottomleft = 18,
	/// <unmanaged>SDL_SYSTEM_CURSOR_WINDOW_LEFT</unmanaged>
	WindowLeft = 19,
	/// <unmanaged>SDL_NUM_SYSTEM_CURSORS</unmanaged>
	SDL_NUM_SYSTEM_CURSORS = 20,
}

public enum SDL_MouseWheelDirection
{
	/// <unmanaged>SDL_MOUSEWHEEL_NORMAL</unmanaged>
	Normal = 0,
	/// <unmanaged>SDL_MOUSEWHEEL_FLIPPED</unmanaged>
	Flipped = 1,
}

public enum SDL_TouchDeviceType
{
	/// <unmanaged>SDL_TOUCH_DEVICE_INVALID</unmanaged>
	Invalid = -1,
	/// <unmanaged>SDL_TOUCH_DEVICE_DIRECT</unmanaged>
	Direct = 0,
	/// <unmanaged>SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE</unmanaged>
	IndirectAbsolute = 1,
	/// <unmanaged>SDL_TOUCH_DEVICE_INDIRECT_RELATIVE</unmanaged>
	IndirectRelative = 2,
}

public enum SDL_LogCategory
{
	/// <unmanaged>SDL_LOG_CATEGORY_APPLICATION</unmanaged>
	Application = 0,
	/// <unmanaged>SDL_LOG_CATEGORY_ERROR</unmanaged>
	Error = 1,
	/// <unmanaged>SDL_LOG_CATEGORY_ASSERT</unmanaged>
	Assert = 2,
	/// <unmanaged>SDL_LOG_CATEGORY_SYSTEM</unmanaged>
	System = 3,
	/// <unmanaged>SDL_LOG_CATEGORY_AUDIO</unmanaged>
	Audio = 4,
	/// <unmanaged>SDL_LOG_CATEGORY_VIDEO</unmanaged>
	Video = 5,
	/// <unmanaged>SDL_LOG_CATEGORY_RENDER</unmanaged>
	Render = 6,
	/// <unmanaged>SDL_LOG_CATEGORY_INPUT</unmanaged>
	Input = 7,
	/// <unmanaged>SDL_LOG_CATEGORY_TEST</unmanaged>
	Test = 8,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED1</unmanaged>
	Reserved1 = 9,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED2</unmanaged>
	Reserved2 = 10,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED3</unmanaged>
	Reserved3 = 11,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED4</unmanaged>
	Reserved4 = 12,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED5</unmanaged>
	Reserved5 = 13,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED6</unmanaged>
	Reserved6 = 14,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED7</unmanaged>
	Reserved7 = 15,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED8</unmanaged>
	Reserved8 = 16,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED9</unmanaged>
	Reserved9 = 17,
	/// <unmanaged>SDL_LOG_CATEGORY_RESERVED10</unmanaged>
	Reserved10 = 18,
	/// <unmanaged>SDL_LOG_CATEGORY_CUSTOM</unmanaged>
	Custom = 19,
}

public enum SDL_LogPriority
{
	/// <unmanaged>SDL_LOG_PRIORITY_VERBOSE</unmanaged>
	Verbose = 1,
	/// <unmanaged>SDL_LOG_PRIORITY_DEBUG</unmanaged>
	Debug = 2,
	/// <unmanaged>SDL_LOG_PRIORITY_INFO</unmanaged>
	Info = 3,
	/// <unmanaged>SDL_LOG_PRIORITY_WARN</unmanaged>
	Warn = 4,
	/// <unmanaged>SDL_LOG_PRIORITY_ERROR</unmanaged>
	Error = 5,
	/// <unmanaged>SDL_LOG_PRIORITY_CRITICAL</unmanaged>
	Critical = 6,
	/// <unmanaged>SDL_NUM_LOG_PRIORITIES</unmanaged>
	SDL_NUM_LOG_PRIORITIES = 7,
}

public enum SDL_PowerState
{
	/// <unmanaged>SDL_POWERSTATE_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_POWERSTATE_ON_BATTERY</unmanaged>
	OnBattery = 1,
	/// <unmanaged>SDL_POWERSTATE_NO_BATTERY</unmanaged>
	NoBattery = 2,
	/// <unmanaged>SDL_POWERSTATE_CHARGING</unmanaged>
	Charging = 3,
	/// <unmanaged>SDL_POWERSTATE_CHARGED</unmanaged>
	Charged = 4,
}

public enum SDL_SensorType
{
	/// <unmanaged>SDL_SENSOR_INVALID</unmanaged>
	Invalid = -1,
	/// <unmanaged>SDL_SENSOR_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_SENSOR_ACCEL</unmanaged>
	Accel = 1,
	/// <unmanaged>SDL_SENSOR_GYRO</unmanaged>
	Gyro = 2,
	/// <unmanaged>SDL_SENSOR_ACCEL_L</unmanaged>
	AccelL = 3,
	/// <unmanaged>SDL_SENSOR_GYRO_L</unmanaged>
	GyroL = 4,
	/// <unmanaged>SDL_SENSOR_ACCEL_R</unmanaged>
	AccelR = 5,
	/// <unmanaged>SDL_SENSOR_GYRO_R</unmanaged>
	GyroR = 6,
}

public enum SDL_SystemTheme
{
	/// <unmanaged>SDL_SYSTEM_THEME_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_SYSTEM_THEME_LIGHT</unmanaged>
	Light = 1,
	/// <unmanaged>SDL_SYSTEM_THEME_DARK</unmanaged>
	Dark = 2,
}

public enum SDL_DisplayOrientation
{
	/// <unmanaged>SDL_ORIENTATION_UNKNOWN</unmanaged>
	Unknown = 0,
	/// <unmanaged>SDL_ORIENTATION_LANDSCAPE</unmanaged>
	Landscape = 1,
	/// <unmanaged>SDL_ORIENTATION_LANDSCAPE_FLIPPED</unmanaged>
	LandscapeFlipped = 2,
	/// <unmanaged>SDL_ORIENTATION_PORTRAIT</unmanaged>
	Portrait = 3,
	/// <unmanaged>SDL_ORIENTATION_PORTRAIT_FLIPPED</unmanaged>
	PortraitFlipped = 4,
}

public enum SDL_FlashOperation
{
	/// <unmanaged>SDL_FLASH_CANCEL</unmanaged>
	Cancel = 0,
	/// <unmanaged>SDL_FLASH_BRIEFLY</unmanaged>
	Briefly = 1,
	/// <unmanaged>SDL_FLASH_UNTIL_FOCUSED</unmanaged>
	UntilFocused = 2,
}

public enum SDL_GLattr
{
	/// <unmanaged>SDL_GL_RED_SIZE</unmanaged>
	RedSize = 0,
	/// <unmanaged>SDL_GL_GREEN_SIZE</unmanaged>
	GreenSize = 1,
	/// <unmanaged>SDL_GL_BLUE_SIZE</unmanaged>
	BlueSize = 2,
	/// <unmanaged>SDL_GL_ALPHA_SIZE</unmanaged>
	AlphaSize = 3,
	/// <unmanaged>SDL_GL_BUFFER_SIZE</unmanaged>
	BufferSize = 4,
	/// <unmanaged>SDL_GL_DOUBLEBUFFER</unmanaged>
	Doublebuffer = 5,
	/// <unmanaged>SDL_GL_DEPTH_SIZE</unmanaged>
	DepthSize = 6,
	/// <unmanaged>SDL_GL_STENCIL_SIZE</unmanaged>
	StencilSize = 7,
	/// <unmanaged>SDL_GL_ACCUM_RED_SIZE</unmanaged>
	AccumRedSize = 8,
	/// <unmanaged>SDL_GL_ACCUM_GREEN_SIZE</unmanaged>
	AccumGreenSize = 9,
	/// <unmanaged>SDL_GL_ACCUM_BLUE_SIZE</unmanaged>
	AccumBlueSize = 10,
	/// <unmanaged>SDL_GL_ACCUM_ALPHA_SIZE</unmanaged>
	AccumAlphaSize = 11,
	/// <unmanaged>SDL_GL_STEREO</unmanaged>
	Stereo = 12,
	/// <unmanaged>SDL_GL_MULTISAMPLEBUFFERS</unmanaged>
	MultisampleBuffers = 13,
	/// <unmanaged>SDL_GL_MULTISAMPLESAMPLES</unmanaged>
	MultisampleSamples = 14,
	/// <unmanaged>SDL_GL_ACCELERATED_VISUAL</unmanaged>
	AcceleratedVisual = 15,
	/// <unmanaged>SDL_GL_RETAINED_BACKING</unmanaged>
	RetainedBacking = 16,
	/// <unmanaged>SDL_GL_CONTEXT_MAJOR_VERSION</unmanaged>
	ContextMajorVersion = 17,
	/// <unmanaged>SDL_GL_CONTEXT_MINOR_VERSION</unmanaged>
	ContextMinorVersion = 18,
	/// <unmanaged>SDL_GL_CONTEXT_FLAGS</unmanaged>
	ContextFlags = 19,
	/// <unmanaged>SDL_GL_CONTEXT_PROFILE_MASK</unmanaged>
	ContextProfileMask = 20,
	/// <unmanaged>SDL_GL_SHARE_WITH_CURRENT_CONTEXT</unmanaged>
	ShareWithCurrentContext = 21,
	/// <unmanaged>SDL_GL_FRAMEBUFFER_SRGB_CAPABLE</unmanaged>
	FramebufferSrgbCapable = 22,
	/// <unmanaged>SDL_GL_CONTEXT_RELEASE_BEHAVIOR</unmanaged>
	ContextReleaseBehavior = 23,
	/// <unmanaged>SDL_GL_CONTEXT_RESET_NOTIFICATION</unmanaged>
	ContextResetNotification = 24,
	/// <unmanaged>SDL_GL_CONTEXT_NO_ERROR</unmanaged>
	ContextNoError = 25,
	/// <unmanaged>SDL_GL_FLOATBUFFERS</unmanaged>
	Floatbuffers = 26,
	/// <unmanaged>SDL_GL_EGL_PLATFORM</unmanaged>
	EglPlatform = 27,
}

[Flags]
public enum SDL_GLprofile
{
	None = 0,
	/// <unmanaged>SDL_GL_CONTEXT_PROFILE_CORE</unmanaged>
	Core = 0x0001,
	/// <unmanaged>SDL_GL_CONTEXT_PROFILE_COMPATIBILITY</unmanaged>
	Compatibility = 0x0002,
	/// <unmanaged>SDL_GL_CONTEXT_PROFILE_ES</unmanaged>
	Es = 0x0004,
}

[Flags]
public enum SDL_GLcontextFlag
{
	None = 0,
	/// <unmanaged>SDL_GL_CONTEXT_DEBUG_FLAG</unmanaged>
	DebugFlag = 0x0001,
	/// <unmanaged>SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG</unmanaged>
	ForwardCompatibleFlag = 0x0002,
	/// <unmanaged>SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG</unmanaged>
	RobustAccessFlag = 0x0004,
	/// <unmanaged>SDL_GL_CONTEXT_RESET_ISOLATION_FLAG</unmanaged>
	ResetIsolationFlag = 0x0008,
}

[Flags]
public enum SDL_GLcontextReleaseFlag
{
	/// <unmanaged>SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE</unmanaged>
	None = 0x0000,
	/// <unmanaged>SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH</unmanaged>
	Flush = 0x0001,
}

[Flags]
public enum SDL_GLContextResetNotification
{
	None = 0,
	/// <unmanaged>SDL_GL_CONTEXT_RESET_NO_NOTIFICATION</unmanaged>
	NoNotification = 0x0000,
	/// <unmanaged>SDL_GL_CONTEXT_RESET_LOSE_CONTEXT</unmanaged>
	LoseContext = 0x0001,
}

public enum SDL_HitTestResult
{
	/// <unmanaged>SDL_HITTEST_NORMAL</unmanaged>
	Normal = 0,
	/// <unmanaged>SDL_HITTEST_DRAGGABLE</unmanaged>
	Draggable = 1,
	/// <unmanaged>SDL_HITTEST_RESIZE_TOPLEFT</unmanaged>
	ResizeTopleft = 2,
	/// <unmanaged>SDL_HITTEST_RESIZE_TOP</unmanaged>
	ResizeTop = 3,
	/// <unmanaged>SDL_HITTEST_RESIZE_TOPRIGHT</unmanaged>
	ResizeTopright = 4,
	/// <unmanaged>SDL_HITTEST_RESIZE_RIGHT</unmanaged>
	ResizeRight = 5,
	/// <unmanaged>SDL_HITTEST_RESIZE_BOTTOMRIGHT</unmanaged>
	ResizeBottomright = 6,
	/// <unmanaged>SDL_HITTEST_RESIZE_BOTTOM</unmanaged>
	ResizeBottom = 7,
	/// <unmanaged>SDL_HITTEST_RESIZE_BOTTOMLEFT</unmanaged>
	ResizeBottomleft = 8,
	/// <unmanaged>SDL_HITTEST_RESIZE_LEFT</unmanaged>
	ResizeLeft = 9,
}

public enum SDL_EventType
{
	/// <unmanaged>SDL_EVENT_FIRST</unmanaged>
	First = 0,
	/// <unmanaged>SDL_EVENT_QUIT</unmanaged>
	Quit = 0x100,
	/// <unmanaged>SDL_EVENT_TERMINATING</unmanaged>
	Terminating = 257,
	/// <unmanaged>SDL_EVENT_LOW_MEMORY</unmanaged>
	LowMemory = 258,
	/// <unmanaged>SDL_EVENT_WILL_ENTER_BACKGROUND</unmanaged>
	WillEnterBackground = 259,
	/// <unmanaged>SDL_EVENT_DID_ENTER_BACKGROUND</unmanaged>
	DidEnterBackground = 260,
	/// <unmanaged>SDL_EVENT_WILL_ENTER_FOREGROUND</unmanaged>
	WillEnterForeground = 261,
	/// <unmanaged>SDL_EVENT_DID_ENTER_FOREGROUND</unmanaged>
	DidEnterForeground = 262,
	/// <unmanaged>SDL_EVENT_LOCALE_CHANGED</unmanaged>
	LocaleChanged = 263,
	/// <unmanaged>SDL_EVENT_SYSTEM_THEME_CHANGED</unmanaged>
	SystemThemeChanged = 264,
	/// <unmanaged>SDL_EVENT_DISPLAY_ORIENTATION</unmanaged>
	DisplayOrientation = 0x151,
	/// <unmanaged>SDL_EVENT_DISPLAY_ADDED</unmanaged>
	DisplayAdded = 338,
	/// <unmanaged>SDL_EVENT_DISPLAY_REMOVED</unmanaged>
	DisplayRemoved = 339,
	/// <unmanaged>SDL_EVENT_DISPLAY_MOVED</unmanaged>
	DisplayMoved = 340,
	/// <unmanaged>SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED</unmanaged>
	DisplayContentScaleChanged = 341,
	/// <unmanaged>SDL_EVENT_DISPLAY_FIRST</unmanaged>
	DisplayFirst = DisplayOrientation,
	/// <unmanaged>SDL_EVENT_DISPLAY_LAST</unmanaged>
	DisplayLast = DisplayContentScaleChanged,
	/// <unmanaged>SDL_EVENT_WINDOW_SHOWN</unmanaged>
	WindowShown = 0x202,
	/// <unmanaged>SDL_EVENT_WINDOW_HIDDEN</unmanaged>
	WindowHidden = 515,
	/// <unmanaged>SDL_EVENT_WINDOW_EXPOSED</unmanaged>
	WindowExposed = 516,
	/// <unmanaged>SDL_EVENT_WINDOW_MOVED</unmanaged>
	WindowMoved = 517,
	/// <unmanaged>SDL_EVENT_WINDOW_RESIZED</unmanaged>
	WindowResized = 518,
	/// <unmanaged>SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED</unmanaged>
	WindowPixelSizeChanged = 519,
	/// <unmanaged>SDL_EVENT_WINDOW_MINIMIZED</unmanaged>
	WindowMinimized = 520,
	/// <unmanaged>SDL_EVENT_WINDOW_MAXIMIZED</unmanaged>
	WindowMaximized = 521,
	/// <unmanaged>SDL_EVENT_WINDOW_RESTORED</unmanaged>
	WindowRestored = 522,
	/// <unmanaged>SDL_EVENT_WINDOW_MOUSE_ENTER</unmanaged>
	WindowMouseEnter = 523,
	/// <unmanaged>SDL_EVENT_WINDOW_MOUSE_LEAVE</unmanaged>
	WindowMouseLeave = 524,
	/// <unmanaged>SDL_EVENT_WINDOW_FOCUS_GAINED</unmanaged>
	WindowFocusGained = 525,
	/// <unmanaged>SDL_EVENT_WINDOW_FOCUS_LOST</unmanaged>
	WindowFocusLost = 526,
	/// <unmanaged>SDL_EVENT_WINDOW_CLOSE_REQUESTED</unmanaged>
	WindowCloseRequested = 527,
	/// <unmanaged>SDL_EVENT_WINDOW_TAKE_FOCUS</unmanaged>
	WindowTakeFocus = 528,
	/// <unmanaged>SDL_EVENT_WINDOW_HIT_TEST</unmanaged>
	WindowHitTest = 529,
	/// <unmanaged>SDL_EVENT_WINDOW_ICCPROF_CHANGED</unmanaged>
	WindowIccprofChanged = 530,
	/// <unmanaged>SDL_EVENT_WINDOW_DISPLAY_CHANGED</unmanaged>
	WindowDisplayChanged = 531,
	/// <unmanaged>SDL_EVENT_WINDOW_DISPLAY_SCALE_CHANGED</unmanaged>
	WindowDisplayScaleChanged = 532,
	/// <unmanaged>SDL_EVENT_WINDOW_OCCLUDED</unmanaged>
	WindowOccluded = 533,
	/// <unmanaged>SDL_EVENT_WINDOW_ENTER_FULLSCREEN</unmanaged>
	WindowEnterFullscreen = 534,
	/// <unmanaged>SDL_EVENT_WINDOW_LEAVE_FULLSCREEN</unmanaged>
	WindowLeaveFullscreen = 535,
	/// <unmanaged>SDL_EVENT_WINDOW_DESTROYED</unmanaged>
	WindowDestroyed = 536,
	/// <unmanaged>SDL_EVENT_WINDOW_PEN_ENTER</unmanaged>
	WindowPenEnter = 537,
	/// <unmanaged>SDL_EVENT_WINDOW_PEN_LEAVE</unmanaged>
	WindowPenLeave = 538,
	/// <unmanaged>SDL_EVENT_WINDOW_FIRST</unmanaged>
	WindowFirst = WindowShown,
	/// <unmanaged>SDL_EVENT_WINDOW_LAST</unmanaged>
	WindowLast = WindowPenLeave,
	/// <unmanaged>SDL_EVENT_KEY_DOWN</unmanaged>
	KeyDown = 0x300,
	/// <unmanaged>SDL_EVENT_KEY_UP</unmanaged>
	KeyUp = 769,
	/// <unmanaged>SDL_EVENT_TEXT_EDITING</unmanaged>
	TextEditing = 770,
	/// <unmanaged>SDL_EVENT_TEXT_INPUT</unmanaged>
	TextInput = 771,
	/// <unmanaged>SDL_EVENT_KEYMAP_CHANGED</unmanaged>
	KeymapChanged = 772,
	/// <unmanaged>SDL_EVENT_MOUSE_MOTION</unmanaged>
	MouseMotion = 0x400,
	/// <unmanaged>SDL_EVENT_MOUSE_BUTTON_DOWN</unmanaged>
	MouseButtonDown = 1025,
	/// <unmanaged>SDL_EVENT_MOUSE_BUTTON_UP</unmanaged>
	MouseButtonUp = 1026,
	/// <unmanaged>SDL_EVENT_MOUSE_WHEEL</unmanaged>
	MouseWheel = 1027,
	/// <unmanaged>SDL_EVENT_JOYSTICK_AXIS_MOTION</unmanaged>
	JoystickAxisMotion = 0x600,
	/// <unmanaged>SDL_EVENT_JOYSTICK_HAT_MOTION</unmanaged>
	JoystickHatMotion = 0x602,
	/// <unmanaged>SDL_EVENT_JOYSTICK_BUTTON_DOWN</unmanaged>
	JoystickButtonDown = 1539,
	/// <unmanaged>SDL_EVENT_JOYSTICK_BUTTON_UP</unmanaged>
	JoystickButtonUp = 1540,
	/// <unmanaged>SDL_EVENT_JOYSTICK_ADDED</unmanaged>
	JoystickAdded = 1541,
	/// <unmanaged>SDL_EVENT_JOYSTICK_REMOVED</unmanaged>
	JoystickRemoved = 1542,
	/// <unmanaged>SDL_EVENT_JOYSTICK_BATTERY_UPDATED</unmanaged>
	JoystickBatteryUpdated = 1543,
	/// <unmanaged>SDL_EVENT_JOYSTICK_UPDATE_COMPLETE</unmanaged>
	JoystickUpdateComplete = 1544,
	/// <unmanaged>SDL_EVENT_GAMEPAD_AXIS_MOTION</unmanaged>
	GamepadAxisMotion = 0x650,
	/// <unmanaged>SDL_EVENT_GAMEPAD_BUTTON_DOWN</unmanaged>
	GamepadButtonDown = 1617,
	/// <unmanaged>SDL_EVENT_GAMEPAD_BUTTON_UP</unmanaged>
	GamepadButtonUp = 1618,
	/// <unmanaged>SDL_EVENT_GAMEPAD_ADDED</unmanaged>
	GamepadAdded = 1619,
	/// <unmanaged>SDL_EVENT_GAMEPAD_REMOVED</unmanaged>
	GamepadRemoved = 1620,
	/// <unmanaged>SDL_EVENT_GAMEPAD_REMAPPED</unmanaged>
	GamepadRemapped = 1621,
	/// <unmanaged>SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN</unmanaged>
	GamepadTouchpadDown = 1622,
	/// <unmanaged>SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION</unmanaged>
	GamepadTouchpadMotion = 1623,
	/// <unmanaged>SDL_EVENT_GAMEPAD_TOUCHPAD_UP</unmanaged>
	GamepadTouchpadUp = 1624,
	/// <unmanaged>SDL_EVENT_GAMEPAD_SENSOR_UPDATE</unmanaged>
	GamepadSensorUpdate = 1625,
	/// <unmanaged>SDL_EVENT_GAMEPAD_UPDATE_COMPLETE</unmanaged>
	GamepadUpdateComplete = 1626,
	/// <unmanaged>SDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED</unmanaged>
	GamepadSteamHandleUpdated = 1627,
	/// <unmanaged>SDL_EVENT_FINGER_DOWN</unmanaged>
	FingerDown = 0x700,
	/// <unmanaged>SDL_EVENT_FINGER_UP</unmanaged>
	FingerUp = 1793,
	/// <unmanaged>SDL_EVENT_FINGER_MOTION</unmanaged>
	FingerMotion = 1794,
	/// <unmanaged>SDL_EVENT_CLIPBOARD_UPDATE</unmanaged>
	ClipboardUpdate = 0x900,
	/// <unmanaged>SDL_EVENT_DROP_FILE</unmanaged>
	DropFile = 0x1000,
	/// <unmanaged>SDL_EVENT_DROP_TEXT</unmanaged>
	DropText = 4097,
	/// <unmanaged>SDL_EVENT_DROP_BEGIN</unmanaged>
	DropBegin = 4098,
	/// <unmanaged>SDL_EVENT_DROP_COMPLETE</unmanaged>
	DropComplete = 4099,
	/// <unmanaged>SDL_EVENT_DROP_POSITION</unmanaged>
	DropPosition = 4100,
	/// <unmanaged>SDL_EVENT_AUDIO_DEVICE_ADDED</unmanaged>
	AudioDeviceAdded = 0x1100,
	/// <unmanaged>SDL_EVENT_AUDIO_DEVICE_REMOVED</unmanaged>
	AudioDeviceRemoved = 4353,
	/// <unmanaged>SDL_EVENT_AUDIO_DEVICE_FORMAT_CHANGED</unmanaged>
	AudioDeviceFormatChanged = 4354,
	/// <unmanaged>SDL_EVENT_SENSOR_UPDATE</unmanaged>
	SensorUpdate = 0x1200,
	/// <unmanaged>SDL_EVENT_PEN_DOWN</unmanaged>
	PenDown = 0x1300,
	/// <unmanaged>SDL_EVENT_PEN_UP</unmanaged>
	PenUp = 4865,
	/// <unmanaged>SDL_EVENT_PEN_MOTION</unmanaged>
	PenMotion = 4866,
	/// <unmanaged>SDL_EVENT_PEN_BUTTON_DOWN</unmanaged>
	PenButtonDown = 4867,
	/// <unmanaged>SDL_EVENT_PEN_BUTTON_UP</unmanaged>
	PenButtonUp = 4868,
	/// <unmanaged>SDL_EVENT_RENDER_TARGETS_RESET</unmanaged>
	RenderTargetsReset = 0x2000,
	/// <unmanaged>SDL_EVENT_RENDER_DEVICE_RESET</unmanaged>
	RenderDeviceReset = 8193,
	/// <unmanaged>SDL_EVENT_POLL_SENTINEL</unmanaged>
	PollSentinel = 0x7F00,
	/// <unmanaged>SDL_EVENT_USER</unmanaged>
	User = 0x8000,
	/// <unmanaged>SDL_EVENT_LAST</unmanaged>
	Last = 0xFFFF,
}

public enum SDL_eventaction
{
	/// <unmanaged>SDL_ADDEVENT</unmanaged>
	AddEvent = 0,
	/// <unmanaged>SDL_PEEKEVENT</unmanaged>
	PeekEvent = 1,
	/// <unmanaged>SDL_GETEVENT</unmanaged>
	GetEvent = 2,
}

public enum SDL_HintPriority
{
	/// <unmanaged>SDL_HINT_NORMAL</unmanaged>
	Normal = 1,
	/// <unmanaged>SDL_HINT_OVERRIDE</unmanaged>
	Override = 2,
}

[Flags]
public enum SDL_BlendMode
{
	/// <unmanaged>SDL_BLENDMODE_NONE</unmanaged>
	None = 0x00000000,
	/// <unmanaged>SDL_BLENDMODE_BLEND</unmanaged>
	Blend = 0x00000001,
	/// <unmanaged>SDL_BLENDMODE_ADD</unmanaged>
	Add = 0x00000002,
	/// <unmanaged>SDL_BLENDMODE_MOD</unmanaged>
	Mod = 0x00000004,
	/// <unmanaged>SDL_BLENDMODE_MUL</unmanaged>
	Mul = 0x00000008,
	/// <unmanaged>SDL_BLENDMODE_INVALID</unmanaged>
	Invalid = 0x7FFFFFFF,
}

public enum SDL_BlendOperation
{
	/// <unmanaged>SDL_BLENDOPERATION_ADD</unmanaged>
	Add = 0x1,
	/// <unmanaged>SDL_BLENDOPERATION_SUBTRACT</unmanaged>
	Subtract = 0x2,
	/// <unmanaged>SDL_BLENDOPERATION_REV_SUBTRACT</unmanaged>
	RevSubtract = 0x3,
	/// <unmanaged>SDL_BLENDOPERATION_MINIMUM</unmanaged>
	Minimum = 0x4,
	/// <unmanaged>SDL_BLENDOPERATION_MAXIMUM</unmanaged>
	Maximum = 0x5,
}

public enum SDL_BlendFactor
{
	/// <unmanaged>SDL_BLENDFACTOR_ZERO</unmanaged>
	Zero = 0x1,
	/// <unmanaged>SDL_BLENDFACTOR_ONE</unmanaged>
	One = 0x2,
	/// <unmanaged>SDL_BLENDFACTOR_SRC_COLOR</unmanaged>
	SrcColor = 0x3,
	/// <unmanaged>SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR</unmanaged>
	OneMinusSrcColor = 0x4,
	/// <unmanaged>SDL_BLENDFACTOR_SRC_ALPHA</unmanaged>
	SrcAlpha = 0x5,
	/// <unmanaged>SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA</unmanaged>
	OneMinusSrcAlpha = 0x6,
	/// <unmanaged>SDL_BLENDFACTOR_DST_COLOR</unmanaged>
	DstColor = 0x7,
	/// <unmanaged>SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR</unmanaged>
	OneMinusDstColor = 0x8,
	/// <unmanaged>SDL_BLENDFACTOR_DST_ALPHA</unmanaged>
	DstAlpha = 0x9,
	/// <unmanaged>SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA</unmanaged>
	OneMinusDstAlpha = 0xA,
}

