// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Runtime.InteropServices;

namespace SDL;

[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
public unsafe delegate void* SDL_ClipboardDataCallback(nint userdata, sbyte* mime_type, nuint* size);

[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
public unsafe delegate void SDL_ClipboardCleanupCallback(nint userdata);

public unsafe partial class SDL
{
	[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SDL_SetClipboardText")]
	public static extern int SDL_SetClipboardText(sbyte* text);

	[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SDL_GetClipboardText")]
	public static extern sbyte* SDL_GetClipboardText();

	[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SDL_HasClipboardText")]
	public static extern SDL_bool SDL_HasClipboardText();

	[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SDL_SetPrimarySelectionText")]
	public static extern int SDL_SetPrimarySelectionText(sbyte* text);

	[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SDL_GetPrimarySelectionText")]
	public static extern sbyte* SDL_GetPrimarySelectionText();

	[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SDL_HasPrimarySelectionText")]
	public static extern SDL_bool SDL_HasPrimarySelectionText();

	[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SDL_SetClipboardData")]
	public static extern int SDL_SetClipboardData(SDL_ClipboardDataCallback callback, SDL_ClipboardCleanupCallback cleanup, nint userdata, sbyte* mime_types, nuint num_mime_types);

	[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SDL_ClearClipboardData")]
	public static extern int SDL_ClearClipboardData();

	[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SDL_GetClipboardData")]
	public static extern nint SDL_GetClipboardData(sbyte* mime_type, nuint* size);

	[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "SDL_HasClipboardData")]
	public static extern SDL_bool SDL_HasClipboardData(sbyte* mime_type);

}
